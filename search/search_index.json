{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Bases de Datos","text":"<p>En este repositorio vamos a agrupar los materiales y actividades realizadas en el m\u00f3dulo 0484 de Bases de Datos del CFGS de Desarrollo de Aplicaciones Multiplataforma (DAM), cuyo curriculum viene fijado por el Real Decreto 405/2023, impartido en el IES Severo Ochoa de Elche.</p> <p>La competencia que se trabaja en este curso es:</p> <ul> <li>d) Gestionar bases de datos, interpretando su dise\u00f1o l\u00f3gico y verificando integridad, consistencia, seguridad y accesibilidad de los datos.</li> </ul> <p>Y el objetivo general correspondiente es:</p> <ul> <li>e) Interpretar el dise\u00f1o l\u00f3gico, verificando los par\u00e1metros establecidos para gestionar bases de datos.</li> </ul>"},{"location":"index.html#resultados-de-aprendizaje","title":"Resultados de Aprendizaje","text":"<p>Los diferentes resultados de aprendizaje (RA) trabajados junto con su peso aproximado son:</p> C\u00f3digo Descripci\u00f3n Peso (%) RA1 Reconoce los elementos de las bases de datos analizando sus funciones y valorando la utilidad de los sistemas gestores. 8 RA2 Crea bases de datos definiendo su estructura y las caracter\u00edsticas de sus elementos seg\u00fan el modelo relacional. 12 RA3 Consulta la informaci\u00f3n almacenada en una base de datos empleando asistentes, herramientas gr\u00e1ficas y el lenguaje de manipulaci\u00f3n de datos. 25 RA4 Modifica la informaci\u00f3n almacenada en la base de datos utilizando asistentes, herramientas gr\u00e1ficas y el lenguaje de manipulaci\u00f3n de datos. 10 RA5 Desarrolla procedimientos almacenados evaluando y utilizando las sentencias del lenguaje incorporado en el sistema gestor de bases de datos. 15 RA6 Dise\u00f1a modelos relacionales normalizados interpretando diagramas entidad/relaci\u00f3n. 15 RA7 Gestiona la informaci\u00f3n almacenada en bases de datos no relacionales, evaluando y utilizando las posibilidades que proporciona el sistema gestor. 15"},{"location":"index.html#unidades-de-trabajo","title":"Unidades de Trabajo","text":"<p>A partir de los RA, hemos definido 13 unidades de trabajo (UT).</p> <p>El m\u00f3dulo de Base de Datos viene fijado con una carga lectiva de 160h, repartidas en 5 sesiones semanales, a lo largo de 32 semanas. Este curso se ha planificado sobre un total de 28 semanas, dejando las \u00faltimas 4 semanas para el desarrollo, por parte del alumnado, del programa formativo dual en la empresa. Estas 28 semanas hacen un total de 140h lectivas.</p> <p>A continuaci\u00f3n, en la siguiente tabla y a modo de mapa general, se muestran las diferentes UT y los RA que cubren, indicando la carga horaria aproximada empleada en cada una de ellas:</p> Unidades de Trabajo RA1 RA2 RA3 RA4 RA5 RA6 RA7 1. Introducci\u00f3n a las bases de datos 9 2. Dise\u00f1o conceptual. Modelo Entidad/Relaci\u00f3n 12 3. Dise\u00f1o l\u00f3gico: Modelo relacional 7 4. Dise\u00f1o l\u00f3gico: Transformaci\u00f3n de modelos 12 5. Modelo F\u00edsico - SQL - Instrucciones DDL y DML 7 6 6. Lenguaje SQL: selecci\u00f3n de datos I X 7. Lenguaje SQL: selecci\u00f3n de datos II X 8. Lenguaje SQL: selecci\u00f3n de datos III X 9. Lenguaje SQL: Control de Datos DCL y Transacciones TCL X X 10. Lenguaje Programaci\u00f3n BBDD I X 11. Lenguaje Programaci\u00f3n BBDD II X 12. Bases de datos NoSQL. Clave Valor. 2 8 13. Bases de datos documental. MongoDB. 12 <p>Si nos centramos en la temporalizaci\u00f3n, hemos agrupado los unidades en diferentes bloques repartidos a lo largo del curso del siguiente modo:</p> <pre><code>timeline\n    title Planificaci\u00f3n temporal\n    section 1\u00aa Evaluaci\u00f3n\n        Introducci\u00f3n : Presentaci\u00f3n : 1.- Intro BD \n        Dise\u00f1o : 2.- Modelo ER : 3.- Modelo relacional : 4.- Transformaci\u00f3n\n        SQL Definici\u00f3n: 5.- DDL\n    section 2\u00aa Evaluaci\u00f3n\n        SQL Consulta : 6.- SQL I : 7.- SQL II : 8.- SQL III\n        SQL Control : 9.- DCL\n    section 3\u00aa Evaluaci\u00f3n\n        PL-SQL : 10.- Programaci\u00f3n I : 11.- Programaci\u00f3n II\n        NoSQL : 12.- Redis : 13.- MongoDB\n        Dual</code></pre>"},{"location":"index.html#evaluacion","title":"Evaluaci\u00f3n","text":"<p>Para la evaluaci\u00f3n del m\u00f3dulo de Base de Datos se ponderar\u00e1n los resultados de aprendizaje respecto a los porcentajes indicados en el apartado anterior.</p> <p>Para la evaluaci\u00f3n de cada RA, emplearemos diferentes Instrumentos de Evaluaci\u00f3n (IE), como pueden ser:</p> <ul> <li>Actividades de ense\u00f1anza/aprendizaje, normalmente realizadas en el aula, acompa\u00f1adas de una r\u00fabrica. Distinguiremos las actividades de clase (AC), las cuales se calificar\u00e1n normalmente sobre una escala de 3 puntos, de las actividades de refuerzo (AR), tambi\u00e9n sobre 3 puntos para consolidar uno o varios CE no conseguidos, as\u00ed como actividades de profundizaci\u00f3n (AP) que aportar\u00e1n puntos extra al RA.</li> <li>Pr\u00e1cticas (PR) o trabajo de investigaci\u00f3n (TI), con una carga temporal variable, entre una semana o toda una unidad did\u00e1ctica. Normalmente calificados sobre 10 puntos.</li> <li>Proyectos (PY), bien de desarrollo individual o en parejas, sobre un determinado RA. Normalmente calificados sobre 30 puntos.</li> <li>Pruebas objetivas (PO). En algunos RA, y no de forma generalizada, se realizar\u00e1 una prueba objetiva (ya sea escrita o en ordenador). Normalmente calificados sobre 30 puntos.</li> </ul> <p>Para calcular la calificaci\u00f3n de cada resultado de aprendizaje, se realizar\u00e1 la media ponderada simple de los diferentes instrumentos de evaluaci\u00f3n empleados en dicho RA.</p> <p>Todas las calificaciones, tanto de los instrumentos de evaluaci\u00f3n como de los propios RA, se podr\u00e1 consultar en todo momento en la plataforma Aules del curso.</p>"},{"location":"index.html#materiales","title":"Materiales","text":"<p>A lo largo del curso, iremos trabajando diferentes materiales disponibles en este espacio web.</p> <p>Cada una de las UT comenzar\u00e1 con un resumen de la Propuesta Did\u00e1ctica que se plantea, los elementos que va a cubrir, tanto el RA a trabajar como sus criterios de evaluaci\u00f3n (CE) asociados, as\u00ed como un cuestionario inicial para reflexionar nuestro conocimiento previo.</p> <p>En la parte final de cada sesi\u00f3n, adem\u00e1s de diferentes recursos de Referencia para ampliar conocimientos, se plantean una serie de Actividades que iremos trabajando en su mayor medida en el aula. Cada una de las actividades indica el RA que cubre, los CE que trabaja as\u00ed como su calificaci\u00f3n, la cual luego se ver\u00e1 reflejada en la r\u00fabrica de la entrega dicha tarea en Aules. Adem\u00e1s, las actividades est\u00e1n codificadas con el prefijo del tipo de instrumento de evaluaci\u00f3n, as\u00ed como la unidad que cubren (por ejemplo, la actividad AC207, ser\u00e1 la 7\u00aa actividad de clase de la unidad 2).</p> <p>Respecto a los recursos tecnol\u00f3gicos, aunque inicialmente trabajaremos mucho con papel y l\u00e1piz (para modelar es m\u00e1s r\u00e1pido crear esbozos en papel), luego pasaremos a utilizar los SGBD de MariaDB y PostgreSQL indistintamente, tanto mediante contenedores Docker como con soluciones cloud en AWS. En las \u00faltimas unidades, trabajaremos con Redis y MongoDB.</p>"},{"location":"01intro.html","title":"Introducci\u00f3n a las bases de datos","text":"","tags":["Fundamentos","RA1"]},{"location":"01intro.html#propuesta-didactica","title":"Propuesta did\u00e1ctica","text":"<p>En esta unidad vamos a trabajar el RA1: Reconoce los elementos de las bases de datos analizando sus funciones y valorando la utilidad de los sistemas gestores.</p>","tags":["Fundamentos","RA1"]},{"location":"01intro.html#criterios-de-evaluacion","title":"Criterios de evaluaci\u00f3n","text":"<ul> <li>CE1a: Se han analizado los sistemas l\u00f3gicos de almacenamiento y sus caracter\u00edsticas.</li> <li>CE1b: Se han identificado los distintos tipos de bases de datos seg\u00fan el modelo de datos utilizado.</li> <li>CE1c: Se han identificado los distintos tipos de bases de datos en funci\u00f3n de la ubicaci\u00f3n de la informaci\u00f3n.</li> <li>CE1d: Se ha evaluado la utilidad de un sistema gestor de bases de datos.</li> <li>CE1e: Se ha reconocido la funci\u00f3n de cada uno de los elementos de un sistema gestor de bases de datos.</li> <li>CE1f: Se han clasificado los sistemas gestores de bases de datos.</li> <li>CE1i: Se ha identificado la legislaci\u00f3n vigente sobre protecci\u00f3n de datos.</li> </ul>","tags":["Fundamentos","RA1"]},{"location":"01intro.html#contenidos","title":"Contenidos","text":"<p>Almacenamiento de la informaci\u00f3n:</p> <ul> <li>Ficheros (planos, indexados, acceso directo, entre otros).</li> <li>Bases de datos. Conceptos, usos y tipos seg\u00fan el modelo de datos, la ubicaci\u00f3n de la informaci\u00f3n.</li> <li>Sistemas gestores de base de datos: Funciones, componentes y tipos.</li> <li>Legislaci\u00f3n sobre protecci\u00f3n de datos.</li> </ul> <p>Cuestionario inicial</p> <ol> <li>\u00bfQu\u00e9 es una base de datos (BD)?</li> <li>\u00bfY qu\u00e9 relaci\u00f3n existe entre una BD y un sistema gestor de base de datos (SGBD)?</li> <li>\u00bfPuedes citar tres SGBD?</li> <li>\u00bfPara qu\u00e9 sirve el diccionario de datos de una BD?</li> <li>\u00bfQu\u00e9 relaci\u00f3n hay entre la integridad y la redundancia de los datos?</li> <li>\u00bfSabes que significan las siglas ACID?</li> <li>\u00bfPodemos almacenar todos los datos personales de los usuarios de nuestras aplicaciones?</li> </ol>","tags":["Fundamentos","RA1"]},{"location":"01intro.html#programacion-de-aula-9h","title":"Programaci\u00f3n de Aula (9h)","text":"<p>Esta unidad es la primera, con lo que se imparte en la primera evaluaci\u00f3n, con una duraci\u00f3n estimada de 9 horas, entre la segunda y tercera semana de septiembre:</p> Sesi\u00f3n Contenidos Actividades Criterios trabajados 1 Presentaci\u00f3n de la asignatura 2 Sistemas de almacenamiento. Ficheros 3 Supuesto ficheros AC101 CE1a 4 Bases de datos AC102 CE1b, CE1c 5 MS Listas AC103 CE1d 6 Sistemas gestores de bases de datos 7 Investigaci\u00f3n SGBD AC104 CE1e, CE1f 8 Arquitecturas de bases de datos 9 Legislaci\u00f3n sobre protecci\u00f3n de datos AC105 CE1i","tags":["Fundamentos","RA1"]},{"location":"01intro.html#introduccion","title":"Introducci\u00f3n","text":"<p>Seguro que has escuchado la frase \"Los datos son el petroleo del siglo XXI\". A d\u00eda de hoy se generan datos de manera desorbitada, y estos son muy importantes para las empresas porque se puede extraer mucha informaci\u00f3n.</p> <p>Pero, \u00bfsabemos qu\u00e9 diferencia hay entre un dato e informaci\u00f3n? \u00bfCu\u00e1l es m\u00e1s importante?</p> <p>Un dato es un hecho, un evento, una transacci\u00f3n, que ha sido registrado. En cambio, consideramos informaci\u00f3n a los datos que han sido procesados y comunicados de tal manera que pueden ser entendidos e interpretados.</p> <p>Por ejemplo, si decimos que hace 22\u00baC \u00bfEs un dato o es informaci\u00f3n? Y si decimos que hace 22\u00aaC en Sevilla el 15 de Julio, \u00bftenemos informaci\u00f3n? </p> <p>Los datos necesitan de un contexto para poder obtener informaci\u00f3n. Muchas veces, dicho contexto, son m\u00e1s datos que nos permiten relacionar unos con otros. Una vez que se asimila la informaci\u00f3n, se transforma en conocimiento</p> Evoluci\u00f3n de los datos - https://cursos.clavijero.edu.mx <p>As\u00ed pues, lo importante es la informaci\u00f3n, pero necesitamos de datos para obtenerla.</p> <p>Si nos centramos en el mundo empresarial, todas las empresas tienen un sistema de informaci\u00f3n, entendido como un conjunto de elementos destinados al tratamiento y administraci\u00f3n de datos e informaci\u00f3n, organizados y listos para su posterior uso, y generados para cubrir una necesidad (objetivo). Estos sistemas de informaci\u00f3n pueden (o no) estar informatizados. </p> <p>\u00bfY qu\u00e9 tienen que ver el sistema de informaci\u00f3n con las bases de datos? Pues como toda empresa tiene una forma de trabajar, es necesario que almacene sus datos para poder extraer informaci\u00f3n, y saber si por ejemplo, deben reponer un producto, hacer alg\u00fan tipo de oferta, o contratar a un nuevo empleado porque est\u00e1 perdiendo ventas por no poder atender a los clientes.</p>","tags":["Fundamentos","RA1"]},{"location":"01intro.html#ficheros","title":"Ficheros","text":"<p>En los inicios del desarrollo de las aplicaciones, el almacenamiento de la informaci\u00f3n que gestiona cualquier aplicaci\u00f3n inform\u00e1tica era mediante el uso de archivos o ficheros (files en ingl\u00e9s). Esto provocaba que las aplicaciones estuvieran \"acopladas\" a los ficheros (dependencia f\u00edsico-l\u00f3gica), y dificultaba compartir datos entre diferentes aplicaciones, as\u00ed como el acceso concurrente a los mismos.</p> <p>Respecto a los ficheros, conviene conocer que existen ficheros con diferente estructura y formato, como pueden ser de tipo texto (o plano) o binario y con un determinado formato, como puede ser CSV, JSON, XML, Parquet o Avro. Los ficheros normalmente contiene un nombre y una extensi\u00f3n, la cual indica el formato. As\u00ed pues, <code>clientes.csv</code> ser\u00eda un fichero en formato CSV que contiene datos sobre clientes.</p> <p>Autoevaluaci\u00f3n</p> <p>Hemos comentado que tenemos archivos de tipo texto y binario, y con su extensi\u00f3n, es f\u00e1cil que conozcas muchos formatos.</p> <p>Por ejemplo:</p> <ul> <li>Texto: fichero de texto en formato TXT, fichero de configuraci\u00f3n en formato INI, p\u00e1gina web en formato HTML, ...</li> <li>Binario: imagen en formato JPG, audio en formato MP3, archivos comprimidos en formato ZIP, ...</li> </ul> <p>\u00bfPuedes citar tres m\u00e1s de cada tipo?</p> <p>Formalmente, podemos definir un fichero como una secuencia de n\u00fameros binarios que organiza informaci\u00f3n relacionada a un mismo aspecto.</p> <p>Cuando los ficheros almacenan datos, se dice que constan de registros, los cuales son una estructura l\u00f3gica que agrupa los datos de un mismo elemento (u objeto). Por ejemplo en un fichero de estudiantes, cada registro contiene datos de un \u00fanico estudiante. Si el archivo contiene datos de 10.000 estudiantes, tendr\u00e1 10.000 registros. Adem\u00e1s, cada uno de los registros si divide en campos que contienen cada una de las informaciones elementales que forman un registro (por ejemplo, el nombre del estudiante o su email).</p> <p>Discos s\u00f3lidos</p> <p>Para que no se pierda la informaci\u00f3n, los ficheros se persisten en sistemas de almacenamiento, como discos duros mec\u00e1nicos o s\u00f3lidos. Es cierto que mediante los discos SSD y NVMe el acceso a disco cada vez es m\u00e1s eficiente y se evita la fragmentaci\u00f3n de los datos.</p> Acceso secuencial vs aleatorio - Wikipedia <p>Dependiendo del acceso, tenemos diferentes tipos de ficheros:</p> <ul> <li> <p>Secuenciales: los registros se almacenan uno detr\u00e1s de otro. Antiguamente se utilizaba cuando los ficheros se persist\u00edan mediante cintas magn\u00e9ticas, y provocaba que para acceder a un registro, era necesario recorrer todos los anteriores.</p> </li> <li> <p>De acceso directo o aleatorio: permite el acceso directo al registro que nos interesa, pudiendo saltar de uno a otro sin necesidad de recorrer los anteriores.</p> </li> </ul> <p>Respecto a los fichero secuenciales destacamos dos tipos:</p> <ul> <li>Encadenados: cada registro, adem\u00e1s de sus datos, almacenan un puntero (direcci\u00f3n de memoria) con la direcci\u00f3n del siguiente registro.</li> <li>Indexados: el fichero se divide en dos zonas, una primera con la informaci\u00f3n a modo de fichero secuencial con todos los registros uno detr\u00e1s de otro, y una segunda donde se guardan los \u00edndice (a modo de tabla de contenidos o \u00edndice de un libro indicando donde se encuentra cada registro), los cuales tienen un campo clave y un campo direcci\u00f3n con la direcci\u00f3n del registro del fichero (estos conceptos los profundizar\u00e9is m\u00e1s en el m\u00f3dulo profesional de Sistemas Inform\u00e1ticos y en Programaci\u00f3n).</li> </ul> <p>M\u00e1s informaci\u00f3n</p> <p>Si necesitas m\u00e1s informaci\u00f3n sobre los diferentes tipos de archivos, se recomienda consultar el recurso https://jorgesanchez.net/manuales/gbd/sgbd.html#h25.</p> <p>Respecto a las operaciones que se pueden realizar con ficheros (y que trabajar\u00e1s con mayor profundidad en el m\u00f3dulo profesional de Programaci\u00f3n) podemos destacar al apertura o cierre de los archivos, la lectura o escritura, as\u00ed como el posicionamiento en un determinado lugar (o registro). Otras operaciones asociadas a los ficheros son:</p> <ul> <li>fragmentaci\u00f3n y compactaci\u00f3n: cuando toda la informaci\u00f3n de un registro no se almacena de forma consecutiva, y mediante punteros se van enlazando las partes, se dice que la informaci\u00f3n est\u00e1 fragmentada. Para evitarlo, se compactan los ficheros para que toda la informaci\u00f3n se pueda leer m\u00e1s eficientemente.</li> <li>compresi\u00f3n: la informaci\u00f3n se codifica mediante algoritmos de compresi\u00f3n que reducen el tama\u00f1o de los fichero.</li> <li>cifrado de datos: la informaci\u00f3n se encripta para hacer que el contenido sea ilegible.</li> </ul> <p>Una vez presentados los conceptos de los ficheros, conviene saber que actualmente su uso se ha visto reducido a datos espec\u00edficos de las aplicaciones como archivos de configuraci\u00f3n y datos privados, cuando no es necesario que varios usuarios accedan a la informaci\u00f3n de forma concurrente.</p>","tags":["Fundamentos","RA1"]},{"location":"01intro.html#bases-de-datos","title":"Bases de datos","text":"<p>Si bien los ficheros fueron una soluci\u00f3n factible mientras s\u00f3lo acced\u00edan a los archivos una \u00fanica aplicaci\u00f3n, con la aparici\u00f3n de las redes de ordenadores, y la explosi\u00f3n de internet, la gesti\u00f3n de los sistemas de almacenamiento mediante ficheros se vio sustituida por las bases de datos, que s\u00ed permiten que diferentes aplicaciones y usuarios accedan de forma simult\u00e1nea a los datos.</p> <p>Formalmente, podemos definir una base de datos como un conjunto de datos interrelacionados, con caracter\u00edsticas de integridad y redundancia m\u00ednima, accesibles por varios usuarios y aplicaciones.</p> <p>Mediante esta definici\u00f3n estamos introduciendo dos t\u00e9rminos que conviene tener muy presente:</p> <ul> <li>Integridad: implica que los datos son correctos y completos.</li> <li>Redundancia m\u00ednima: cada dato s\u00f3lo existe en un \u00fanico lugar, evitando duplicidades.</li> </ul> <p>Respecto a las caracter\u00edsticas de las bases de datos:</p> Ventajas Inconvenientes Independencia de los datos y los programas y procesos Instalaci\u00f3n costosa Menor redundancia Personal cualificado Integridad de los datos Implantaci\u00f3n larga y costosa Mayor seguridad Ausencia de est\u00e1ndares reales Datos m\u00e1s documentados \u2192 metadatos Acceso m\u00e1s eficiente Menor espacio de almacenamiento Acceso simult\u00e1neo \u2192 usuarios concurrentes <p>Toda base de datos debe permitir insertar, modificar y borrar datos.</p> <p>Una base de datos est\u00e1 compuesta por datos y metadatos. Los metadatos son datos que especifican la estructura de la base de datos, es decir, qu\u00e9 tipo de datos almacenan (texto, num\u00e9rico,...), qu\u00e9 nombre tiene cada dato, c\u00f3mo se agrupan, relacionan, etc... Estos metadatos se almacenan en el diccionario de datos.</p>","tags":["Fundamentos","RA1"]},{"location":"01intro.html#tipos-de-bases-de-datos","title":"Tipos de Bases de Datos","text":"<p>Dependiendo de la caracter\u00edstica que evaluemos podemos clasificar las bases de datos por:</p> Clasificaci\u00f3n Tipos Contenido Informaci\u00f3n actual, directorios, documentales Uso Individual, compartida, acceso p\u00fablico, propietarias Variabilidad de la informaci\u00f3n Est\u00e1ticas, din\u00e1micas Localizaci\u00f3n de los datos Centralizadas (anfitri\u00f3n, cliente/servidor), distribuidas Organismo productor P\u00fablicas o de la administraci\u00f3n, sin \u00e1nimo de lucro, privadas o comerciales, cooperaci\u00f3n en red Acceso Local, CD/DVD, en l\u00ednea (conexi\u00f3n privada o web) Cobertura tem\u00e1tica Cient\u00edfico-tecnol\u00f3gicas, econ\u00f3mico-empresariales, medios de comunicaci\u00f3n, pol\u00edtico- administrativas y jur\u00eddicas, sanitarias <p>Conviene pararse en los tipos de bases de datos existentes dependiendo de la ubicaci\u00f3n. Aunque volveremos a ellas en las \u00faltimas unidades donde estudiemos los sistemas NoSQL, es importante tener claro las diferentes arquitecturas f\u00edsicas existentes hoy en d\u00eda. Por un lado, tenemos los sistemas centralizados donde se sigue un modelo cliente-servidor. En un servidor de internet, bien sea un VPS o un servicio gestionado por un proveedor cloud, la base de datos reside en una \u00fanica m\u00e1quina (se conoce como servidor) y las diferentes aplicaciones y servicios que consumen dichos datos son los clientes que acceden a la base de datos mediante conexiones remotas.</p> <p>Si el sistema crece y la carga de usuario supera la capacidad del servidor, es necesario migrar a un modelo m\u00e1s potente (y normalmente m\u00e1s caro) como son las bases de datos distribuidas, donde los datos se reparten entre varias m\u00e1quinas, particionando los datos o fragment\u00e1ndolos dependiendo de las necesidades de las aplicaciones, incrementando la complejidad del sistema para dar soporte a la sincronizaci\u00f3n de los datos y la tolerancia a fallos.</p>","tags":["Fundamentos","RA1"]},{"location":"01intro.html#modelos-de-datos","title":"Modelos de datos","text":"<p>Un modelo simboliza una parte del mundo real, de forma que se simplifique su manipulaci\u00f3n. Por ejemplo, un modelo de una ciudad ser\u00eda un mapa a escala 1:100.</p> <p>Un modelo de datos es un conjunto de herramientas conceptuales para describir los datos, sus relaciones, su sem\u00e1ntica y sus restricciones.</p> <p>Inicialmente, los modelos de datos primitivos se basaban en sistemas de ficheros, tal como hemos visto en el apartado anterior.</p> <p>A continuaci\u00f3n, se definieron los modelos cl\u00e1sicos:</p> <ul> <li>Jer\u00e1rquicos (finales de los 60): almacenan la informaci\u00f3n en forma de \u00e1rbol y unidireccional, de arriba hac\u00eda abajo. La informaci\u00f3n se almacena en nodos, y los nodos se relacionan mediante punteros, permitiendo que un nodo padre puede tener muchos nodos hijos (relaciones de uno a muchos).</li> <li>En red (principios de los 70): a partir de los modelos jer\u00e1rquicos, los datos se relacionan en forma de red o grafo, permitiendo la relaciones de muchos a muchos, de manera que un nodo hijo puede tener varios nodos padre, y viceversa.</li> <li>Relacionales (finales de los 70 hasta hoy en d\u00eda): se basan en la relaci\u00f3n entre los datos, mediante el uso de tablas bidimensionales (filas=ocurrencia, columnas=atributo) que contienen campos que se relacionan con campos de otras tablas (este es el modelo m\u00e1s difundido y es que el estudiaremos en profundidad en este curso).</li> </ul> <p>Tras los cl\u00e1sicos, hubo un movimiento por el uso de modelos avanzados que no terminaron de cuajar:</p> <ul> <li>Orientadas a objetos (d\u00e9cada de los 80): soportan el paradigma de programaci\u00f3n orientada a objetos, permitiendo la creaci\u00f3n de tipos de datos compuestos y herencia entre los diferentes tipos.</li> </ul> <p>Con la explosi\u00f3n de internet, y la necesidad de trabajar con grandes conjuntos de datos, aparecieron y se establecieron en el mercado los modelos:</p> <ul> <li>Multidimensionales (d\u00e9cada de los 90 y explosi\u00f3n en 2010 con el Big Data): se utilizan para desarrollar aplicaciones de Data Warehouse de procesamiento anal\u00edtico en l\u00ednea (OLAP). Las tablas se estructuran como cubos de informaci\u00f3n, mediante una tabla de hechos y varias tablas de dimensiones (tiempo, lugar, etc..).</li> <li>Soluciones NoSQL (d\u00e9cada del 2000 hasta hoy en d\u00eda): como complemento a los modelos relacionales, ofrecen alternativas donde prima el rendimiento y escalabilidad de los datos. Destacan los modelos:<ul> <li>Clave-Valor: se almacenan datos a los cuales s\u00f3lo se puede acceder mediante una clave. </li> <li>Documental: utiliza estructuras de documentos JSON que contiene la informaci\u00f3n de varias entidades en un mismo documento</li> <li>Grafos: Uso de nodos y v\u00e9rtices para navegar por los datos.</li> <li>Basado en columnas: gira las tablas para almacenar los datos por columnas en vez de hacerlo por filas.</li> </ul> </li> </ul> <p>Estos cuatro \u00faltimos modelos los estudiaremos en profundidad en la unidad 12 - Sistemas NoSQL.</p>","tags":["Fundamentos","RA1"]},{"location":"01intro.html#sistemas-gestores-de-bases-de-datos","title":"Sistemas Gestores de Bases de Datos","text":"<p>Un sistema gestor de base de datos (SGBD), tambi\u00e9n conocido como DataBase Management System (DBMS), es la herramienta de software que permite la creaci\u00f3n, manipulaci\u00f3n y administraci\u00f3n de bases de datos. As\u00ed pues, tanto Oracle, MySQL, MariaDB, OpenOffice/LibreOffice Base, Access, MongoDB o PostgreSQL son sistemas gestores de bases de datos, y no bases de datos en s\u00ed.</p> Relaci\u00f3n entre BD y SGDB - cibertareas.com <p>Formalmente, un sistema gestor de bases de datos es una herramienta de prop\u00f3sito general que permiten crear bases de datos de cualquier tama\u00f1o y complejidad, con prop\u00f3sitos espec\u00edficos distintos. Ofrece la interfaz entre el usuario y las bases de datos, mediante herramientas para la manipulaci\u00f3n y administraci\u00f3n de las mismas.</p>","tags":["Fundamentos","RA1"]},{"location":"01intro.html#funciones","title":"Funciones","text":"<p>Las funciones de un SGBD son:</p> <ul> <li>Asegurar la independencia de los datos respecto a las aplicaciones y los usuarios.</li> <li>Ofrecer eficiencia y seguridad a la hora de extraer o almacenar informaci\u00f3n en una base de datos, protegiendo el acceso a usuarios sin los permisos adecuados.</li> <li>Asegurar la integridad de los datos en todo momento, detectando las operaciones err\u00f3neas que introducen inconsistencia en los datos y permitiendo el uso de transacciones en las operaciones.</li> <li>Permitir el acceso concurrente y recuperaci\u00f3n en caso de fallo (tolerancia a fallos).</li> <li>Facilitar la administraci\u00f3n de los datos.</li> </ul> <p></p> <p>ACID</p> <p>Las propiedades ACID sobre un SGBD aseguran la transaccionalidad sobre los datos mediante:</p> <ul> <li>Atomicidad: las transacciones implican que se realizan todas las operaciones o no se realiza ninguna.</li> <li>Consistencia: la base de datos asegura que los datos pasan de un estado v\u00e1lido o otro tambi\u00e9n.</li> <li>Isolation (Aislamiento): Una transacci\u00f3n no afecta a otras transacciones, de manera que la modificaci\u00f3n de un registro / documento no es visible por otras lecturas hasta que ha finalizado la transacci\u00f3n. Esto implica que ninguna transacci\u00f3n obtiene una versi\u00f3n intermedia de los datos.</li> <li>Durabilidad: La escritura de los datos asegura que una vez finalizada una operaci\u00f3n, los datos no se perder\u00e1n.</li> </ul>","tags":["Fundamentos","RA1"]},{"location":"01intro.html#componentes","title":"Componentes","text":"<p>Un SGBD se compone de:</p> <ul> <li>Diccionario de datos: metadatos con las estructuras de las diferentes bases de datos, relaciones entre los datos, restricciones existentes as\u00ed como informaci\u00f3n sobre las cuentas y permisos de los usuarios.</li> <li>Espacio de datos: zona sonde se almacenan los datos en s\u00ed. Se pueden organizar de diferentes maneras, dependiente del sistemas gestor. Por ejemplo, Oracle lo realiza mediante el uso de tablespaces y otros gestores con el concepto de base de datos.</li> <li>Un conjunto de herramientas, las cuales suele gestionar el rol de DBA (Database Administrator) para<ul> <li>Crear y especificar los datos (mediante el Data Definition Language - DDL), el control de datos (mediante el Data Control Language - DCL) y su manipulaci\u00f3n (mediante el Data Manipulation Language - DML)</li> <li>Recuperaci\u00f3n (failover). Tras una ca\u00edda del sistema, configurar los posibles mecanismos de recuperaci\u00f3n y aceptaci\u00f3n o revisi\u00f3n de las operaciones pendientes.</li> <li>Copia de seguridad (backup), ya sea copias completas o incrementales.</li> <li>Exportaci\u00f3n/importaci\u00f3n de datos, tanto en formatos binarios con los datos en s\u00ed, como un listado de las operaciones necesarias para su creaci\u00f3n desde cero.</li> <li>Distribuci\u00f3n de los datos. En el caso de bases de datos distribuidas, decidiendo c\u00f3mo se particionan o fragmentan los datos.</li> </ul> </li> </ul>","tags":["Fundamentos","RA1"]},{"location":"01intro.html#arquitectura-de-3-niveles","title":"Arquitectura de 3 niveles","text":"<p>Antes ya hab\u00edamos comentado que un modelo de datos es un conjunto de herramientas conceptuales para describir los datos, sus relaciones, su sem\u00e1ntica y sus restricciones.</p> <p>Podemos definir un esquema como una descripci\u00f3n espec\u00edfica en t\u00e9rminos de un modelo de datos.</p> <p>El grupo ANSII/SPARC, a mediados de los a\u00f1os 70, defini\u00f3 una arquitectura en 3 niveles diferenciando tres esquemas, con el objetivo de separar a las aplicaciones de los datos, permitir que los usuarios tuvieran diferentes vistas, y utilizar un cat\u00e1logo para almacenar el esquema de la base de datos.</p> <p>\u00bfY c\u00f3mo se consigue? Si queremos independencia entre los datos y las aplicaciones, necesitamos que cada programa que accede a la base de datos manipule s\u00f3lo ciertos datos y estructura, de manera que cada programa posee una visi\u00f3n de la base de datos, lo que se conoce como esquema externo. La uni\u00f3n de todos los datos y sus relaciones forman el llamado esquema conceptual. Finalmente, el esquema f\u00edsico representa el almacenamiento de los datos y sus formas de acceso.</p> Esquemas en tres niveles <p>Dicho de otro modo, podemos destacar tres niveles principales seg\u00fan el tipo de usuario y acceso a la base de datos:</p> <ul> <li>Interno o F\u00edsico (1): es el nivel m\u00e1s cercano al almacenamiento f\u00edsico de los datos. Permite escribirlos tal y como est\u00e1n almacenados en el ordenador. En este nivel se dise\u00f1an los archivos que contienen la informaci\u00f3n, la ubicaci\u00f3n de los mismos y su organizaci\u00f3n, es decir se crean los archivos de configuraci\u00f3n.</li> <li>Conceptual (1): En este nivel se representan los datos de una forma m\u00e1s l\u00f3gica y comprensible, alej\u00e1ndose del aspecto f\u00edsico del nivel interno y centr\u00e1ndose en el dise\u00f1o. En el caso de bases relacionales suele ser una representaci\u00f3n en formato de tabla.</li> <li>Externo (N): Es el m\u00e1s cercano al usuario y es en realidad la salida de datos, la respuesta a una consulta. Puede tener formato de formulario, de un listado, un informe, etc...</li> </ul> <p>Esta arquitectura aporta:</p> <ul> <li>Independencia l\u00f3gica: capacidad de modificar el esquema conceptual sin tener que reescribir los esquemas externos ni las aplicaciones. Permite modificar el esquema conceptual para ampliar la BD o para reducirla, por ejemplo, si se elimina una entidad, los esquemas externos que no se refieran a ella no se ver\u00e1n afectados.</li> <li>Independencia f\u00edsica: capacidad de modificar el esquema interno sin tener que alterar ni el esquema conceptual, ni los externos. Por ejemplo, se pueden reorganizar los archivos f\u00edsicos con el fin de mejorar el rendimiento de las operaciones de consulta o de actualizaci\u00f3n, o se pueden a\u00f1adir nuevos archivos de datos porque los que hab\u00eda se han llenado.</li> </ul>","tags":["Fundamentos","RA1"]},{"location":"01intro.html#perfiles","title":"Perfiles","text":"<p>A la hora de emplear un SGBD existen diferentes perfiles o usuarios:</p> <ul> <li>Usuario final: interact\u00faa con los datos pero a trav\u00e9s de alguna aplicaci\u00f3n o servicio.</li> <li>Analista/Ingeniero de datos: perfiles de alto nivel encargados de dise\u00f1ar las arquitecturas de datos (tanto a nivel l\u00f3gico como f\u00edsico)</li> <li>Desarrollador: desarrolla aplicaciones que explotan los datos, creando consultas y operaciones de inserci\u00f3n, borrado o modificaci\u00f3n de los datos existentes. Un desarrollador web o multiplataforma interact\u00faa con una o m\u00e1s bases de datos en sus aplicaciones.</li> <li>Administrador de la base de datos (DBA - Database Administrator): persona o grupo de personas responsables del control del sistema gestor de base de datos. Las principales tareas de un administrador son:<ul> <li>Codificaci\u00f3n del esquema l\u00f3gico y f\u00edsico de la BD.</li> <li>Codificaci\u00f3n de las vistas de usuario.</li> <li>Asignaci\u00f3n y edici\u00f3n de permisos de todos los usuarios del sistema.</li> <li>Mantenimiento y seguimiento de la seguridad.</li> <li>Mantenimiento general del SGBD.</li> </ul> </li> </ul>","tags":["Fundamentos","RA1"]},{"location":"01intro.html#legislacion","title":"Legislaci\u00f3n","text":"<p>Las bases de datos y su uso por las empresas y otras instituciones est\u00e1n reguladas por el Reglamento Europeo de Protecci\u00f3n de Datos (RGPD) 2016/679, el cual establece un marco para la protecci\u00f3n de los datos personales y los derechos de los individuos en relaci\u00f3n con sus datos personales. Y tambi\u00e9n con la Ley Org\u00e1nica de Protecci\u00f3n de Datos Personales y garant\u00eda de los derechos digitales (LOPDGDD) 3/2018, que adapta y complementa el RGPD.</p> <p>Los aspectos clave de la LOPDGDD son:</p> <ul> <li>Adaptaci\u00f3n del GDPR: la LOPDGDD adapta el marco europeo a la realidad espa\u00f1ola, especificando ciertos aspectos del reglamento europeo.</li> <li>Derechos digitales: la LOPDGDD no solo trata sobre la protecci\u00f3n de datos personales, sino que tambi\u00e9n incluye una serie de derechos digitales, como el derecho a la desconexi\u00f3n digital en el \u00e1mbito laboral y el derecho al testamento digital.</li> <li>Principios del tratamiento de datos: refuerza principios como la transparencia, la lealtad, la minimizaci\u00f3n de datos, la exactitud, la limitaci\u00f3n del plazo de conservaci\u00f3n, la integridad y la confidencialidad.</li> <li>Consentimiento: especifica las condiciones para obtener el consentimiento v\u00e1lido de los interesados, incluyendo el consentimiento expl\u00edcito para datos sensibles.</li> <li>Autoridad de control: la Agencia Espa\u00f1ola de Protecci\u00f3n de Datos (AEPD) es la autoridad encargada de velar por el cumplimiento de la normativa de protecci\u00f3n de datos en Espa\u00f1a, supervisar y sancionar en caso de infracci\u00f3n, representando los intereses de los ciudadanos. </li> </ul> <p>Datos sensibles</p> <p>Son aquellos datos personales que revelan informaci\u00f3n \u00edntima y cuya divulgaci\u00f3n o tratamiento indebido podr\u00eda afectar gravemente a la privacidad y dignidad del individuo.</p> <p>La LOPDGDD define como datos sensibles los siguientes:</p> <ul> <li>Datos de origen racial o \u00e9tnico: Informaci\u00f3n que revele la raza o el origen \u00e9tnico del individuo.</li> <li>Datos de ideolog\u00eda: Informaci\u00f3n sobre las creencias o convicciones personales, filos\u00f3ficas o morales.</li> <li>Datos de afiliaci\u00f3n sindical: Informaci\u00f3n que revele la pertenencia a sindicatos o asociaciones laborales.</li> <li>Datos de religi\u00f3n: Informaci\u00f3n que revele las creencias religiosas.</li> <li>Datos de orientaci\u00f3n sexual: Informaci\u00f3n sobre la orientaci\u00f3n o preferencias sexuales del individuo.</li> <li>Datos de salud: Informaci\u00f3n relacionada con la salud f\u00edsica o mental, el estado de salud o la historia cl\u00ednica del individuo.</li> </ul> <p>Estos datos requieren un tratamiento especial y, generalmente, solo pueden ser tratados con el consentimiento expl\u00edcito del interesado o bajo circunstancias espec\u00edficas establecidas por la ley, como en el caso de la protecci\u00f3n de intereses vitales del interesado, la realizaci\u00f3n de tareas en inter\u00e9s p\u00fablico, o para el cumplimiento de obligaciones legales, entre otras excepciones.</p>","tags":["Fundamentos","RA1"]},{"location":"01intro.html#requerimientos","title":"Requerimientos","text":"<p>Como desarrolladores, debemos tratar los datos personales de los usuarios de las aplicaciones. Estamos hablando de clientes, empleados, proveedores, curriculums, im\u00e1genes, etc. Toda esta informaci\u00f3n tambi\u00e9n debe cumplir con todos los requerimientos establecidos y los puntos a tener en cuenta son:</p> <ol> <li> <p>Recogida de datos personales</p> <ul> <li>Consentimiento: Obtener el consentimiento expl\u00edcito e informado de los usuarios antes de recoger sus datos personales. El consentimiento debe ser claro, libre, espec\u00edfico e inequ\u00edvoco.</li> <li>Finalidad: Informar a los usuarios sobre la finalidad de la recogida de datos y asegurarse de que solo se utilizan para los fines especificados.</li> </ul> </li> <li> <p>Informaci\u00f3n y Transparencia</p> <ul> <li>Pol\u00edtica de Privacidad: Desarrollar y mantener una pol\u00edtica de privacidad clara y accesible que detalle qu\u00e9 datos se recogen, c\u00f3mo se utilizan, c\u00f3mo se protegen y los derechos de los usuarios.</li> <li>Aviso Legal y T\u00e9rminos de Uso: Proporcionar avisos legales y t\u00e9rminos de uso que incluyan informaci\u00f3n sobre el tratamiento de datos personales.</li> </ul> </li> <li> <p>Derechos de los usuarios</p> <ul> <li>Acceso: Facilitar a los usuarios el acceso a sus datos personales y obtener una copia de los mismos.</li> <li>Rectificaci\u00f3n y Supresi\u00f3n: Permitir que los usuarios rectifiquen datos inexactos o incompletos y soliciten la supresi\u00f3n de sus datos (derecho al olvido)</li> <li>Portabilidad: Permitir la portabilidad de los datos a otro proveedor si as\u00ed lo solicitan los usuarios, en un formato estructurado, de uso com\u00fan y lectura informatizada, y transmitirlos a otro responsable del tratamiento.</li> <li>Oposici\u00f3n y Limitaci\u00f3n: Facilitar que los usuarios puedan oponerse al tratamiento de sus datos o solicitar la limitaci\u00f3n del mismo en determinadas situaciones.</li> </ul> </li> <li> <p>Seguridad de los Datos</p> <ul> <li>Medidas de Seguridad: Implementar medidas t\u00e9cnicas y organizativas adecuadas para proteger los datos personales contra el acceso no autorizado, p\u00e9rdida, alteraci\u00f3n o destrucci\u00f3n.</li> <li>Cifrado y Anonimizaci\u00f3n: Utilizar t\u00e9cnicas de cifrado y anonimizaci\u00f3n para proteger los datos sensibles.</li> </ul> </li> <li> <p>Evaluaci\u00f3n de Impacto</p> <ul> <li>Evaluaci\u00f3n de Impacto en la Protecci\u00f3n de Datos (DPIA): Realizar una DPIA si el tratamiento de datos puede implicar un alto riesgo para los derechos y libertades de los individuos, como en el caso de grandes vol\u00famenes de datos o datos sensibles.</li> </ul> </li> <li> <p>Responsabilidad Proactiva</p> <ul> <li>Registro de Actividades de Tratamiento: Mantener un registro detallado de todas las actividades de tratamiento de datos personales.</li> <li>Designaci\u00f3n de un Delegado de Protecci\u00f3n de Datos (DPO): Nombrar un DPO (Data Protection Officer) si la ley lo requiere, especialmente en organizaciones que tratan grandes vol\u00famenes de datos personales o datos sensibles.</li> </ul> </li> <li> <p>Transferencias Internacionales</p> <ul> <li>Adecuaci\u00f3n de las Transferencias: Asegurarse de que las transferencias de datos personales fuera del Espacio Econ\u00f3mico Europeo (EEE) se realizan a pa\u00edses con un nivel de protecci\u00f3n adecuado o mediante mecanismos como las cl\u00e1usulas contractuales est\u00e1ndar.</li> </ul> </li> <li> <p>Notificaci\u00f3n de Brechas de Seguridad</p> <ul> <li>Notificaci\u00f3n a la AEPD: Notificar cualquier brecha de seguridad a la Agencia Espa\u00f1ola de Protecci\u00f3n de Datos (AEPD) dentro de las 72 horas posteriores a su detecci\u00f3n.</li> <li>Comunicaci\u00f3n a los Afectados: Informar a los individuos afectados si la brecha de seguridad puede suponer un riesgo elevado para sus derechos y libertades.</li> </ul> </li> <li> <p>Formaci\u00f3n y Concienciaci\u00f3n</p> <ul> <li>Capacitaci\u00f3n Continua: Formar y concienciar a todo el personal involucrado en el tratamiento de datos personales sobre las obligaciones y mejores pr\u00e1cticas en protecci\u00f3n de datos.</li> </ul> </li> <li> <p>Documentaci\u00f3n y Auditor\u00eda</p> <ul> <li>Documentaci\u00f3n Adecuada: Mantener toda la documentaci\u00f3n necesaria para demostrar el cumplimiento con el GDPR y la LOPDGDD.</li> <li>Auditor\u00edas Regulares: Realizar auditor\u00edas internas peri\u00f3dicas para verificar el cumplimiento de las pol\u00edticas y procedimientos de protecci\u00f3n de datos.</li> </ul> </li> </ol> <p>Cumplir con estas obligaciones no solo ayudar\u00e1 a evitar sanciones, sino que tambi\u00e9n fomentar\u00e1 la confianza de los usuarios en las aplicaciones web y en la empresa que las desarrolla.</p>","tags":["Fundamentos","RA1"]},{"location":"01intro.html#obligaciones","title":"Obligaciones","text":"<p>As\u00ed pues, en base a los requerimiento de la LOPDGDD, un responsable de la gesti\u00f3n de una base de datos debe cumplir con las siguientes obligaciones: </p> <ul> <li>Mantener las BBDD actualizadas, para reflejar la situaci\u00f3n actual del titular de los datos. </li> <li>No utilizar los datos de manera que se excedan los fines para los que fueron recabados. </li> <li>Obtener el consentimiento previo al tratamiento de los datos. Para esto, se debe informar al usuario de sus derechos, para qu\u00e9 fines ser\u00e1n usados sus datos, qui\u00e9nes ser\u00e1n los responsables de la gesti\u00f3n, y cu\u00e1les ser\u00e1n los plazos en los que ser\u00e1n usados.</li> <li>Los datos sensibles no deben ser recogidos a menos que sea estrictamente necesario, por lo que informaci\u00f3n como la ideolog\u00eda, religi\u00f3n o creencias son datos que no deber\u00edan pedirse. Cuando as\u00ed suceda se debe advertir a la persona de que est\u00e1 en su derecho a no dar ese tipo de datos.</li> <li>Si la base de datos es p\u00fablica, el titular de los datos tiene derecho a oponerse al tratamiento de sus datos. </li> <li>El titular debe tener garantizado el acceso, rectificaci\u00f3n, cancelaci\u00f3n y derecho a la oposici\u00f3n al uso de sus datos para los fines establecidos por la empresa. Para ello, se debe ofrecer un medio de contacto, adem\u00e1s de especificar qui\u00e9n est\u00e1 a cargo de esos datos.</li> <li>Cuando surge una reclamaci\u00f3n por violaci\u00f3n de estos derechos, es el responsable del tratamiento (la empresa) quien tiene la carga de la prueba, es decir, quien debe constatar su inocencia mediante la aportaci\u00f3n de pruebas, y no es el titular de los datos quien tiene que demostrar que sus derechos han sido violados. </li> <li>Las bases de datos est\u00e1n regidas por el secreto profesional, por lo tanto, la informaci\u00f3n debe ser guardada tanto durante el tiempo en el que el titular autoriz\u00f3 su uso, como posteriormente. </li> <li>El secreto profesional afecta a cualquier persona que haga uso de los datos, incluidos terceros a los que se les cedan estos datos para fines determinados. </li> <li>El responsable de los datos deber\u00e1 inscribir los ficheros en la Agencia Espa\u00f1ola de Protecci\u00f3n de Datos. Previamente, es necesario notificar de este procedimiento al titular de los datos.</li> </ul> <p>En definitiva, la LOPDGDD obliga a las empresas que gestionan una base de datos a cumplir con todas las obligaciones y adoptar todas las medidas de seguridad que garanticen que los datos de una persona solo se utilicen bajo su conocimiento y para los fines que el individuo autorice. </p>","tags":["Fundamentos","RA1"]},{"location":"01intro.html#faltas","title":"Faltas","text":"<p>El incumplimiento de estas obligaciones da origen a faltas, que pueden considerarse leves en algunos casos, pero que en numerosas ocasiones son graves. </p> <p>Las faltas graves se producir\u00e1n si los datos que no se han protegido contienen informaci\u00f3n personal, datos relacionados con antecedentes penales o sobre infracciones administrativas, relativos a la Hacienda P\u00fablica, a servicios financieros, a la solvencia patrimonial. Tambi\u00e9n puede generar una falta grave la filtraci\u00f3n de datos que, si bien no son sensibles, en su conjunto permitan hacer una evaluaci\u00f3n de la personalidad del individuo. </p> <p>Adem\u00e1s, est\u00e1n las faltas muy graves, cuando los datos que no han sido guardados correctamente, incluyen los que la ley define como especialmente protegidos, as\u00ed como aquellos recabados para fines policiales y que carezcan del consentimiento de los afectados. </p> <p>Sanciones</p> <p>El reglamento RGPD contempla multas significativas a las empresas que lo incumplan. Las empresas podr\u00e1n enfrentarse a multas de hasta 20 millones de euros o del 4% de su facturaci\u00f3n anual del a\u00f1o anterior. Las multas podr\u00e1n venir acompa\u00f1adas de cualquier medida correctiva que se estime oportuna (como advertencias o reprimendas).</p> <p>Como ya hemos comentado, en Espa\u00f1a el organismo que vela por el cumplimiento de la LOPDGDD es la Agencia de Espa\u00f1ola de Protecci\u00f3n de Datos y es ella tambi\u00e9n la que establece los grados de infracci\u00f3n y las sanciones.</p> <p>La informaci\u00f3n en la que basa sus sentencias son, entre otros: el tiempo que lleva cometi\u00e9ndose la infracci\u00f3n, el volumen de informaci\u00f3n tratada de manera fraudulenta, los beneficios obtenidos de las infracciones, el grado de intencionalidad, el da\u00f1o causado con sus acciones, etc.</p>","tags":["Fundamentos","RA1"]},{"location":"01intro.html#referencias","title":"Referencias","text":"<ul> <li> <p>Informaci\u00f3n y Conocimiento, del Consorcio Clavijero de M\u00e9xico.</p> </li> <li> <p>Materiales sobre el m\u00f3dulo de BD:</p> <ul> <li>Introducci\u00f3 a les bases de dades i als sistemes gestors de bases de dades - Institut Obert de Catalunya</li> <li>Sistemas Gestores de Bases de Datos, de Jorge S\u00e1nchez</li> <li>Almacenamiento de la informaci\u00f3n de Javier Guti\u00e9rrez</li> <li>Ficheros y bases de datos de \u00c1lvaro Gonz\u00e1lez</li> <li>Elementos de las bases de datos de gestionbasesdatos.readthedocs.io</li> </ul> </li> </ul>","tags":["Fundamentos","RA1"]},{"location":"01intro.html#actividades","title":"Actividades","text":"<ul> <li> <p>AC101. (RABD.1 // CE1a // 3p) Nos han enviado un par de archivos de una aplicaci\u00f3n legacy y aparentemente algunos datos est\u00e1n mal almacenados.</p> <ul> <li>El fichero <code>fabricantes.csv</code> contiene los datos de fabricantes, en concreto el c\u00f3digo del fabricante y su nombre.</li> <li>El fichero <code>productos.csv</code> contiene datos de los productos: c\u00f3digo, nombre del producto, precio en euros y una referencia a un c\u00f3digo del fabricante del fichero anterior.</li> </ul> <p>Se pide:</p> <ul> <li>Enumera los errores detectados e indica c\u00f3mo solucionarlos.</li> <li>Indica el tipo de acceso que se realiza sobre los ficheros y los posibles errores que nos podr\u00edamos encontrar si una aplicaci\u00f3n gestiona sus datos mediante estos dos ficheros.</li> <li>Adem\u00e1s de un documento con los apartados anteriores, adjunta una copia de los archivos con los problemas solucionados.</li> </ul> </li> </ul> <p></p> <ul> <li>AC102. (RABD.1 // CE1b, CE1c, CE1d // 3p) Distingue al menos tres casos de uso donde una base de datos es el sistema de almacenamiento adecuado y justifica tu decisi\u00f3n. Para ello, debes especificar el volumen de datos y qu\u00e9 modelo y sistema gestor utilizar\u00edas.</li> </ul> <p></p> <ul> <li> <p>AC103 (RABD.1 // CE1i // 3p) Mediante tu identidad digital de Office365, y haciendo uso de MS Lists, crea una lista que permita almacenar la informaci\u00f3n sobre los empleados que trabajan en diferentes departamentos de una empresa. De los empleados, nos interesa guardar su NIF, nombre y apellidos, la edad, el sexo, su direcci\u00f3n (calle, n\u00famero y c\u00f3digo postal) y finalmente su salario.</p> <p>Para ello:</p> <ol> <li>Crea la lista en blanco (no utilices ninguna plantilla) y ponle un nombre adecuado.</li> <li>Agrega columnas con los campos que consideres. Al a\u00f1adir una columna, deber\u00e1s elegir un tipo para el dato.</li> <li>Inserta un m\u00ednimo de 5 empleados</li> <li>Exporta la lista como un archivo CSV simple.</li> <li>Comparte la lista con a.medrano@edu.gva.es</li> </ol> </li> </ul> <p></p> <ul> <li>AC104. (RABD.1 // CE1e, CE1f // 3p) A trav\u00e9s de alg\u00fan portal de ofertas de trabajo (Infojobs) o redes sociales laborales (Linkedin), realiza b\u00fasquedas de ofertas de trabajo como desarrollador en Alicante/Comunidad Valenciana indicando el/los SGBD empleados. De entre los 3 SGBD m\u00e1s solicitados, destaca los elementos principales de cada uno de ellos, como el tipo de modelo de datos empleado, la versi\u00f3n (si la indican), sistema operativo, etc... e incluye un enlace a la oferta de trabajo.</li> </ul> <p></p> <ul> <li> <p>AC105 (RABD.1 // CE1i // 3p) Piensa en un formulario que de forma premeditada, solicite un par de datos sensibles. A continuaci\u00f3n, haciendo uso de ChatGPT o Copilot, redacta una hoja de consentimiento que cumpla la LOPDGDD e informe de los datos solicitados.</p> <p>Completa los datos relativos a la empresa y la aplicaci\u00f3n (conforme consideres) y adjunta tanto el prompt indicado a la IA, como el texto generado y el documento completado.</p> </li> </ul> <p></p> <ul> <li> <p>AR106 (RABD.1 // CE1b, CE1c, CE1e, CE1f // 3p) Explica detalladamente los siguientes conceptos relativos a una BD / SGBD:</p> <ul> <li>Integridad - \u00bfEs v\u00e1lido tener datos no \u00edntegros?</li> <li>Redundancia - \u00bfConoces situaciones donde la redundancia sea aceptable? \u00bfCuales?</li> <li>Consistencia - \u00bfQu\u00e9 relaci\u00f3n existe con la consistencia eventual?</li> <li>\u00bfExisten restricciones entre la concurrencia y la transaccionalidad de los datos?</li> <li>\u00bfQu\u00e9 relaci\u00f3n o diferencia existe entre MariaDB y MySQL?</li> </ul> </li> </ul> <p></p> <ul> <li>AR107 (RABD.1 // CE1i // 3p) Investiga y pon un par de ejemplos de infracci\u00f3n leve, grave y muy grave que puede tener una empresa por no cumplir la LOPDGDD, indicando el concepto y la posible sanci\u00f3n.</li> </ul> <p></p> <ul> <li> <p>AP108. (RABD.1 // CE1d // 3p) Sobre la actividad AC103, crea una nueva lista con los datos de los departamentos, y averigua c\u00f3mo puedes relacionar ambas listas.</p> <p>Explica las decisiones que has tomado y adjunta ambas listas en formato CSV y comp\u00e1rtelas de nuevo con el profesor.</p> </li> </ul>","tags":["Fundamentos","RA1"]},{"location":"02er.html","title":"Dise\u00f1o Conceptual: Modelo Entidad Relaci\u00f3n","text":"","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#propuesta-didactica","title":"Propuesta did\u00e1ctica","text":"<p>En esta unidad vamos a comenzar a trabajar el RA6: Dise\u00f1a modelos relacionales normalizados interpretando diagramas entidad/relaci\u00f3n.</p>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#criterios-de-evaluacion","title":"Criterios de evaluaci\u00f3n","text":"<ul> <li>CE6b: Se han identificado las tablas del dise\u00f1o l\u00f3gico.</li> <li>CE6c: Se han identificado los campos que forman parte de las tablas del dise\u00f1o l\u00f3gico.</li> <li>CE6d: Se han analizado las relaciones entre las tablas del dise\u00f1o l\u00f3gico.</li> <li>CE6e: Se han identificado los campos clave.</li> </ul>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#contenidos","title":"Contenidos","text":"<p>Bases de datos relacionales:</p> <ul> <li>Modelo de datos</li> </ul> <p>Interpretaci\u00f3n de Diagramas Entidad/Relaci\u00f3n:</p> <ul> <li>El modelo E/R. Entidades y relaciones. Cardinalidades. Debilidad.</li> <li>El modelo E/R ampliado. Generalizaci\u00f3n y especializaci\u00f3n. Agregaci\u00f3n.</li> </ul> <p>Cuestionario inicial</p> <ol> <li>\u00bfConoces alg\u00fan modelo conceptual?</li> <li>\u00bfCu\u00e1l es el prop\u00f3sito del modelo ER?</li> <li>\u00bfQu\u00e9 tres elementos son los m\u00e1s importantes en un modelo ER?</li> <li>\u00bfQu\u00e9 valores puede tomar la cardinalidad m\u00ednima? \u00bfY la m\u00e1xima?</li> <li>\u00bfQu\u00e9 diferencia una entidad fuerte de una d\u00e9bil?</li> <li>A partir de la cardinalidad m\u00e1xima, \u00bfque tres tipos de relaciones binarias se pueden dar?</li> <li>\u00bfQu\u00e9 tipos de atributos conoces?</li> <li>\u00bfQu\u00e9 es una relaci\u00f3n reflexiva?</li> <li>\u00bfQu\u00e9 relaci\u00f3n existe entre la generalizaci\u00f3n y la especializaci\u00f3n?</li> <li>\u00bfQu\u00e9 relaci\u00f3n existe entre una superclase y una subclase?</li> <li>\u00bfQu\u00e9 diferencia una restricciones de identificaci\u00f3n de una cardinalidad m\u00ednima a 1?</li> <li>\u00bfCu\u00e1ndo se utiliza una agregaci\u00f3n o entidad asociativa?</li> </ol>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#programacion-de-aula-11h","title":"Programaci\u00f3n de Aula (11h)","text":"<p>Esta unidad es la segunda, con lo que se imparte en la primera evaluaci\u00f3n, con una duraci\u00f3n estimada de 10 horas, durante la \u00faltima semana de septiembre y la primera quincena de octubre:</p> Sesi\u00f3n Contenidos Actividades Criterios trabajados 1 Modelo Entidad Relaci\u00f3n. Entidades AC201 CE6b, CE6c 2 Relaciones. Cardinalidad AC202 CE6d 3 Relaciones 1:1, 1:M, N:M 4 Relaciones 1:1, 1:M, N:M AC203 CE6d 5 Modelados sencillos AC204, AC205 CE6b, CE6c, CE6e 6 Completando modelos AC208 CE6b, CE6c, CE6e 7 Restricciones 9 Modelado EER. Generalizaci\u00f3n y especializaci\u00f3n AC209 CE6b, CE6c, CE6e 8 Modelados con generalizaci\u00f3n AC210 CE6b, CE6c, CE6e 10 Agregaciones AC211 CE6b, CE6c, CE6e 11 Interpretando modelos AC214 CE6b, CE6c, CE6d, CE6e 12 Reto - Dise\u00f1ando una BD PY215 CE6b, CE6c, CE6d, CE6e","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#diseno-de-bd","title":"Dise\u00f1o de BD","text":"<p>En la unidad anterior hemos trabajado conceptos generales asociados a las bases de datos y los sistemas gestores de bases de datos. Estudiamos que existen diferentes modelos de datos que dan lugar a diferentes tipos de soluciones.</p> <p>Pero antes de entrar en uno de los modelos, conviene saber cual es el proceso de dise\u00f1o de una base de datos. Queda claro que un buen dise\u00f1o sobre los datos va a facilitar el posterior desarrollo de las aplicaciones que explotan la base de datos.</p> <p>Antes de comenzar el dise\u00f1o, el primer paso y m\u00e1s cr\u00edtico es determinar los requisitos de la base de datos mediante un sistema de informaci\u00f3n, describiendo el problema que la base de datos debe cubrir. Este paso est\u00e1 m\u00e1s asociado a la ingenier\u00eda del software y lo estudiar\u00e1s en detalle en el m\u00f3dulo de Entornos de Desarrollo.</p> <p>Las fases que se realizan a la hora de dise\u00f1ar una base de datos son tres:</p> <ol> <li>Dise\u00f1o conceptual: a partir de los requisitos y entendido el problema (conocido como el mundo real), mediante un modelo conceptual de alto nivel (EER) crearemos el esquema conceptual.</li> <li>Dise\u00f1o l\u00f3gico: transformaci\u00f3n de un modelo conceptual a un modelo de datos concreto para poder representar el problema (relacional, jer\u00e1rquico, ...). En este paso, ya nos tenemos que haber decidido por un modelo de datos, y en algunos casos, incluso por un SGBD concreto. El resultado del dise\u00f1o l\u00f3gico es el esquema l\u00f3gico/can\u00f3nico.</li> <li>Dise\u00f1o f\u00edsico: sobre el modelo l\u00f3gico de datos del punto anterior sobre un SGBD concreto, se define la representaci\u00f3n f\u00edsica de las estructuras, obteniendo el esquema f\u00edsico/interno.</li> </ol> <p>Estas tres fases se resumen en el siguiente gr\u00e1fico:</p> Del dise\u00f1o a los modelos <p>En las siguientes unidades vamos a ir pasando de una fase del dise\u00f1o a la siguiente. En nuestro caso, en el modelo conceptual aprenderemos el modelo Entidad Relaci\u00f3n, como modelo l\u00f3gico veremos el Modelo Relacional, y como modelo f\u00edsico, usaremos el sublenguaje DDL de SQL, ya centr\u00e1ndonos en un SGBD concreto.</p> <p>As\u00ed pues, en esta unidad comenzamos con el dise\u00f1o conceptual a trav\u00e9s del modelo conceptual m\u00e1s extendido, el modelo entidad-relaci\u00f3n.</p>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#reto-i-disenamos","title":"Reto I - Dise\u00f1amos","text":"<p>A los largo de las cuatro siguientes unidades vamos a desarrollar una base de datos desde cero. Para ello, en equipos de 3-4 personas, y siguiendo un enfoque metodol\u00f3gico de Aprendizaje Colaborativo basado en Retos, cada equipo va a definir:</p> <ul> <li>Un sistema de informaci\u00f3n.</li> <li>El modelo entidad relaci\u00f3n (dise\u00f1o conceptual)</li> <li>El modelo relacional (dise\u00f1o l\u00f3gico)</li> <li>El modelo f\u00edsico en SQL (dise\u00f1o f\u00edsico)</li> </ul> <p>Si no se os ocurre ning\u00fan sistema de informaci\u00f3n, algunas propuestas que pod\u00e9is dise\u00f1ar son la base de datos de un gimnasio, una academia de idiomas, una biblioteca, un liga amateur de futbol/baloncesto o la base de datos de un festival de m\u00fasica.</p> <p>Durante el desarrollo del reto estableceremos diferentes hitos que deber\u00e9is cumplir, a modo de entregables. En cada unidad dedicaremos una o m\u00e1s sesiones a trabajar el reto y compartir el resultado con la clase.</p> <p>En la prueba escrita que realizaremos a finales de la unidad 5 aparecer\u00e1n actividades sobre alguna de las soluciones creadas.</p>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#el-modelo-entidad-relacion","title":"El modelo Entidad Relaci\u00f3n","text":"<p>Entendemos como modelo conceptual el conjunto de conceptos y reglas que nos permiten aplicar una serie de abstracciones con el prop\u00f3sito de definir y manipular datos de la realidad, almacen\u00e1ndola en una base de datos.</p> <p>Centr\u00e1ndonos en el modelo entidad/relaci\u00f3n, cuyo nombre completo es modelo entidad/interrelaci\u00f3n (entity/relationship en ingl\u00e9s), es un modelo de datos conceptual de alto nivel, propuesto por Peter Chen en 1976, y vigente a d\u00eda de hoy por su simplicidad y legibilidad, ya que el resultado del an\u00e1lisis del problema se representa de forma visual mediante diagramas entidad/relaci\u00f3n. Ha tenido numerosas extensiones y aportaciones de muchos otros autores, teniendo soporte por numerosas herramientas de software de dise\u00f1o (CASE), lo que ha dado lugar a que no exista un \u00fanico modelo ER, sino una familia de modelos.</p> <p>El modelo ER describe el mundo real como un conjunto de entidades y de relaciones entre ellas.</p>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#elementos","title":"Elementos","text":"<p>Una entidad es cualquier persona, concepto, suceso o evento (en definitiva, cualquier cosa) con existencia independiente sobre la cual se desea almacenar informaci\u00f3n. La entidad representa un tipo de objeto, el concepto que permite representar a un conjunto de objetos similares. Por ejemplo <code>Persona</code>, <code>Cliente</code>, <code>Alumno</code>, <code>Asignatura</code>, etc... ser\u00edan entidades.</p> <p>Por otro lado, una entidad define de forma gen\u00e9rica a un conjunto de objetos a trav\u00e9s de propiedades (o atributos): cualquier informaci\u00f3n que interesa guardar sobre las entidades. Se obtienen mediante un proceso de abstracci\u00f3n que se conoce como clasificaci\u00f3n. Ejemplos de atributos ser\u00edan <code>nombre</code>, <code>direcci\u00f3n</code>, <code>fecha de nacimiento</code>, <code>saldo</code>, <code>tel\u00e9fono</code>, etc...</p> <p>Finalmente, una relaci\u00f3n es una asociaci\u00f3n entre entidades. Un tipo de relaci\u00f3n en un modelo de datos permite representar un conjunto de relaciones de caracter\u00edsticas similares. Igual que las entidades, las relaciones tambi\u00e9n pueden tener atributos, para representar informaci\u00f3n que no es propia de ninguno de los objetos participantes en la relaci\u00f3n. Ejemplos de relaciones ser\u00edan <code>Matricular</code>, <code>Contratar</code>, <code>Reservar</code>, etc...</p> <p>El modelo conceptual tambi\u00e9n define una serie de propiedades sobre los elementos, como son las propiedades:</p> <ul> <li> <p>est\u00e1ticas: restricciones sobre las entidades y relaciones. Por ejemplo, la restricci\u00f3n de integridad est\u00e1tica, limita las extensiones (ocurrencias) v\u00e1lidas (permitidas) para una propiedad. Existen varios tipos:</p> <ul> <li>Sobre atributos: valores posibles, valor no nulo.</li> <li>Sobre entidades: restricci\u00f3n de identificaci\u00f3n.</li> <li>Sobre relaciones: restricciones de cardinalidad.</li> </ul> </li> <li> <p>din\u00e1micas: operaciones sobre los objetos o sus relaciones, relaciones entre operaciones (transacciones) y restricciones din\u00e1micas sobre la evoluci\u00f3n de los objetos y sus relaciones, como por ejemplo, \"El n\u00famero de alumnado matriculado en una asignatura debe ser menor o igual a 20\".</p> <p>Operaci\u00f3n vs Transacci\u00f3n</p> <p>Una operaci\u00f3n es una acci\u00f3n elemental (indivisible) sobre un objeto o una relaci\u00f3n. Las operaciones permiten crear, eliminar, modificar y consultar objetos y relaciones.</p> <p>Una transacci\u00f3n es una secuencia de operaciones que se considera at\u00f3mica en lo que se refiere a su ejecuci\u00f3n. Es decir, se ejecutan todas sus operaciones o ninguna de ellas, como por ejemplo, al realizar una transferencia bancaria.</p> <p>Las bases de datos soportan las transacciones gracias a las propiedades ACID (que estudiamos en la sesi\u00f3n anterior)</p> </li> </ul>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#entidades","title":"Entidades","text":"<p>Una entidad es cualquier objeto (real o abstracto) sobre el que queremos almacenar informaci\u00f3n en la base de datos.</p> <p>Se representa mediante un rect\u00e1ngulo con el nombre de la entidad en singular y may\u00fasculas. Se suele identificar con un sustantivo y suelen estar asociados a objetos (coche, libro, veh\u00edculo, etc...), personas (cliente, empleado, proveedor, ...), lugares (ciudad, provincia, etc...), organizaciones (hospital, aula, empresa, ...), etc...</p> Ejemplo con dos entidades <p>Control de redundancia</p> <p>Cada entidad solo puede aparecer una \u00fanica vez en el modelo, con lo que no podemos repetir el nombre de dos entidades en el mismo modelo.</p> Entidad fuerte vs d\u00e9bil <p>Existe dos tipos de entidades:</p> <ul> <li>Regulares o fuertes: existen por s\u00ed mismas, sin necesidad de otra entidad. Por ejemplo, los clientes de nuestra empresa. Se representan mediante un rect\u00e1ngulo simple.</li> <li> <p>D\u00e9biles: su existencia depende de otra entidad. Por ejemplo, los familiares de los clientes ser\u00eda una entidad d\u00e9bil, ya que no tiene sentido almacenarlos si ya no tenemos a los clientes. Se representan mediante un rect\u00e1ngulo doble.</p> <p>Una entidad d\u00e9bil se identifica por sus propiedades y por las propiedades de las entidades de las que depende. Adem\u00e1s, al eliminar la entidad fuerte, tambi\u00e9n se elimina la entidad d\u00e9bil.</p> </li> </ul> <p>Finalmente, el t\u00e9rmino ocurrencia (o instancia de entidad) indica un elemento de la entidad, un objeto en concreto. Por ejemplo, en la entidad <code>PRODUCTO</code>, una ocurrencia ser\u00eda <code>Bol\u00edgrafo azul de gel</code> cuyo c\u00f3digo es <code>BOLIAZUL01</code> y fecha de alta en el sistema el <code>1/1/24</code>.</p>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#relaciones","title":"Relaciones","text":"<p>Una relaci\u00f3n representa una asociaci\u00f3n, relacionando los datos del modelo. Para ello, dibujaremos un rombo que unir\u00e1 las entidad que participan en la relaci\u00f3n, y la nombraremos mediante un verbo en may\u00fasculas:</p> Ejemplo de relaci\u00f3n <p>Notaci\u00f3n</p> <p>Existen multiples notaciones para representar las relaciones (las entidades se suelen representar igual en todas las notaciones). En los apuntes vamos a utilizar tanto la notaci\u00f3n empleada por la herramienta ERDPlus (tambi\u00e9n conocida como de pata de gallo), la notaci\u00f3n de Chen (con las cardinalidades m\u00ednima y m\u00e1xima) as\u00ed como diferentes notaciones empleadas de forma generalizada por las empresas.</p> <p>Una vez dominada una notaci\u00f3n es muy f\u00e1cil entender y cambiar a cualquiera de las otras. Eso s\u00ed, debes ser constante y modelar siempre con la misma notaci\u00f3n.</p>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#grado","title":"Grado","text":"<p>Se denomina grado de una relaci\u00f3n a la cantidad de entidades involucradas en una relaci\u00f3n, lo que nos permite clasificarlas las relaciones en:</p> <ul> <li>binarias: son las m\u00e1s comunes, e implica la participaci\u00f3n de dos entidades.</li> <li>ternarias: participan tres entidades. A ser posible, es mejor simplificarlas mediante el uso de varias relaciones binarias y agregaciones. Por ejemplo, la relaci\u00f3n existente entre un libro, su autor y la editorial donde se publica el libro. En este curso no vamos a trabajar las relaciones ternarias y en su caso, cuando sea posible, haremos uso de agregaciones o entidades asociativas.</li> <li>n-arias: muy excepcionales, ya que involucran 4 o m\u00e1s entidades.</li> <li>reflexivas (unarias): son relaciones binarias entre la misma entidad. Por ejemplo, una persona se casa con otra persona.</li> </ul>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#cardinalidad","title":"Cardinalidad","text":"<p>La cardinalidad define la cantidad de ocurrencias de una entidad que se relacionan con una relaci\u00f3n (que a su vez se relaciona con otra entidad).</p> <p>Para ello, definimos las cardinalidades:</p> <ul> <li>m\u00ednima (tambi\u00e9n conocido como participaci\u00f3n): indica el n\u00famero m\u00ednimo de asociaciones en las que aparecer\u00e1 cada ejemplar de la entidad. Los valores que puede tomar son cero (opcional) o uno (obligatorio)</li> <li>m\u00e1xima: indica el n\u00famero m\u00e1ximo de relaciones en las que puede aparecer cada ejemplar de la entidad. Los valores pueden ser uno o N (muchos).</li> </ul> <p>La cardinalidad entre una entidad y una relaci\u00f3n se representa entre par\u00e9ntesis indicando el valor m\u00ednimo a la izquierda y el mayor a la derecha mediante <code>Card(E,R) = (min, max)</code>. Las posibles combinaciones son:</p> <ul> <li><code>(0, 1)</code> - Una ocurrencia de una entidad se puede relacionar con ninguna o una ocurrencia de otra/s entidad/es.</li> <li><code>(1, 1)</code> - Una ocurrencia de una entidad se relaciona siempre con una ocurrencia de otra/s entidad/es.</li> <li><code>(0, N)</code> - Una ocurrencia de una entidad se puede relacionar con ninguna o muchas ocurrencias de otra/s entidad/es.</li> <li><code>(1, N)</code> - Una ocurrencia de una entidad se puede relacionar con una o muchas ocurrencias de otra/s entidad/es.</li> </ul> <p>Para averiguar la cardinalidad entre dos entidades v\u00eda una relaci\u00f3n, cogemos una ocurrencia de una entidad y nos preguntamos con cuantas ocurrencias de la otra entidad se va a relacionar.</p> <p>Pongamos un ejemplo. Si pensamos en la relaci\u00f3n que existe un producto y la categor\u00eda la que pertenece, tendremos dos cardinalidades para cada lado de la relaci\u00f3n.</p> <p>Si tenemos un producto concreto \u00bfA cuantas categor\u00edas va a pertenecer como m\u00ednimo y como m\u00e1ximo?:</p> <ul> <li><code>Card(PRODUCTO, PERTENECER) = (1, 1)</code> - Un producto siempre pertenece a una categor\u00eda</li> </ul> <p>Y en el otro sentido, dada una categor\u00eda concreta, \u00bfcu\u00e1ntos productos van a pertenecer a esta categor\u00eda?</p> <ul> <li><code>Card(CATEGORIA, PERTENECER) = (0, N)</code> - Una categor\u00eda puede no tener productos, pero si tiene, pertenecer\u00e1n muchos.</li> </ul> <p>Representaci\u00f3n</p> <p>Para representar la cardinalidad en el modelo ER, las cardinalidades se anotan en el extremo opuesto de la entidad, utiliz\u00e1ndose la regla Entidad, Relaci\u00f3n, Cardinalidad, Entidad:</p> <p> Cardinalidades en la relaci\u00f3n </p> <p>As\u00ed pues, si aplicamos la regla de izquierda a derecha tenemos <code>PRODUCTO, PERTENECER, (1,1), CATEGORIA</code>, lo que significa que un producto pertenece siempre a una categor\u00eda y como mucho a una tambi\u00e9n. En cambio, si la aplicamos de derecha a izquierda tenemos <code>CATEGORIA, PERTENECER, (0,N), PRODUCTO</code> indica que a una categor\u00eda puede no pertenecer ning\u00fan producto pero tambi\u00e9n muchos.</p>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#tipos","title":"Tipos","text":"<p>Si nos fijamos en las cardinalidades m\u00e1ximas, tenemos tres tipos de relaciones binarias:</p> <ul> <li>1:1 (uno a uno) \u2013 Un elemento de la primera relaci\u00f3n se corresponde con uno solo de la segunda y viceversa. Por ejemplo, una pantalla digital est\u00e1 en un aula y en un aula s\u00f3lo hay una pantalla digital.</li> <li>1:N (uno a muchos) \u2013 Un elemento de la primera relaci\u00f3n se corresponde con uno o varios de la segunda y uno de la segunda se relaciona con uno solo de la primera. Por ejemplo, un trabajador solo puede trabajar en una empresa y en la empresa puede haber muchos trabajadores.</li> <li>N:M (muchos a muchos) \u2013 Un elemento de la primera relaci\u00f3n se corresponden con muchos de la segunda y viceversa. Por ejemplo, un alumno puede estar matriculado en varias asignaturas y en una asignatura puede haber muchos alumnos.</li> </ul> <p>Para representar las relaciones, adem\u00e1s de la notaci\u00f3n de Chen (indicando las cardinalidades en el lado opuesto), utilizaremos la notaci\u00f3n de pata de gallo:</p> Descripci\u00f3n S\u00edmbolo Un anillo representa \"cero\" Un gui\u00f3n representa \"uno\" El pie de gallo representa \"muchos\" (N) <p>Para ello, dibujaremos la cardinalidad m\u00e1xima lo m\u00e1s cerca de cada entidad y la m\u00ednima lo m\u00e1s separada. En la siguiente tabla se supone que tenemos la relaci\u00f3n a la izquierda y la entidad a la derecha:</p> Descripci\u00f3n Cardinalidad S\u00edmbolo Anillo y gui\u00f3n (0, 1) Gui\u00f3n y gui\u00f3n (1, 1) Anillo y pata de gallo (0, N) Guion y pata de gallo (1, N)","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#relacion-11","title":"Relaci\u00f3n 1:1","text":"<p>En las relaciones uno a uno, las dos cardinalidades m\u00e1ximas toman el valor 1, e indican que una ocurrencia de la entidad A se relaciona con s\u00f3lo uno de la B, y viceversa.</p> Relaci\u00f3n 1:1 Ocurrencias 1:1 <p>Si nos fijamos en las ocurrencias de las entidades, vemos como cada departamento tiene asignado siempre un empleado y s\u00f3lo uno. Por ello, <code>Card(DPTO, DIRIGIR) = (1,1)</code>. En cambio, tenemos empleados que no tienen asignado ning\u00fan departamento, y en el caso de tenerlo, s\u00f3lo tienen uno, lo que implica que <code>Card(EMPLEADO, DIRIGIR) = (0,1)</code>.</p> <p>Como las dos cardinalidades m\u00e1ximas son 1, decimos que la relaci\u00f3n es uno a uno.</p> <p>Autoevaluaci\u00f3n</p> <p>\u00bfEn qu\u00e9 cambiar\u00eda el gr\u00e1fico de ocurrencias si las cardinalidades fueran <code>Card(DPTO, DIRIGIR) = (0,1)</code> y <code>Card(EMPLEADO, DIRIGIR) = (1,1)</code>?</p>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#relacion-1n","title":"Relaci\u00f3n 1:N","text":"<p>En las relaciones uno a muchos, en un sentido hay una cardinalidad m\u00e1xima de uno, y en la otra de muchos, es decir, una ocurrencia de la entidad A se relaciona con una de la entidad B, pero una ocurrencia de la entidad B lo hace con muchas de la entidad A.</p> <p>En el siguiente ejemplo, tenemos que cada producto tendr\u00e1 una categor\u00eda y en cambio, que de una categor\u00eda, tendremos muchos productos.</p> Ocurrencias 1:N Relaci\u00f3n 1:N <p>Si nos fijamos en las ocurrencias de las entidades, vemos como un producto pertenece a una categor\u00eda, y siempre a una. Por ello, <code>Card(PRODUCTO, PERTENECER) = (1,1)</code>. En cambio, tenemos categor\u00edas a las que pertenecen muchos productos, e incluso categor\u00edas sin productos, lo que implica que <code>Card(CATEGORIA, PERTENECER) = (0,N)</code>.</p> <p>Autoevaluaci\u00f3n</p> <p>\u00bfEn qu\u00e9 cambiar\u00eda el gr\u00e1fico de ocurrencias si las cardinalidades fueran <code>Card(PRODUCTO, PERTENECER) = (0,1)</code> y <code>Card(CATEGORIA, PERTENECER) = (1,N)</code>?</p> <p>\u00bfY si les damos la vuelta siendo <code>Card(PRODUCTO, PERTENECER) = (1,N)</code> y <code>Card(CATEGORIA, PERTENECER) = (0,1)</code>?</p> <p>Supuesto Empresa</p> <p>Queremos gestionar la informaci\u00f3n sobre los empleados de una empresa, a partir de las siguientes condiciones: para cada empleado dispondremos de su DNI, nombre, fecha de nacimiento, salario y departamento en el que trabaja.</p> <p>De cada departamento sabremos su nombre, el n\u00famero del despacho en el que se ubica y conoceremos quien es el jefe de dicho departamento.</p> Soluci\u00f3n <p> Soluci\u00f3n supuesto Empresa </p> <p>Primero localizamos las entidades y sus atributos:</p> <ul> <li>Entidades: <code>EMPLEADO</code>, <code>DEPARTAMENTO</code></li> <li>Atributos de <code>EMPLEADO</code>: dni (atributo identificador), nombre, fecha de nacimiento, salario</li> <li>Atributos de <code>DEPARTAMENTO</code>: nombre, n\u00famero de despacho</li> </ul> <p>Respecto a la nomenclatura, hemos recortado la palabra DPTO para reducir el tama\u00f1o del diagrama. Adem\u00e1s, recuerda que las entidades y las relaciones se nombran en may\u00fasculas y los atributos en min\u00fasculas. Tambi\u00e9n es recomendable nombrar todos los elementos sin espacios en blanco, para facilitar su posterior transformaci\u00f3n al modelo relacional.</p> <p>Destacar que ni el departamento del empleado ni el jefe son atributos de las entidades, sino que se traducen en relaciones:</p> <ul> <li>Relaci\u00f3n 1:N nombrada como <code>TRABAJAR</code> entre <code>DEPARTAMENTO</code> Y <code>EMPLEADO</code>, de manera que en un departamento trabajan muchos empleados, pero un empleado s\u00f3lo trabaja en un departamento.</li> <li>Relaci\u00f3n 1:1 nombrada como <code>SER_JEFE</code> entre <code>DEPARTAMENTO</code> y <code>EMPLEADO</code>. Un empleado es jefe de un departamento, y en un departamento, un empleado es el jefe.</li> </ul> <p>Este modelo demuestra que dos entidades se pueden relacionar mediante m\u00e1s de una relaci\u00f3n, incluso con diferentes cardinalidades.</p>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#relacion-nm","title":"Relaci\u00f3n N:M","text":"<p>En las relaciones muchos a muchos, en los dos sentidos hay una cardinalidad m\u00e1xima de muchos, es decir, una ocurrencia de la entidad A se relaciona con muchas de la entidad B, y una ocurrencia de la entidad B lo hace con muchas de la entidad A.</p> <p>En el siguiente ejemplo, tenemos que cada empleado puede trabajar en muchos proyectos, y que en cada proyecto, pueden trabajar muchos empleados:</p> Ocurrencias N:M Relaci\u00f3n N:M <p>Si nos fijamos en las ocurrencias de las entidades, vemos como un empleado trabaja en uno o m\u00e1s proyectos (o en ninguno). Por ello, <code>Card(EMPLEADO, TRABAJAR) = (0,N)</code>. En cambio, tenemos proyectos en los que trabajan varios empleados, o incluso proyectos sin empleados, lo que implica que <code>Card(PROYECTO, TRABAJAR) = (0,N)</code>.</p> <p>Nomenclatura</p> <p>En todos los casos, es recomendable no utilizar espacios en blanco ni tildes, para facilitar la futura transformaci\u00f3n al modelo f\u00edsico.</p> <ul> <li>Las entidades suelen ser sustantivos y se nombran en singular y may\u00fasculas.</li> <li>Los atributos tambi\u00e9n en singular, pero en min\u00fasculas.</li> <li>Las relaciones son verbos en may\u00fasculas.</li> </ul> <p>Respecto a la notaci\u00f3n, por ejemplo, en la Universidad de Alicante emplean rombos coloreados para expresar las cardinalidades m\u00e1ximas a N:</p> <p> Notaci\u00f3n UA </p>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#relaciones-nm-con-fechas","title":"Relaciones N:M con fechas","text":"<p>En algunos casos, las relaciones muchos a muchos pueden tener m\u00faltiples ocurrencias entre las mismas entidades en fechas distintas.</p> <p>Por ejemplo, en el contexto de una biblioteca, si pensamos en la relaci\u00f3n <code>PRESTAR</code> entre <code>LIBRO</code> y <code>USUARIO</code>, podemos deducir que un usuario puede llevarse prestados muchos libros y un libro lo pueden prestar muchos usuarios. Pero \u00bfc\u00f3mo modelamos que un usuario se lleva el mismo libro en fechas diferentes?</p> <p>Si ponemos un atributo fecha en la relaci\u00f3n, estamos almacenando la fecha del pr\u00e9stamo, pero no indicamos de ninguna manera que podemos tener m\u00e1s de una fecha. Una soluci\u00f3n factible es hacer el atributo <code>fecha</code> multivaluado, lo que cubrir\u00eda el caso.</p> Relaci\u00f3n N:M con fechas <p>Otra posibilidad es crear una entidad d\u00e9bil, por ejemplo, <code>PRESTAMO</code>, con restricciones de ID con <code>LIBRO</code> y <code>USUARIO</code>.</p>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#relaciones-reflexivas","title":"Relaciones reflexivas","text":"Relaci\u00f3n reflexiva <p>Las relaciones reflexivas (o unarias) son aquellas relaciones de grado uno donde la misma entidad cumple dos roles diferentes en la relaci\u00f3n, los cuales se representan escribi\u00e9ndolo en cada lado de la relaci\u00f3n.</p> <p>Algunos ejemplos comunes son cuando una persona se casa con otra persona, una pieza que se compone de otras piezas o un empleado es responsable de otro empleado.</p> <p>Vamos a centrarnos en el caso de que un empleado sea el responsable de otro, donde podemos decir que todo empleado trabaja para otro pero que el empleado responsable (el jefe) lo es de varios empleados, lo que dar\u00eda lugar a una relaci\u00f3n 1:N. As\u00ed pues, creamos una relaci\u00f3n <code>TRABAJAR</code> y la unimos con <code>EMPLEADO</code> por los dos sentidos de la misma, y anotamos el rol en cada una de las cardinalidades.</p>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#atributos","title":"Atributos","text":"<p>Los atributos describen propiedades de las entidades y de las relaciones, y se representan mediante elipses u \u00f3valos conectado a la entidad o la relaci\u00f3n mediante una l\u00ednea. Es importante destacar que en una misma entidad, el nombre de los atributos no se puede repetir, pero s\u00ed en entidades diferentes.</p> Atributos <p>Existen diferentes tipos de atributos:</p> <ul> <li>Identificador (clave): atributos \u00fanicos que identifican las ocurrencias de la entidad. Se subraya la palabra, como el <code>dni</code> que identifica a un cliente (no tendremos dos clientes con el mismo DNI)</li> <li>Compuesto: agrupaci\u00f3n de varios atributos, ya sean simples o compuestos. Por ejemplo, el campo <code>direccion</code> se compone de la calle, n\u00famero, etc... Se representa mediante \u00f3valos conectados entre s\u00ed, y pondremos el nombre compuesto entre par\u00e9ntesis.</li> <li>Multivaluado: el atributo puede tomar varios valores, como el <code>telefono</code> del cliente, que realmente puede almacenar el fijo, el m\u00f3vil y el n\u00famero del trabajo. Se representa mediante un doble \u00f3valo. (en otras notaciones, se pone una <code>n</code> al lado del conector del atributo)</li> <li>Derivado: Su valor se deduce a partir de otros atributos de la misma entidad, otras entidades con las que se relaciona o se calcula a partir de un dato. Por ejemplo, el campo <code>edad</code> se obtiene a partir de la fecha de nacimiento del cliente. Se representa mediante un \u00f3valo con el borde punteado.</li> <li>Opcional: el atributo puede contener valores nulos, como el <code>email</code>. </li> <li>No nulo: opuesto al atributo opcional, marca el atributo como obligatorio. En alguna notaciones se indica con un peque\u00f1o circulo entre el conector y el \u00f3valo. </li> <li>En una relaci\u00f3n: Su valor depende de la relaci\u00f3n, no de ninguna entidad</li> </ul> <p>Autoevaluaci\u00f3n</p> <p>Piensa en dos entidades que tengan una relaci\u00f3n con la cardinalidad que consideres, e identifica al menos un atributo de cada tipo.</p>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#identificadores","title":"Identificadores","text":"<p>Recuerda esta frase: Toda entidad debe tener uno o m\u00e1s atributos identificadores. M\u00e1s adelante veremos que en alg\u00fan caso particular de entidad no es necesario, pero por lo general, al realizar el modelo conceptual siempre debemos comprobar si hemos identificado un atributo identificador para cada entidad.</p> <p>Respecto a los atributos identificadores podemos tener:</p> <ul> <li>atributos identificadores sencillos. Un atributo identifica de forma un\u00edvoca a una ocurrencia de la entidad. Por ejemplo, el <code>isbn</code> de un libro.</li> <li>atributos identificadores compuestos, donde una entidad se identifica por dos o m\u00e1s atributos a la vez. Por ejemplo, una calle que se identifique por el tipo de via y por el nombre de la calle, de manera  que no es lo mismo la \"Avenida Am\u00e9rica\" que la \"Calle Am\u00e9rica\".</li> <li>varios atributos que pueden identificar a la entidad. Por ejemplo, una persona que podemos identificar mediante su DNI, n\u00famero de pasaporte, n\u00famero de la seguridad social, etc.. Todos los atributos pueden identificar a la entidad <code>PERSONA</code>. Lo que haremos es elegir uno de ellos como identificador (el m\u00e1s com\u00fan o importante dependiendo del contexto del problema), y el resto de atributos se consideran claves alternativas, y se marcan como que aceptan valores \u00fanicos subrayando el nombre de los atributos con una l\u00ednea troceada. \u00bfY si tenemos una entidad que no tiene aparentemente ning\u00fan atributo identificador? En ese caso, crearemos un nuevo atributo que lo haga, como <code>codigo</code> o <code>id</code>, y m\u00e1s adelante, el SGBD le dar\u00e1 un valor secuencial.</li> <li>atributos identificadores que se complementan con otra entidad (este tipo lo estudiaremos en esta unidad dentro de las Restricciones)</li> </ul> <p></p> <p>Supuesto Carreteras</p> <p>Se desea dise\u00f1ar una base de datos que contenga la informaci\u00f3n relativa a todas las carreteras de Espa\u00f1a. Se pide realizar el dise\u00f1o del modelo ER sabiendo que:</p> <ul> <li>Las carreteras se encuentran divididas en tramos.</li> <li>Un tramo, del que nos interesa su longitud, siempre pertenece a una \u00fanica carretera y no puede cambiar de carretera.</li> <li>Un tramo puede pasar por varios t\u00e9rminos municipales, siendo un dato de inter\u00e9s el km del tramo por el que entra en dicho t\u00e9rmino municipal y el km por el que sale.</li> <li>Existen una serie de \u00e1reas en las que se agrupan los tramos, cada uno de los cuales no puede pertenecer a m\u00e1s de un \u00e1rea.</li> </ul> Soluci\u00f3n <p> Soluci\u00f3n supuesto Carreteras </p> <p>Primero localizamos las entidades y sus atributos:</p> <ul> <li>Entidades: <code>CARRETERA</code>, <code>TRAMO</code>, <code>MUNICIPIO</code>, <code>AREA</code></li> <li>Atributos: cada entidad tendr\u00e1 un atributo identificador, y c\u00f3mo en el enunciado no se indica, en unos casos creamos un atributo <code>codigo</code> y en otros con el nombre es suficiente (como es el caso de <code>MUNICIPIO</code>). Como atributo propio, cada <code>TRAMO</code> tiene un atributo <code>longitud</code>.</li> </ul> <p>Las relaciones son:</p> <ul> <li>Relaci\u00f3n 1:N nombrada como <code>PERTENECER</code> entre <code>CARRETERA</code> Y <code>TRAMO</code>, ya que \"las carreteras se encuentran divididas en tramos\" y \"un tramo, del que nos interesa su longitud, siempre pertenece a una \u00fanica carretera y no puede cambiar de carretera\".</li> <li>Relaci\u00f3n N:M nombrada como <code>PASAR</code> entre <code>TRAMO</code> y <code>MUNICIPIO</code>, ya que \"un tramo puede pasar por varios t\u00e9rminos municipales\", y aunque no lo indica de forma explicita, deducimos que por un municipio pueden pasar varios tramos. Adem\u00e1s, a\u00f1adimos dos atributos en la relaci\u00f3n para almacenar \"el km del tramo por el que entra en dicho t\u00e9rmino municipal y el km por el que sale\"\". Si hubi\u00e9ramos colocado los atributos en <code>TRAMO</code> o en <code>MUNICIPIO</code> no tendr\u00edan el mismo significado, ya que nos interesa el dato de la relaci\u00f3n entre las dos entidades y no de una de ellas por separado.</li> <li>Relaci\u00f3n 1:N nombrada como <code>AGRUPAR</code> entre <code>TRAMO</code> Y <code>AREA</code>, ya que \"existen una serie de \u00e1reas en las que se agrupan los tramos, cada uno de los cuales no puede pertenecer a m\u00e1s de un \u00e1rea.\".</li> </ul>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#restricciones","title":"Restricciones","text":"<p>En el apartado de Entidades vimos que tenemos entidades fuertes y d\u00e9biles, y en las d\u00e9biles su existencia depende de otra entidad, de manera que se identifica por sus propiedades y por las propiedades de las entidades de las que depende.</p> <p>Las entidades d\u00e9biles presentan dos tipos de dependencia:</p> <ul> <li> <p>Dependencia en existencia: la entidad d\u00e9bil no puede existir sin la entidad d\u00e9bil, lo que implica que, si desaparece una instancia de entidad fuerte desaparecer\u00e1n las instancias de entidad d\u00e9biles que dependan de la primera. La representaci\u00f3n de este tipo de dependencia incluir\u00e1 una <code>E</code> en el conector o en el interior de la relaci\u00f3n d\u00e9bil. En todos casos las restricciones de existencia implican que la cardinalidad m\u00ednima es 1.</p> </li> <li> <p>Dependencia en identificaci\u00f3n: debe darse una dependencia en existencia y adem\u00e1s, una ocurrencia de la entidad d\u00e9bil no puede identificarse por s\u00ed misma, debiendo hacerse mediante los atributos identificadores de la entidad fuerte asociada. La representaci\u00f3n de este tipo de dependencia incluir\u00e1 una <code>ID</code> en el conector o en el interior de la relaci\u00f3n d\u00e9bil. Tambi\u00e9n se puede representar con un rombo doble. Adem\u00e1s de que la cardinalidad m\u00ednima ser\u00e1 1, es muy com\u00fan que en estos casos, la relaci\u00f3n tenga una cardinalidad de 1:N.</p> </li> </ul> Restricci\u00f3n de ID <p>En el ejemplo tenemos una relaci\u00f3n que tiene una restricci\u00f3n de identificaci\u00f3n entre una l\u00ednea de pedido (entidad d\u00e9bil) respecto a un pedido. El pedido tendr\u00e1 un c\u00f3digo y un montante total que se calcula a partir de los valores de las l\u00edneas de pedido. La propia restricci\u00f3n de identificaci\u00f3n implica que las l\u00edneas de pedido realmente se identifican por su n\u00famero de l\u00ednea y por el c\u00f3digo del pedido, por ejemplo la l\u00ednea <code>1</code> del pedido <code>R2024A01</code>, la l\u00ednea <code>2</code> del mismo pedido, etc... o la l\u00ednea <code>1</code> de otro pedido diferente.</p> <p>En las restricciones de identificaci\u00f3n es muy com\u00fan que la entidad d\u00e9bil se identifique mediante un n\u00famero o c\u00f3digo secuencial, el cual se reinicia por cada cambio de la entidad fuerte.</p> <p>Por ejemplo, todos los apartamentos de un edificio empiezan desde el n\u00famero <code>101</code>, pudiendo tener el apartamento <code>102</code> del edificio <code>E1</code> y el apartamento <code>102</code> del edificio <code>E2</code>, es decir, la entidad <code>APARTAMENTO</code> tiene una restricci\u00f3n de identificaci\u00f3n con <code>EDIFICIO</code>. Pongamos otro ejemplo, si identificamos al alumnado por su n\u00famero de lista y por el grupo al que pertenecen, tendremos que no ser\u00e1 el mismo estudiante el n\u00famero <code>1</code> del grupo <code>1K</code> que el estudiante <code>1</code> del grupo <code>2K</code>, de manera que tendremos una restricci\u00f3n de identificaci\u00f3n entre la entidad <code>ESTUDIANTE</code> y la entidad <code>GRUPO</code>.</p> <p>Cardinalidades exactas</p> <p>En ocasiones sabemos la cantidad exacta de ocurrencias con las que se puede relacionar una entidad. En dicho caso, seguir\u00e1n siendo relaciones 1:N o N:M, pero en el modelo, indicaremos la cantidad de ocurrencias.</p> <p>Por ejemplo, si en una clase se matriculan un m\u00ednimo de 5 estudiantes y un m\u00e1ximo de 24, y un estudiante se matricula en al menos 2 clases y 6 como m\u00e1ximo, tendremos:</p> <p> Cardinalidades exactas </p>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#el-modelo-entidad-relacion-extendido","title":"El modelo Entidad Relaci\u00f3n Extendido","text":"<p>Con los a\u00f1os se extendi\u00f3 el modelo relacional con la incorporaci\u00f3n de los conceptos de clase y subclase, junto con los conceptos de generalizaci\u00f3n y especializaci\u00f3n, as\u00ed como la agregaci\u00f3n de entidades.  </p>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#generalizacion","title":"Generalizaci\u00f3n","text":"<p>La descomposici\u00f3n de tipos de entidad en varios subtipos o subclases permite identificar jerarqu\u00edas de entidades, entre una una entidad general, que denominamos entidad superclase (o entidad padre), que se puede especializar en entidades subclase (o entidades hijas):</p> <ul> <li>La entidad superclase modelan las caracter\u00edsticas comunes de la entidad vista de una forma gen\u00e9rica.</li> <li>Las entidades subclase modelan las caracter\u00edsticas propias de sus especializaciones.</li> </ul> <p>Es necesario que se cumpla que toda ocurrencia de una entidad subclase sea tambi\u00e9n una ocurrencia de su entidad superclase, propagando sus caracter\u00edsticas de padres a hijos, lo que se denomina herencia de propiedades.</p> <p>Generalizaci\u00f3n vs Especializaci\u00f3n</p> <p>Se dice que tenemos una generalizacio\u0301n, cuando dos o ma\u0301s tipos de entidades van a compartir diferentes atributos. Para ello, la entidad superclase contendr\u00e1 aquellos atributos comunes a las subclases. En cambio, se dice que realizamos una especializaci\u00f3n cuando un tipo de entidad tiene algunos atributos que tienen sentido para algunos subclases, pero no para todas. Para ello, cada subclase contendr\u00e1 sus atributos espec\u00edficos, y los comunes se colocan en la superclase.</p> <p>As\u00ed pues, se dice que la generalizaci\u00f3n va de abajo hac\u00eda arriba, subiendo los atributos comunes al padre, y en consecuencia, la especializaci\u00f3n va de arriba a abajo, colocando en los hijos los atributos espec\u00edficos que no comparten todas las subclases.</p> <p>Con generalizaci\u00f3n y la especializaci\u00f3n se establece una relaci\u00f3n ES-UN (en ingl\u00e9s, IS-A), indicando que una entidad hijo ES-UN con la entidad padre. Por ejemplo, si la superclase es <code>VEHICULO</code>, ejemplos de subclases ser\u00edan <code>CAMION</code>, <code>AUTOBUS</code>, <code>MOTO</code>, etc... ya que un <code>CAMION</code> es un <code>VEHICULO</code>.</p> Generalizaci\u00f3n <p>En la generalizaci\u00f3n/especializaci\u00f3n, las caracter\u00edsticas (atributos o interrelaciones) de la entidad superclase se propagan hacia las entidades subclase. Es lo que se denomina herencia de propiedades.</p> <p>Las generalizaciones siempre se representan en vertical, situando la entidad superclase arriba y las subclases debajo. Para conectarlas, se utiliza un c\u00edrculo que puede contener la letra <code>d</code> o la letra <code>o</code> de forma similar al ejemplo que tenemos en el lateral, para indicar que la especializaci\u00f3n es disjunta o solapada (overlap). Entre la clase padre y el c\u00edrculo, si se utiliza una l\u00ednea simple indicamos que es una especializaci\u00f3n parcial y si es doble, que se trata de una generalizaci\u00f3n total.</p> <p>Finalmente, el circulo conecta con los hijos mediante una l\u00ednea que contiene un arco indicando el sentido del padre a los hijos.</p> <p>As\u00ed pues, en el ejemplo tenemos que un <code>LIBRO</code> tiene un isbn y un t\u00edtulo. Y que un <code>EBOOK</code> ES-UN <code>LIBRO</code> y que <code>EN_PAPEL</code> tambi\u00e9n ES-UN <code>LIBRO</code>. Un <code>EBOOK</code> en total tiene tres atributos, los dos que hereda del padre, m\u00e1s el formato del ebook. De forma similar, <code>EN_PAPEL</code>, tambi\u00e9n tiene tres atributos, los dos que hereda de <code>LIBRO</code> m\u00e1s el n\u00famero de p\u00e1ginas de la copia impresa.</p>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#tipos_1","title":"Tipos","text":"<p>Cuando definimos una especializaci\u00f3n es muy importante definir c\u00f3mo se relacionan las superclases con las subclases.</p> <p>Vamos a centrarnos en un supuesto donde tenemos una superclase <code>EMPLEADO</code> y tenemos tres subclases: <code>DIRECTIVO</code>, <code>TECNICO</code> y <code>COMERCIAL</code>.</p> <p>Si nos centramos en la cantidad de subtipos posibles tenemos:</p> <ul> <li>Total: La superclase pertenece obligatoriamente a alguna de las subclases. No puede haber un <code>EMPLEADO</code> que no sea ni <code>DIRECTIVO</code>, ni <code>TECNICO</code>, ni <code>COMERCIAL</code>. Se representa uniendo mediante una l\u00ednea doble (<code>||</code>) la superclase con el c\u00edrculo.</li> <li>Parcial: La superclase puede no pertenecer a alguna de las subclases. Podr\u00edamos tener un  <code>EMPLEADO</code> que no sea ni <code>DIRECTIVO</code>, ni <code>TECNICO</code>, ni <code>COMERCIAL</code>. Se representa uniendo mediante una l\u00ednea sencilla (<code>|</code>) la superclase con el c\u00edrculo.</li> </ul> <p>Y si ponemos en foco en la exclusividad de las subclases:</p> <ul> <li>Disjunta / Exclusiva: La superclase s\u00f3lo pertenece a una de las subclases. Si un <code>EMPLEADO</code> es un <code>DIRECTIVO</code>, no puede ser un <code>TECNICO</code> ni un <code>COMERCIAL</code>. Se representa poniendo una <code>d</code> dentro del c\u00edrculo.</li> <li>Solapada: La superclase puede pertenecer a varias de las subclases a la vez. Un <code>EMPLEADO</code> puede ser un <code>DIRECTIVO</code> y un <code>COMERCIAL</code> a la vez. Se representa poniendo una <code>o</code> dentro del c\u00edrculo.</li> </ul> <p>Con lo cual, se pueden dar las siguientes combinaciones:</p> Total <code>||</code> Parcial <code>|</code> Disjunta<code>(d)</code> Solapada<code>(o)</code> <p>Supuesto Tienda</p> <p>Se pide dise\u00f1ar la base de datos de una tienda, la cual est\u00e1 organizada por departamentos, que contenga informaci\u00f3n sobre los trabajadores y los art\u00edculos que se ofertan.</p> <p>Se deben tener en cuenta las siguientes restricciones:</p> <ul> <li>De todos los trabajadores nos interesa almacenar su DNI, nombre completo y n\u00famero de tel\u00e9fono, as\u00ed como el departamento en el que trabajan.</li> <li>Existen tres tipos de trabajadores: gerentes (del que guardaremos el bonus anual), jefes (nos interesa almacenar cuantos vendedores tiene a su cargo) y vendedores (de cada vendedor, guardaremos su sueldo base y la zona donde trabaja).</li> <li>Cada departamento lo dirige un gerente, aunque se puede dar el caso que tengamos gerentes que no dirijan ning\u00fan departamento.</li> <li>Un gerente tiene a su cargo a un cierto n\u00famero de jefes y \u00e9stos a su vez a un cierto n\u00famero de vendedores.</li> <li>En cuanto a los productos nos interesa su c\u00f3digo, nombre y precio, y departamento en el que se encuentran.</li> <li>Cada producto lo pueden vender muchos vendedores, y cada vendedor, a su vez, puede vender muchos productos. Adem\u00e1s, cada vendedor le aplicar\u00e1 un determinado descuento a los productos con los que trabaja.</li> </ul> Soluci\u00f3n <p> Soluci\u00f3n supuesto Tienda </p> <p>FIXME: Explicar</p>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#agregacion","title":"Agregaci\u00f3n","text":"<p>La agregaci\u00f3n surge de la limitaci\u00f3n que existe en el modelo ER de no permitir expresar relaciones entre relaciones binarias, y en gran medida, haciendo uso de agregaciones podemos evitar hacer uso de relaciones ternarias.</p> <p>As\u00ed pues, una agregaci\u00f3n se comporta como una entidad m\u00e1s, con un nivel de abstracci\u00f3n mayor que la propia relaci\u00f3n.</p> <p>Por ejemplo, tengamos el caso de un docente que imparte clase en una determinada aula. El docente dar\u00e1 clase a varios grupos en el aula, y en el aula entran varios docentes. Queda claro que una relaci\u00f3n N:M entre <code>DOCENTE</code> y <code>AULA</code> (por ejemplo, <code>IMPARTIR</code>) nos permite modelar este caso. Pero \u00bfy si queremos registrar las incidencias que se producen en el aula cuando un docente est\u00e1 dando clase? Si unimos la entidad <code>INCIDENCIA</code> con <code>DOCENTE</code> o con <code>AULA</code>, estar\u00edamos perdiendo informaci\u00f3n.</p> Agregaci\u00f3n <p>As\u00ed pues, creamos una entidad asociativa que funciona como una agregaci\u00f3n, y la nombramos, por ejemplo como <code>SESION</code> (una sesi\u00f3n lectiva la imparte un docente en un aula) y \u00e9sta es la que relacionamos con la entidad <code>INCIDENCIA</code> mediante la relaci\u00f3n <code>REGISTRAR</code>.</p> <p>El mecanismo de agregaci\u00f3n lo que hace es abstraer las entidades y la relaci\u00f3n que las asocia para obtener una entidad compleja, conocida como entidad asociativa, que a su vez puede relacionarse como una entidad normal con el resto de entidades de nuestro sistema.</p> <p>Aunque tiene muchos puntos de contacto con una relaci\u00f3n ternaria, la agregaci\u00f3n remarca la relaci\u00f3n entre una determinada pareja de entidades, al mismo tiempo que no implica una necesaria asociaci\u00f3n con la tercera entidad, como si ocurre en las ternarias.</p>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#referencias","title":"Referencias","text":"<ul> <li> <p>Herramienta gr\u00e1fica ERDPlus para la realizaci\u00f3n de diagramas entidad relaci\u00f3n.</p> </li> <li> <p>Materiales sobre el m\u00f3dulo de BD:</p> <ul> <li>Conceptes del model Entitat-Relaci\u00f3. Entitats. Relacions i Diagrames Entitat-Relaci\u00f3 - Institut Obert de Catalunya</li> <li>Modelo Entidad Relaci\u00f3n de Jorge S\u00e1nchez</li> <li>Interpretaci\u00f3n de Diagramas ER de Javier Guti\u00e9rrez</li> <li>Dise\u00f1o de modelo l\u00f3gicos normalizados gestionbasesdatos.readthedocs.io</li> <li>Dise\u00f1o conceptual de bases de datos de la Universidad de Sevilla</li> </ul> </li> </ul>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"02er.html#actividades","title":"Actividades","text":"<ul> <li> <p>AC201. (RABD.6 // CE6b, CE6c // 3p) A partir del siguiente sistema de informaci\u00f3n, identifica las entidades, atributos y relaciones:</p> <p>Una empresa vende productos a varios clientes. Se necesita conocer los datos personales de los clientes (nombre, apellidos, dni, direcci\u00f3n y fecha de nacimiento). Cada producto tiene un nombre y un c\u00f3digo, as\u00ed como un precio unitario. Un cliente puede comprar varios productos a la empresa, y un mismo producto puede ser comprado por varios clientes. Los productos son suministrados por diferentes proveedores. Se debe tener en cuenta que un producto s\u00f3lo puede ser suministrado por un proveedor, y que un proveedor puede suministrar diferentes productos. De cada proveedor se desea conocer el NIF, nombre y direcci\u00f3n</p> </li> </ul> <p></p> <ul> <li>AC202. (RABD.6 // CE6d // 3p) A partir del ejercicio anterior, realiza el modelo ER unicamente con las entidades y las relaciones (sin colocar los atributos) y define las cardinalidades de las relaciones. Para ello, dibuja en un folio el modelo y escanea o adjunta una foto del resultado y s\u00fabelo a Aules.</li> </ul> <p></p> <ul> <li> <p>AC203. (RABD.6 // CE6b // 3p) A partir del siguiente modelo ER, indica las cardinalidades de las relaciones, y a continuaci\u00f3n, redacta el texto que dar\u00eda lugar como resultado este modelo:</p> <p> Actividad 203 </p> </li> </ul> <p></p> <ul> <li> <p>AC204. (RABD.6 // CE6b, CE6c, CE6e // 1,5p) Realiza el modelo ER del siguiente sistema de informaci\u00f3n:</p> <p>Una empresa ubicada en distintos edificios de distintos pol\u00edgonos industriales desea registrar la distribuci\u00f3n de sus departamentos. Un departamento puede estar distribuido en varios edificios. Del departamento tenemos su nombre y el n\u00famero de empleados que lo integran. De los edificios sabemos su nombre y el n\u00famero de despachos que tienen. En cada edificio (que est\u00e1 localizado en un pol\u00edgono industrial, y del que se conoce su nombre y la ciudad en la que est\u00e1 situado) pueden ubicarse distintos departamentos. Debido a esto, se desea controlar el n\u00famero de despachos que cada departamento tiene en cada edificio.</p> </li> </ul> <p></p> <ul> <li> <p>AC205. (RABD.6 // CE6b, CE6c // 1,5p) Realiza el modelo ER del siguiente sistema de informaci\u00f3n:</p> <p>Una peque\u00f1a empresa telef\u00f3nica desea crear una base de datos para el control de las llamadas efectuadas exclusivamente entre sus clientes. Dispondr\u00e1 de informaci\u00f3n sobre las terminales de su red (si se trata de tel\u00e9fonos m\u00f3viles o fijos, el no de tel\u00e9fono y el nombre del cliente), y de cada llamada realizada entre ellos se almacenar\u00e1: n\u00fameros de tel\u00e9fono del emisor y el receptor de la llamada, la hora de comienzo de la misma y su duraci\u00f3n.</p> </li> </ul> <p></p> <ul> <li> <p>AR206. (RABD.6 // CE6b, CE6c, CE6e // 3p) Realiza el modelo ER de una base de datos que almacenar\u00e1 informaci\u00f3n sobre los r\u00edos de Espa\u00f1a.</p> <p>En esta base de datos vamos a almacenar el nombre y el n\u00famero de habitantes de todas las comunidades aut\u00f3nomas, el nombre y el n\u00famero de habitantes de algunas ciudades, as\u00ed como la autonom\u00eda a la que pertenecen. Se desea conocer el nombre, longitud y caudal de algunos r\u00edos, registrando las ciudades (de entre las que tenemos almacenadas) por las que pasan, as\u00ed como las comunidades que ba\u00f1an. Adem\u00e1s, se guardar\u00e1 el n\u00famero de kil\u00f3metros que de cada r\u00edo discurren por cada comunidad aut\u00f3noma.</p> </li> </ul> <p></p> <ul> <li> <p>AP207. (RABD.6 // CE6b, CE6c, CE6e // 3p) Realiza el modelo ER del siguiente sistema de informaci\u00f3n:</p> <p>Una agencia de viajes pretende informatizar su gesti\u00f3n, que hasta ahora se ven\u00eda haciendo de forma manual. De cada viaje se tiene la siguiente informaci\u00f3n: c\u00f3digo del viaje, nombre del viaje y pa\u00edses visitados</p> <p>Cada viaje se desarrolla en una serie de jornadas (d\u00edas). De cada jornada se desea mantener la siguiente informaci\u00f3n: n\u00famero de la jornada en el viaje, descripci\u00f3n, localidad de partida, localidad de destino y localidades intermedias que se visitan (se puede visitar 0,1 o m\u00e1s localidades intermedias), principal medio de transporte utilizado (0 \u00f3 1), kil\u00f3metros recorridos y hotel de pernocta (puede ocurrir que una jornada no incluya ning\u00fan hotel de pernocta, por ejemplo, una jornada de vuelo).</p> <p>En un viaje se visitan uno o m\u00e1s pa\u00edses. De cada pa\u00eds se cuenta con la siguiente informaci\u00f3n: nombre, pasaporte (si/no), localidad capital y descripci\u00f3n.</p> <p>De cada localidad se desea conocer su nombre, pa\u00eds y descripci\u00f3n. Es posible que en una jornada se visiten localidades situadas en pa\u00edses distintos a los indicados como visitados en el viaje.</p> <p>De cada medio de transporte se desea mantener su c\u00f3digo y descripci\u00f3n. De cada hotel se desea conocer la siguiente informaci\u00f3n: c\u00f3digo de hotel, nombre del hotel, categor\u00eda 1 a 6 estrellas, n\u00famero de fax, n\u00famero de tel\u00e9fono, localidad en que se halla situado, pa\u00eds, descripci\u00f3n y hotel de reserva que lo sustituye en caso de que no haya plazas. En una localidad puede haber situados m\u00e1s de un hotel, pero s\u00f3lo uno ser\u00e1 titular para una jornada determinada.</p> </li> </ul> <p></p> <ul> <li> <p>AC208. (RABD.6 // CE6b, CE6c, CE6e // 3p) Completa el siguiente modelo ER a partir del siguiente sistema de informaci\u00f3n sobre una prueba ciclista, teniendo en cuenta que no est\u00e1n modeladas todas las entidades, relaciones y/o atributos:</p> <p>A los ciclistas inscritos en la prueba se les asigna un dorsal \u00fanico. De cada ciclista participante se desea conocer su edad, nombre y equipo al que pertenece. De cada equipo se desea conocer su director.</p> <p>La prueba es por etapas. De cada etapa se registra el n\u00famero de etapa, los kil\u00f3metros, la ciudad de salida y la de llegada (con unas breves rese\u00f1as geogr\u00e1ficas, hist\u00f3ricas y econ\u00f3micas) y los puertos por los que pasa la etapa (nombre, altura, categor\u00eda).</p> <p>Se quiere conocer qu\u00e9 ciclista ha ganado en cada puerto y qui\u00e9n ha ganado cada etapa.</p> <p> Actividad 208 </p> </li> </ul> <p></p> <ul> <li> <p>AC209. (RABD.6 // CE6b, CE6c, CE6e // 3p) Realiza el modelo ER del siguiente sistema de informaci\u00f3n sobre cine:</p> <p>De cada pel\u00edcula le interesar\u00e1 conocer el t\u00edtulo, el a\u00f1o de producci\u00f3n, la nacionalidad, y los datos (nombre, fecha_nacimiento y nacionalidad) de los int\u00e9rpretes (como mucho los 6 int\u00e9rpretes principales), el director y los autores del gui\u00f3n en el que est\u00e1 basada la pel\u00edcula. De este \u00faltimo -el gui\u00f3n- se sabr\u00e1 adem\u00e1s el t\u00edtulo.</p> <p>Tambi\u00e9n desea conocer los posibles Oscars ganados por cada pel\u00edcula en las modalidades de: mejor pel\u00edcula, mejor gui\u00f3n, mejores int\u00e9rpretes y mejor director.</p> <p>Por \u00faltimo, se tendr\u00e1n identificadas las pel\u00edculas que son remakes de otras, conociendo en ese caso, la pel\u00edcula original y los distintos remakes.</p> </li> </ul> <p></p> <ul> <li> <p>AC210. (RABD.6 // CE6b, CE6c, CE6e // 3p) Realiza el modelo ER del siguiente sistema de informaci\u00f3n sobre un campeonato de ajedrez que gestiona toda la informaci\u00f3n participantes, alojamientos y partidas :</p> <p>En el campeonato participan jugadores y \u00e1rbitros; de ambos se requiere conocer el n\u00famero de asociado, nombre, direcci\u00f3n, tel\u00e9fono de contacto y campeonatos en los que han participado (como jugador o como \u00e1rbitro). De los jugadores se precisa adem\u00e1s el nivel de juego en una escala de 1 a 10. Ning\u00fan \u00e1rbitro puede participar como jugador.</p> <p>Los pa\u00edses env\u00edan al campeonato un conjunto de jugadores y \u00e1rbitros, aunque no todos los pa\u00edses env\u00edan participantes. Todo jugador y \u00e1rbitro es enviado por un \u00fanico pa\u00eds. Un pa\u00eds puede ser representado por otro pa\u00eds. Cada pa\u00eds se identifica por un n\u00famero correlativo seg\u00fan su orden alfab\u00e9tico e interesa conocer adem\u00e1s de su nombre, el n\u00famero de clubes de ajedrez existentes en el mismo.</p> <p>Cada partida se identifica por un numero correlativo (<code>codigop</code>), la juegan dos jugadores y la arbitra un \u00e1rbitro. Interesa registrar las partidas que juegan cada jugador y el color (blancas o negras) con el que juega. Ha de tenerse en cuenta que un arbitro no puede arbitrar a jugadores enviados por el mismo pa\u00eds que le ha enviado a \u00e9l. Todo participante participa en al menos una partida.</p> <p>Tanto jugadores como \u00e1rbitros se alojan en uno de los hoteles en los que se desarrollan las partidas, se desea conocer en qu\u00e9 hotel y en qu\u00e9 fechas se ha alojado cada uno de los participantes. Los participantes pueden no permanecer en el mismo hotel que se realiza el campeonato durante todo el campeonato, sino acudir cuando tienen que jugar alguna partida aloj\u00e1ndose en el mismo o distinto hotel. De cada hotel, se desea conocer el nombre, la direcci\u00f3n y el n\u00famero de tel\u00e9fono.</p> <p>El campeonato se desarrolla a lo largo de una serie de jornadas (a\u00f1o, mes, d\u00eda) y cada partida tiene lugar en una de las jornadas aunque no tengan lugar partidas todas las jornadas.</p> <p>Cada partida se celebra en una de las salas de las que pueden disponer los hoteles, se desea conocer el n\u00famero de entradas vendidas en la sala para cada partida. De cada sala, se desea conocer la capacidad y medios de que dispone (radio, televisi\u00f3n, video...) para facilitar la retransmisi\u00f3n de los encuentros. Una sala puede disponer de varios medios distintos.</p> <p>De cada partida se pretende registrar todos los movimientos que la componen. La identificaci\u00f3n de movimiento se establece en base a un numero de orden dentro de cada partida: para cada movimiento se guardan la jugada (5 posiciones) y un breve comentario realizado por un experto.</p> </li> </ul> <p></p> <ul> <li> <p>AC211. (RABD.6 // CE6b, CE6c, CE6e // 3p) Realiza el modelo ER del siguiente sistema de informaci\u00f3n sobre las cadenas de radio del panorama radiof\u00f3nico:</p> <p>De cada cadena conoceremos el nombre, el g\u00e9nero (musical, de noticias, deportiva, ...) y adem\u00e1s, el nombre de las provincias en las que emite, teniendo en cuenta que una cadena puede tener varias emisoras en una misma provincia, cada una de ellas emitiendo en su correspondiente dial.</p> <p>Por otra parte, conoceremos el nombre y la antig\u00fcedad de todos los empleados de cada cadena de radio. De los t\u00e9cnicos conoceremos adem\u00e1s su especialidad (de sonido, de archivo, de mantenimiento, ...) y de los locutores los programas que presentan.</p> <p>Sabremos, para cada programa, su nombre, la hora de inicio, su duraci\u00f3n en minutos y la cadena de radio que lo emite.</p> <p>Hemos de tener en cuenta adem\u00e1s que cada locutor puede presentar un m\u00e1ximo de tres programas distintos y que cada programa es presentado como mucho por cinco locutores.</p> <p>Los programas pueden tener un patrocinador del que conoceremos el nombre y el aporte econ\u00f3mico; distintos programas pueden tener el mismo patrocinador. </p> </li> </ul> <p></p> <ul> <li> <p>AR212. (RABD.6 // CE6b, CE6c, CE6e // 3p) Realiza el modelo ER del siguiente sistema de informaci\u00f3n sobre la Eurocopa:</p> <p>Nos interesa conocer el nombre de cada selecci\u00f3n y su indumentaria habitual (color de la camiseta, del pantal\u00f3n y las calzas), el nombre del seleccionador y el n\u00famero de a\u00f1os que \u00e9ste lleva en el cargo, y los nombres, n\u00famero de camiseta y posici\u00f3n (portero, defensa, centrocampista, ...) de los 22 jugadores de cada equipo.</p> <p>Adem\u00e1s, se desea almacenar informaci\u00f3n de todos los partidos jugados por cada equipo: la fecha, el lugar, el equipo local y el resultado (n\u00famero de goles del equipo local y del visitante).</p> <p>Tambi\u00e9n, de cada gol marcado, el jugador que lo marca, el portero que lo encaja, el minuto de juego y el tipo de gol (de falta, de penalty, en jugada, etc...).</p> </li> </ul> <p></p> <ul> <li>AP213. (RABD.6 // CE6b, CE6c, CE6e // 3p) Estudia c\u00f3mo se representan las generalizaciones y las agregaciones mediante otras notaciones utilizando los recursos recomendados en el apartado de Referencias.</li> </ul> <p></p> <ul> <li> <p>AC214. (RABD.6 // CE6b, CE6c, CE6d, CE6e // 3p) A partir del siguiente modelo EER sobre un concurso de cocina:</p> <p> Modelo ER Cocina </p> <p>Contesta las siguientes cuestiones justificando tu respuesta:</p> <ol> <li>\u00bfCuantos tipos de concursantes hay? \u00bfPodemos tener m\u00e1s? \u00bfY est\u00e1n relacionados entre s\u00ed?</li> <li>\u00bfQu\u00e9 tipo de relaci\u00f3n existe entre <code>EDICION</code> y <code>PREMIO</code>. \u00bfSe puede repetir el mismo premio en diferentes ediciones?</li> <li>\u00bfPuede ganar el concurso un restaurante que lo dirige un concursante de un pa\u00eds diferente?</li> <li>\u00bfPara qu\u00e9 sirve el atributo <code>contrato</code> de la relaci\u00f3n <code>TRABAJAR</code> entre <code>RESTAURANTE</code> y <code>PROFESIONAL</code></li> <li>Respecto a las recetas, \u00bfpor qu\u00e9 tiene una relaci\u00f3n reflexiva?</li> <li>Si eliminamos la entidad <code>PAIS</code>, \u00bfqu\u00e9 cambios habr\u00eda que hacer en el modelo para siguiera expresando lo mismo?</li> </ol> </li> </ul> <p></p> <ul> <li> <p>PY215. (RABD.6 // CE6b, CE6c, CE6d, CE6e // 10p) Una vez que ya tenemos unas nociones b\u00e1sicas sobre el modelado conceptual de datos, llega el momento de concretar el sistema de informaci\u00f3n y crear el modelo de datos del Reto I - Dise\u00f1amos de nuestro equipo.</p> <p>Toda soluci\u00f3n debe:</p> <ul> <li>Tener un m\u00ednimo de 6 entidades.</li> <li>Utilizar relaciones con diferentes cardinalidades.</li> <li>Emplear atributos de diferente tipo.</li> <li>Utilizar una generalizaci\u00f3n o agregaci\u00f3n.</li> </ul> <p>Se debe entrar un informe con el sistema de informaci\u00f3n, el modelo EER y describir las decisiones tomadas en su elaboraci\u00f3n.</p> <p>Se utilizar\u00e1 una r\u00fabrica para su evaluaci\u00f3n en base a la siguiente lista de cotejo:</p> <ul> <li>Todas las entidades tienen un atributo que las identifica.</li> <li>La nomenclatura es homog\u00e9nea en todo el modelo.</li> <li>Las entidades se nombran en singular y may\u00fasculas.</li> <li>Las relaciones se nombran con verbos en may\u00fasculas.</li> <li>Los atributos se nombran en min\u00fasculas.</li> <li>Todas las relaciones indican la cardinalidad</li> </ul> </li> </ul>","tags":["Modelo Entidad Relaci\u00f3n","RA6"]},{"location":"03mr.html","title":"Dise\u00f1o L\u00f3gico: Modelo Relacional","text":"","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#propuesta-didactica","title":"Propuesta did\u00e1ctica","text":"<p>En esta UT vamos a continuar trabajando el RA6: Dise\u00f1a modelos relacionales normalizados interpretando diagramas entidad/relaci\u00f3n.</p>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#criterios-de-evaluacion","title":"Criterios de evaluaci\u00f3n","text":"<ul> <li>CE6b: Se han identificado las tablas del dise\u00f1o l\u00f3gico.</li> <li>CE6c: Se han identificado los campos que forman parte de las tablas del dise\u00f1o l\u00f3gico.</li> <li>CE6d: Se han analizado las relaciones entre las tablas del dise\u00f1o l\u00f3gico.</li> <li>CE6e: Se han identificado los campos clave.</li> <li>CE6f: Se han aplicado reglas de integridad.</li> <li>CE6g: Se han aplicado reglas de normalizaci\u00f3n.</li> </ul>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#contenidos","title":"Contenidos","text":"<p>Bases de datos relacionales:</p> <ul> <li>Modelo de datos.</li> <li>Terminolog\u00eda del modelo relacional.</li> <li>Tipos de datos.</li> <li>Claves primarias.</li> <li>Restricciones de validaci\u00f3n.</li> <li>El valor NULL.</li> <li>Claves ajenas.</li> </ul> <p>Interpretaci\u00f3n de Diagramas Entidad/Relaci\u00f3n:</p> <ul> <li>Elementos del modelo relacional.</li> <li>Restricciones sem\u00e1nticas del modelo relacional.</li> <li>Normalizaci\u00f3n de modelos relacionales.</li> </ul> <p>Cuestionario inicial</p> <ol> <li>\u00bfQu\u00e9 diferencia el modelo conceptual del l\u00f3gico?</li> <li>\u00bfCu\u00e1l es el elemento principal del modelo relacional?</li> <li>\u00bfQu\u00e9 funci\u00f3n tiene la clave primaria?</li> <li>\u00bfQu\u00e9 es una clave alternativa?</li> <li>\u00bfTodas las tablas tienen m\u00e1s de una clave candidata?</li> <li>\u00bfEn qu\u00e9 consiste la integridad referencial?</li> </ol> <p>TODO: Cuestiones normalizaci\u00f3n</p>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#programacion-de-aula-8h","title":"Programaci\u00f3n de Aula (8h)","text":"<p>Esta unidad es la tercera, con lo que se imparte en la primera evaluaci\u00f3n, durante la segunda quincena de octubre, con una duraci\u00f3n estimada de 10 horas:</p> Sesi\u00f3n Contenidos Actividades Criterios trabajados 1 Modelo Relacional AC301 2 Elementos AC302 3 Restricciones AC303 4 Notaci\u00f3n AC305,  AC306 5 Diccionario de datos AC310 6 Normalizaci\u00f3n I CE6g 7 Normalizaci\u00f3n II CE6g","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#el-modelo-relacional","title":"El modelo relacional","text":"<p>En la unidad anterior estudiamos que un modelo l\u00f3gico representa de forma conceptual la estructura de una base de datos, pero dependiendo del SGBD a utilizar.</p> Modelo l\u00f3gico <p>Si nuestra elecci\u00f3n es un SGBD relacional, el modelo por excelencia es el modelo relacional. Creado por Codd a finales de los 60, aunque los primeros SGBD relacionales no aparecieron hasta los 80. Una base de datos modelada mediante el modelo relacional se conoce como una base de datos relacional.</p> <p>Supuso una revoluci\u00f3n en el dise\u00f1o l\u00f3gico de base de datos, dando lugar a la segunda generaci\u00f3n de SBGD. Es el modelo l\u00f3gico m\u00e1s extendido, y por ende, el mercado de SGBD est\u00e1 copado de soluciones relacionales como Oracle, PostgreSQL, MySQL, SQL Server, etc...</p> <p>Los objetivos del modelo relacional son:</p> <ul> <li>Independencia f\u00edsica<ul> <li>La forma de almacenar los datos no debe influir en su manipulaci\u00f3n l\u00f3gica</li> </ul> </li> <li>Independencia l\u00f3gica<ul> <li>La aplicaciones que usan el SGBD no debe sufrir una modificaci\u00f3n cuando se modifique una BD.</li> </ul> </li> <li>Flexibilidad<ul> <li>Diferentes vistas para diferentes usuarios</li> </ul> </li> <li>Uniformidad</li> <li>Sencillez</li> </ul>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#elementos","title":"Elementos","text":"<p>El elemento principal es la relaci\u00f3n, que consiste en una tabla que contiene filas y columnas. Una base de datos relacional consiste en un conjunto de tablas relacionadas donde cada tabla tiene un nombre \u00fanico.</p> <p>Las relaciones se conocen como tablas relacionales o m\u00e1s com\u00fanmente como tablas. </p> <p>Cada columna (tambi\u00e9n llamado campo o atributo de la relaci\u00f3n) almacena informaci\u00f3n sobre una propiedad determinada de la tabla, como puede ser el nombre, DNI, apellidos o la edad.</p> <p>Cada fila posee una ocurrencia o ejemplar de la instancia o relaci\u00f3n representada por la tabla (a las filas se las llama tambi\u00e9n tuplas o registros).</p> Elementos de una tabla <p>Grado y Cardinalidad</p> <p>El grado de una relaci\u00f3n indica el n\u00famero de columnas. La cardinalidad indica el n\u00famero de filas.</p> <p>As\u00ed pues, un ejemplo de una relaci\u00f3n <code>CLIENTE</code> de grado 5 (<code>dni</code>, <code>nombre</code>, <code>direccion</code>, <code>fecha</code> y <code>genero</code>) con 3 tuplas ser\u00eda:</p> dni nombre direcci\u00f3n fecha genero 12345678A Pedro Casas Avenida de la libertad, 23 21/03/24 M 48123456B Mireia Vidal Porta de la Morera, 6 22/03/24 F 34123456C Laura Meca Pla\u00e7a de Baix, s/n 23/03/24 F <p>Como podemos observar, en la cabecera est\u00e1n los nombres de las columnas, y cada fila supone una nueva ocurrencia. Podemos referirnos al campo de una tabla mediante la notaci\u00f3n <code>TABLA.campo</code>, por ejemplo, <code>CLIENTE.nombre</code> referencia el campo <code>nombre</code> de la tabla <code>CLIENTE</code>.</p> <p>En una misma tabla, no podemos repetir el nombre de las columnas, aunque s\u00ed que lo podemos repetir en tablas diferentes. Por ejemplo, <code>CLIENTE.dni</code> y <code>PROVEEDOR.dni</code> ser\u00edan campos de tablas diferentes con el mismo nombre.</p> <p>Una restricci\u00f3n del modelo relacional es que dentro de una tabla no puede haber dos tuplas iguales, ya que implicar\u00eda el mismo dato dos veces. Adem\u00e1s, todas las tuplas deben tener el mismo n\u00famero de campos, aunque alguno est\u00e9 vac\u00edo (se permiten campos con valores nulos).</p> <p>El orden no importa</p> <p>El orden de las tuplas no importa, ni tampoco el orden de los atributos.</p> <p>Dicho esto, esta ser\u00eda otra representaci\u00f3n de la misma tabla:</p> dni direcci\u00f3n genero fecha nombre 34123456C Pla\u00e7a de Baix, s/n F 23/03/24 Laura Meca 48123456B Porta de la Morera, 6 F 22/03/24 Mireia Vidal 12345678A Avenida de la libertad, 23 M 21/03/24 Pedro Casas","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#dominio","title":"Dominio","text":"<p>El dominio de un atributo indica el tipo de valores para un determinado campo. Dicho de otro modo, cada atributo s\u00f3lo puede tomar un valor en el dominio en el que est\u00e1 inscrito.</p> <p>Si nos basamos en el ejemplo anterior, tendr\u00edamos que los dominios ser\u00edan:</p> <ul> <li><code>dni</code>: 8 d\u00edgitos y una letra.</li> <li><code>nombre</code>: cadena de hasta 32 caracteres.</li> <li><code>direcci\u00f3n</code>: cadena de hasta 64 caracteres.</li> <li><code>fecha</code>: fecha compuesta de <code>dd/mm/yy</code>.</li> <li><code>genero</code>: caracteres <code>M</code>, <code>F</code> o <code>?</code></li> </ul> <p>Como cada atributo s\u00f3lo puede tomar un valor para una misma tupla (los valores de los campos son at\u00f3micos), no podr\u00edamos poner dos DNIs o dos fechas a un mismo cliente.</p> <p>A muy alto nivel, los tipos de datos b\u00e1sicos para los dominios son:</p> <ul> <li>texto: cadena de caracteres, letras, s\u00edmbolos o n\u00fameros con lo que se realizan operaciones (por ejemplo, un c\u00f3digo postal)</li> <li>num\u00e9rico: n\u00fameros sobre los cuales se pueden realizar operaciones matem\u00e1ticas.</li> <li>fecha/hora: fechas, horas, o ambas</li> <li>booleano (V/F - S\u00ed/No): datos con dos posibles valores</li> <li>autonum\u00e9rico: secuencia (1,2,3,...) que el SGBD incrementa de forma autom\u00e1tica cuando se a\u00f1ade un nuevo registro</li> </ul> <p>Tipos de dominio</p> <p>Cuando estudiamos el modelo f\u00edsico haremos m\u00e1s hincapi\u00e9 en todos los tipos de dominio existente. De momento, lo m\u00e1s importante es tener claro que todos los valores de un determinado campo en una tabla comparten el mismo dominio.</p>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#claves","title":"Claves","text":"<p>Cada tabla tiene una columna (o en algunos casos un conjunto de columnas) que sirven como clave primaria (PK / primary key). Su prop\u00f3sito es distinguir a una tupla de otra dentro de la tabla. </p> <p>Cada tabla debe tener una clave primaria, la cual es una columna (o conjunto de columnas) cuyo valor es \u00fanico para cada fila.</p> <p>Volvamos al ejemplo anterior sobre la tabla <code>CLIENTE</code>:</p> dni nombre direcci\u00f3n fecha genero 12345678A Pedro Casas Avenida de la libertad, 23 21/03/24 M 48123456B Mireia Vidal Porta de la Morera, 6 22/03/24 F 34123456C Laura Meca Pla\u00e7a de Baix, s/n 23/03/24 F <p>El campo <code>dni</code> funciona como clave primaria de la tabla, ya que no hay dos clientes con el mismo DNI. Pero, \u00bfy el campo <code>nombre</code>? Aunque en la tabla no tengamos ahora mismo dos clientes con el mismo nombre, conceptualmente sabemos que se puede dar el caso, y por lo tanto, no ser\u00eda una elecci\u00f3n correcta, ya que el nombre de un cliente no lo identifica de forma univoca.</p>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#claves-candidatas","title":"Claves candidatas","text":"<p>Si una tabla tiene m\u00e1s de un campo (o un conjunto de ellos) que pueden identificar un\u00edvocamente a cada tupla de la tabla, se dice que todas las claves posibles son claves candidatas.</p> <p>De entre las claves candidatas, elegiremos una como la clave primaria y el resto ser\u00e1n claves alternativas. As\u00ed pues, una clave alternativa es una clave candidata que no es primaria.</p> <p>Por ejemplo, si pensamos en la tabla <code>ESTUDIANTE</code> podemos definir los siguientes campos: <code>nif</code>, <code>codigo</code>, <code>nombre</code>, <code>fMatricula</code>, <code>direccion</code>. Las claves candidatas ser\u00edan <code>ESTUDIANTE.codigo</code> y <code>ESTUDIANTE.nif</code>, ya que permiten identificar de forma un\u00edvoca a cada estudante. Si nos decantamos por <code>ESTUDIANTE.codigo</code> como su clave primaria, entonces <code>ESTUDIANTE.nif</code> ser\u00eda una clave alternativa.</p> nif codigo nombre fMatricula direccion 12345678A 1 Pedro Casas 1/9/24 Avenida de la libertad, 23 48123456B 2 Mireia Vidal 1/9/24 Porta de la Morera, 6 34123456C 3 Laura Meca 1/9/24 Pla\u00e7a de Baix, s/n","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#claves-ajenas","title":"Claves ajenas","text":"<p>Finalmente, tenemos las claves ajenas (FK / foreign key), los cuales son campos cuyos valores referencian a valores de otra tabla.</p> <p>Dentro del modelo relacional, el hecho de relacionar los datos de una tabla con otra es crucial, y se realiza mediante las claves ajenas. As\u00ed pues, la clave ajena de una tabla referencia, normalmente, al valor de la clave primaria de otra tabla. Por ello, los dominios de la clave ajena y de la clave primaria referenciada deben ser iguales (un campo num\u00e9rico no puede referenciar a un campo de texto).</p> <p>Por ejemplo, tenemos dos tablas, una para estudiantes (igual que la anterior) y otra para almacenar qu\u00e9 cursos realizan los estudiantes, similares a las siguientes:</p> <ul> <li> <p><code>ESTUDIANTE</code></p> nif codigo nombre fMatricula direccion 12345678A 1 Pedro Casas 1/9/24 Avenida de la libertad, 23 48123456B 2 Mireia Vidal 1/9/24 Porta de la Morera, 6 34123456C 3 Laura Meca 1/9/24 Pla\u00e7a de Baix, s/n </li> <li> <p><code>CURSAR</code></p> nifEstudiante* asignatura anyo repetidor 12345678A 1 2024 true 48123456B 1 2024 false 12345678A 2 2023 false </li> </ul> <p>El campo <code>CURSAR.nifEstudiante</code> es una clave ajena de la relaci\u00f3n <code>CURSAR</code> y enlaza con la relaci\u00f3n <code>ESTUDIANTE</code> con el campo <code>ESTUDIANTE.nif</code>.</p> <p>Visualmente, lo podemos representar mediante el siguiente gr\u00e1fico:</p> Clave ajena <p>Conviene aclarar que un campo puede ser clave primaria y clave ajena a la vez. Adem\u00e1s, una tabla puede tener m\u00e1s de una clave ajena o no tener ninguna. Adem\u00e1s, en el caso de las relaciones reflexivas, la clave ajena de la relaci\u00f3n enlazar\u00e1 con la clave primaria de s\u00ed misma.</p>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#borrado-y-actualizacion","title":"Borrado y actualizaci\u00f3n","text":"<p>Cuanto trabajamos con varias tablas relacionadas mediante claves ajenas y claves primarias, debemos definir las reglas y modificar la clave primaria a la que referencian.</p> <p>Al actualizar/borrar un registro que contiene una clave ajena, se puede:</p> <ul> <li>Rechazar: no se permite el borrado/modificaci\u00f3n</li> <li>Propagar: se borra/modifica el registro, y las tuplas que lo referencian</li> <li>Anular: se borra/modifica el registro y las tuplas que lo referencian ponen a nulo la clave ajena.</li> </ul> <p>Autoevaluaci\u00f3n</p> <p>Si volvemos a la relaci\u00f3n entre <code>ESTUDIANTE</code> y <code>CURSAR</code>, \u00bfqu\u00e9 sucede cuando eliminamos el estudiante <code>12345678A</code>?</p> <ul> <li> <p><code>ESTUDIANTE</code></p> nif codigo nombre fMatricula direccion 12345678A 1 Pedro Casas 1/9/24 Avenida de la libertad, 23 48123456B 2 Mireia Vidal 1/9/24 Porta de la Morera, 6 </li> <li> <p><code>CURSAR</code></p> nifEstudiante* asignatura anyo repetidor 12345678A 1 2024 true 48123456B 1 2024 false 12345678A 2 2023 false </li> </ul> <p>Profundizaremos en las operaciones entre claves ajenas y primarias cuando trabajemos las operaciones DML sobre el modelo f\u00edsico en la Unidad 5.</p>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#restricciones-semanticas","title":"Restricciones sem\u00e1nticas","text":"<p>A la hora de definir las propiedades de una tabla y sus columnas podemos emplear las siguientes restricciones:</p> <ul> <li>clave primaria: los atributos marcados como clave primaria no puedan repetir valores.</li> <li>unicidad: impide que los valores de los atributos marcados de esa forma puedan repetirse, consider\u00e1ndose un\u00edvocos. A nivel visual se marcan con <code>UK</code>. Vamos a considerar que un atributo <code>UK</code> no permite valores repetidos pero s\u00ed nulos (dependiendo del SGBD, en algunos casos se permiten y en otros no).</li> <li>obligatoriedad (<code>VNN</code>): proh\u00edbe que el atributo marcado de esta forma no tenga ning\u00fan valor (valor no nulo).</li> <li>regla de validaci\u00f3n: condici\u00f3n que debe de cumplir un dato concreto para que sea actualizado.</li> </ul> <p>Adem\u00e1s, podemos definir diferentes restricciones:</p> <ul> <li>a nivel de fila, por ejemplo, de relaci\u00f3n entre columnas, del tipo la fecha de devoluci\u00f3n debe ser posterior a la fecha de pr\u00e9stamo</li> <li>a nivel de conjunto de filas, por ejemplo, un cliente no puede hacer m\u00e1s de 20 pedidos en un d\u00eda</li> <li>a nivel de negocio, del tipo, al insertar un pedido, se debe comprobar si la direcci\u00f3n de env\u00edo es la misma que la direcci\u00f3n del cliente, y en caso de no serlo, a\u00f1adir una nueva direcci\u00f3n al cliente.</li> </ul>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#nulos","title":"Nulos","text":"<p>Los valores nulos (<code>NULL</code>) indican contenidos de atributos que no tienen ning\u00fan valor, bien porque la informaci\u00f3n es desconocida o no aplicable. Es decir, m\u00e1s que un valor, es la ausencia de informaci\u00f3n. Algunos SGBD muestran la palabra clave <code>NULL</code>, mientras que otros muestran el campo en blanco.</p> <p>Por ejemplo, si en la tabla <code>ESTUDIANTE</code> tenemos un registro con la direcci\u00f3n nula, est\u00e1 indicando que desconocemos la direcci\u00f3n de <code>Mireia Vidal</code>, no que no tenga direcci\u00f3n.</p> nif codigo nombre fMatricula direccion 12345678A 1 Pedro Casas 1/9/24 Avenida de la libertad, 23 48123456B 2 Mireia Vidal 1/9/24 <code>NULL</code> 34123456C 3 Laura Meca 1/9/24 Pla\u00e7a de Baix, s/n <p>Si el campo es una clave ajena, indica que el registro actual no est\u00e1 relacionado con ninguno.</p> <p>Las bases de datos relacionales admiten utilizar ese valor en todo tipo de operaciones.</p> <p>En cuanto a los campos booleano (V/F), define un tercer valor en la l\u00f3gica, ya que adem\u00e1s del valor verdadero o falso, existe el valor para los nulos.</p>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#integridad-de-entidad","title":"Integridad de entidad","text":"<p>La integridad de entidad define que todas las claves primarias deben tener valor, y por lo tanto, no admiten valores nulos.</p> <p>Si volvemos a la <code>ESTUDIANTE</code>, no podemos tener ning\u00fan estudiante con el nif vac\u00edo.</p> <p>Al definir un campo como <code>PK</code> ya estamos declarando que dicho campo no admite valores nulos (ni repetidos por el propio concepto de clave primaria).</p>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#integridad-referencial","title":"Integridad referencial","text":"<p>Si una relaci\u00f3n R1 posee una clave ajena que la enlaza con la relaci\u00f3n R2, entonces diremos que cumple la restricci\u00f3n de integridad referencial si todo valor de dicha clave ajena de R1 cumple una de las dos condiciones:</p> <ol> <li>coincide con alg\u00fan valor de la clave primaria en la relaci\u00f3n R2</li> <li>toma el valor nulo (<code>NULL</code>)</li> </ol> <p>Es decir, proh\u00edbe colocar valores en una clave ajena que no est\u00e9n reflejados en la clave primaria de la tabla que relaciona.</p> <p>Veamos un ejemplo que no cumple con la integridad referencial. Tengamos los siguientes datos, sabiendo que <code>CURSAR.nifEstudiante</code> es una clave ajena que apunta a <code>ESTUDIANTE.nif</code>:</p> <ul> <li> <p><code>ESTUDIANTE</code></p> nif codigo nombre fMatricula direccion 12345678A 1 Pedro Casas 1/9/24 Avenida de la libertad, 23 48123456B 2 Mireia Vidal 1/9/24 Porta de la Morera, 6 34123456C 3 Laura Meca 1/9/24 Pla\u00e7a de Baix, s/n </li> <li> <p><code>CURSAR</code></p> nifEstudiante* asignatura anyo repetidor 12345678A 1 2024 true 1 2024 false 66666666Z 2 2023 false </li> </ul> <p>El primer fallo que encontramos es que el campo <code>CURSAR.nifEstudiante</code> contiene nulos. Aunque las claves ajenas permiten valores nulos, al tratarse tambi\u00e9n de una clave primaria, estar\u00eda incumpliendo la integridad de entidad.</p> <p>El segundo error es que el valor <code>66666666Z</code> referencia a un estudiante invalido, y este valor s\u00ed que viola la integridad referencial, ya que dicho valor no existe en <code>ESTUDIANTE.nif</code>.</p>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#notacion","title":"Notaci\u00f3n","text":"<p>Para representar una tabla en el modelo relaci\u00f3n usaremos una notaci\u00f3n textual que facilita su comprensi\u00f3n y posterior transformaci\u00f3n al modelo f\u00edsico. A esta representaci\u00f3n se le conoce como esquema relacional (o esquema l\u00f3gico/can\u00f3nico).</p> <p>Pondremos el nombre de la tabla en may\u00fasculas, y a continuaci\u00f3n, entre par\u00e9ntesis, enumeraremos los campos mediante su nombre en min\u00fasculas (y opcionalmente su dominio). Como convenci\u00f3n, el primer atributo ser\u00e1 aquel que hace la funci\u00f3n de clave primaria, el cual adem\u00e1s subrayaremos para facilitar la legibilidad, y a aquellos campos que sean claves ajenas les a\u00f1adiremos un asterisco (<code>*</code>) para indicar su condici\u00f3n.</p> <p>Tras el listado de campos, enumeraremos las restricciones, con el siguiente orden:</p> <ol> <li>la clave primaria (<code>PK</code>), con el atributo o conjunto de atributos que identifican un\u00edvocamente a una tupla.</li> <li>las claves ajenas (<code>FK</code>) (si las hubiera), indicando el nombre de la columna, una flecha, y la relaci\u00f3n a la que referencia.</li> <li>el resto de restricciones (<code>UK</code>, <code>VNN</code>, comprobaciones, etc...) (si las hubiera)</li> </ol> <p>M\u00e1s propiedades</p> <p>Un campo puede tener opcionalmente las siguientes propiedades:</p> <ul> <li>descripci\u00f3n: texto breve que aporta informaci\u00f3n sobre el contenido o la finalidad del campo.</li> <li>tama\u00f1o: tama\u00f1o m\u00e1ximo permitido.</li> <li>rango de valores posibles, a modo de enumeraci\u00f3n.</li> <li>requerido o <code>NOT NULL</code>: no permite valores nulos.</li> <li>predeterminado (<code>DEFAULT</code>): valor por defecto para cuando no se inserta ning\u00fan valor.</li> </ul> <p>Por ejemplo, un esquema l\u00f3gico en modelo relacional que relaciona un libro con un autor, y un autor con muchos libros (relaci\u00f3n 1:N) podr\u00eda ser el siguiente:</p> <p><code> AUTOR (codigo: autonum\u00e9rico, nombre: texto, fnac: fecha, nacionalidad: texto) \u00b7 PK: (codigo) </code></p> <p><code> LIBRO (isbn: texto, titulo: texto, descripcion: texto, autor<code>*</code>: num\u00e9rico, editorial: texto, pvp: real) \u00b7 PK: (isbn) \u00b7 FK: (autor) \u2192 AUTOR </code></p> <p>Por legibilidad, vamos a omitir los dominios y representar las tablas \u00fanicamente con el nombre de los campos, y posteriormente, en el diccionario de datos, definiremos sus tipos. De este modo, quedar\u00eda as\u00ed:</p> <p><code> AUTOR (codigo, nombre, fnac, pais) \u00b7 PK: (codigo) </code></p> <p><code> LIBRO (isbn, titulo, autor<code>*</code>, editorial, pvp) \u00b7 PK: (isbn) \u00b7 FK: (autor) \u2192 AUTOR </code></p> <p>Tenemos que el autor se identifica por un c\u00f3digo, el cual es su clave primaria. En cambio, los libros se identifican por su ISBN, y tienen un atributo <code>autor</code> que referencia a la clave primaria de <code>AUTOR</code> (y por tanto, deben tener el mismo dominio). De esta relaci\u00f3n, deducimos que el nombre del atributo de la clave ajena no tiene por qu\u00e9 coincidir con el nombre de la clave primaria, pero s\u00ed su dominio.</p> <p>Vamos a crear datos ficticios y comprobaremos si el modelo cumple la relaci\u00f3n de uno a muchos:</p> <ul> <li> <p><code>AUTOR</code></p> codigo nombre fnac pais 1 Brandon Sanderson 19/12/75 1/9/24 2 Juan G\u00f3mez Jurado 16/12/77 1/9/24 3 J\u00f6el Dicker 16/06/85 1/9/24 </li> <li> <p><code>LIBRO</code></p> isbn titulo autor<code>*</code> editorial pvp 9788420476841 Un animal salvaje 3 Alfaguara 23,90 9788420414065 La verdad sobre el caso Harry Quebert 3 Alfaguara 23,90 9788491221722 Lazarillo de Tormes Santillana 14,20 9788419260444 Nacidos de la bruma 1 Nova 24,90 </li> </ul> <p>As\u00ed pues, comprobamos que tenemos un autor (el <code>3</code> con dos libros), e incluso un libro sin autor, confirmando la relaci\u00f3n 1:N conforme quer\u00edamos dise\u00f1ar.</p> <p>Cardinalidad de las relaciones</p> <p>Con lo que sabemos hasta ahora, piensa c\u00f3mo</p> <ul> <li>\u00bfevitamos que la cardinalidad m\u00ednima sea 0 entre LIBRO y AUTOR, es decir, que <code>Card(LIBRO, ESCRIBIR) = (1,1)</code>, de manera que cada libro lo escriba siempre un autor, no permitiendo valores nulos en la clave ajena?</li> <li>\u00bfcambiamos la relaci\u00f3n de 1:N a una relaci\u00f3n 1:1, para que cada autor solo pudiera escribir un libro?</li> </ul>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#representacion-grafica","title":"Representaci\u00f3n gr\u00e1fica","text":"<p>Para la representaci\u00f3n gr\u00e1fica de los modelos l\u00f3gicos podemos emplear diversas herramientas existentes en el mercado, como ERDPlus o MySQLWorbench (m\u00e1s cercano al modelo f\u00edsico).</p> <p>En nuestro caso, nos vamos a centrar en ERDPlus, al ser una herramienta online gratuita. Una vez registrados, tenemos la opci\u00f3n de generar un diagrama ER o un esquema relacional. En este caso, nos centraremos en el esquema relacional.</p> <p>Mediante la barra superior, con el bot\u00f3n <code>TABLE</code> nos aparecer\u00e1 un di\u00e1logo a la derecha donde podremos indicar el nombre de la tabla y a\u00f1adir y configurar los atributos de la tabla. Tras a\u00f1adir todos los atributos, debemos configurar su clave primaria mediante el bot\u00f3n PRIMARY KEY del men\u00fa lateral:</p> Tabla AUTOR en ERDPlus <p>A continuaci\u00f3n, repetimos los pasos y a\u00f1adimos los campos de la tabla <code>LIBRO</code>, pero sin a\u00f1adir la clave ajena. Para ello, mediante el bot\u00f3n CONNECT de la barra superior, pinchamos en <code>AUTOR</code> y arrastramos a <code>LIBRO</code>, y veremos como a\u00f1ade un nuevo atributo en la tabla <code>LIBRO</code> con la clave primaria de <code>AUTOR</code>, marcando el nuevo atributo con la etiqueta FK. A continuaci\u00f3n, para que coincida con nuestro modelo l\u00f3gico, renombramos el atributo, y lo colocamos tras el <code>titulo</code>:</p> Clave ajena con ERDPlus","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#diccionario-de-datos","title":"Diccionario de datos","text":"<p>El diccionario de datos de un modelo relacional es un repositorio central que almacena metadatos sobre los elementos de una base de datos.</p> <p>En un sistema de bases de datos relacional, el diccionario de datos incluye detalles sobre las estructuras de las tablas, las relaciones entre las tablas, las columnas, los \u00edndices, las restricciones, los procedimientos almacenados y otros objetos de la base de datos. Es esencialmente un cat\u00e1logo que describe la estructura l\u00f3gica y la organizaci\u00f3n de la base de datos.</p> <p>Las funciones del diccionarios de datos son:</p> <ul> <li> <p>Documentaci\u00f3n: Sirve como referencia para desarrolladores y administradores de bases de datos, ayud\u00e1ndoles a entender la estructura y organizaci\u00f3n de la base de datos.</p> </li> <li> <p>Control de integridad: Ayuda a asegurar que las definiciones de las tablas y relaciones se mantengan coherentes y conformes a las reglas establecidas.</p> </li> </ul>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#componentes","title":"Componentes","text":"<ol> <li> <p>Tablas y columnas: Describe las tablas en la base de datos, los nombres de las columnas, tipos de datos, tama\u00f1os y si permiten valores nulos.</p> </li> <li> <p>Relaciones y claves: Define las relaciones entre tablas y especifica las claves primarias y ajenas.</p> </li> <li> <p>Restricciones: Incluye detalles sobre restricciones como <code>UNIQUE</code>, <code>CHECK</code>, <code>NOT NULL</code>, y <code>DEFAULT</code>.</p> </li> </ol> <p>Si nos centramos en los modelos f\u00edsicos, podr\u00edamos incluir otros componentes como \u00edndicas, vistas, procedimientos almacenados y funciones, triggers, as\u00ed como usuarios y permisos.</p>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#ejemplo","title":"Ejemplo","text":"<p>Para este ejemplo, nos vamos a basar en el mismo ejemplo que hemos utilizado en el apartado de Notaci\u00f3n, donde un <code>AUTOR</code> escribe muchos <code>LIBRO</code>, pero un <code>LIBRO</code> s\u00f3lo lo escribe un <code>AUTOR</code>.</p> <p>Para documentar el diccionario de datos, se utiliza una estructura de tabla con el nombre de la columna, el tipo de datos y una descripci\u00f3n del campo:</p> <ul> <li> <p>Tabla <code>AUTOR</code></p> Columna Tipo de Datos Descripci\u00f3n <code>codigo</code> INT Clave primaria. Identificador \u00fanico del autor. <code>nombre</code> VARCHAR(64) Nombre del autor. <code>fnac</code> DATE Fecha de nacimiento del autor. <code>pais</code> VARCHAR(32) Pa\u00eds de nacimiento del autor. </li> <li> <p>Tabla <code>LIBRO</code></p> Columna Tipo de Datos Descripci\u00f3n <code>isbn</code> INT Clave primaria. Identificador \u00fanico del libro. <code>titulo</code> VARCHAR(64) T\u00edtulo del libro. <code>autor</code> INT Clave for\u00e1nea que referencia a <code>AUTOR.codigo</code>. Indica el autor del libro. <code>editorial</code> VARCHAR(32) Editorial que publica el libro. <code>pvp</code> FLOAT Precio de venta al p\u00fablico del libro. </li> </ul> <p>A continuaci\u00f3n, indicamos las relaciones y restricciones</p> <ul> <li>Clave primaria en <code>AUTOR</code>: <code>codigo</code></li> <li>Clave primaria en <code>LIBRO</code>: <code>isbn</code></li> <li>Clave ajena en <code>LIBRO</code>: <code>autor</code> referencia a <code>codigo</code> en la tabla <code>AUTOR</code>, indicando la relaci\u00f3n entre un libro y su autor.<ul> <li>Restricci\u00f3n de borrado: rechazar.</li> <li>Restricci\u00f3n de modificaci\u00f3n: propagar.</li> </ul> </li> </ul>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#normalizacion","title":"Normalizaci\u00f3n","text":"<p>Un principio del dise\u00f1o relacional es que \"hechos distintos se deben almacenar en objetos distintos\".</p> <p>Para conseguir este objetivo, la normalizaci\u00f3n es un t\u00e9cnica dentro del dise\u00f1o de bases de datos relacionales que consiste en la separaci\u00f3n de atributos en tablas lo m\u00e1s simples posibles para suprimir dependencias err\u00f3neas entre atributos, as\u00ed como optimizar los procesos de inserci\u00f3n, modificaci\u00f3n y borrado en la bases de datos.</p> <p>As\u00ed pues, se basa en el an\u00e1lisis de dependencias entre atributos mediante un proceso que consiste en identificar y aplicar una serie de reglas a las relaciones obtenidas del esquema relacional.</p>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#dependencias-funcionales","title":"Dependencias funcionales","text":"<p>Antes de entrar a conocer los pasos de las normalizaci\u00f3n, previamente tenemos que definir una serie de conceptos:</p> <ul> <li> <p>Dependencia funcional (DF): es la relaci\u00f3n sem\u00e1ntica existente entre atributos de una misma tabla. Decimos que A \u2192 B, es decir, que B depende funcionalmente de A (o A determina a B), si y solo si para cada valor de A s\u00f3lo puede existir un B.</p> <p>Por ejemplo, si tenemos la relaci\u00f3n <code>EMPLEADO(nif, nombre, direccion, fnac)</code> decimos que <code>NIF \u2192 nombre, direccion, fnac</code>, es decir, que tanto el nombre, como la direcci\u00f3n y la fecha de nacimiento dependen funcionalmente del NIF, ya que para un determinado NIF, no podemos tener dos nombres, direcciones o fechas de nacimiento.</p> <p>Por el contrario, no es correcto decir que <code>direccion \u2192 NIF</code>, ya que dada una direcci\u00f3n, podemos tener m\u00e1s de un NIF viviendo all\u00ed.</p> </li> <li> <p>Dependencia funcional completa (DFC): cuando tenemos que A1, A2, ...AN \u2192 B (B tiene una dependencia funcional del conjunto A1, A2, ...AN), pero no de ninguno de sus subconjuntos.</p> <p>Es decir, B depende de la combinaci\u00f3n completa de atributos, y no de un parte de la clave.</p> <p>FIXME: continuar ... ver apuntes Gloria</p> </li> <li> <p>Dependencia funcional transitiva (DFT): se dice que hay un DFT entre A y C, si A \u2192 B y B \u2192 C.</p> <p>Por ejemplo, </p> </li> <li> <p>Determinante: todo atributo simple o compuesto del que DFC alg\u00fan otro atributo</p> </li> </ul>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#formas-normales","title":"Formas Normales","text":"Formas normales - Wikipedia <p>La normalizaci\u00f3n consiste en una serie de pasos, cada uno de los cuales se corresponde a una forma normal (FN). Conforme se va avanzando en la normalizaci\u00f3n, las tablas tienen una estructura m\u00e1s limpia y con menor redundancia.</p> <p>Codd propuso en 1972 tres formas normales, a las que se sum\u00f3 la forma normal de Boyce-Codd en 1974, y luego se a\u00f1adieron dos m\u00e1s por parte de Fagin entre 1977 y 1979. En este curso, nos vamos a centrar en las tres primeras m\u00e1s la FNBC, que cubren la mayor\u00eda de casos con los que nos vamos a encontrar, ya que se considera que una base de datos que est\u00e1 en 3FN o en FNBC es una base de datos correctamente dise\u00f1ada</p> <p>Todas las formas normales se construyen sobre una forma normal previa, de forma que se anidan unas dentro de otras:</p> <ul> <li> <p>1FN: Una relaci\u00f3n est\u00e1 en primera forma normal si, y s\u00f3lo si, todos sus dominios contienen valores at\u00f3micos. Supone la eliminaci\u00f3n de todos los campos multivaluados.</p> <p>Por lo general, si tenemos una tabla de un modelo relacional, por las propias restricciones sem\u00e1nticas del modelo relacional, no deber\u00edamos tener ning\u00fan campo con varios valores.</p> </li> <li> <p>2FN: una relaci\u00f3n est\u00e1 en segunda forma normal si est\u00e1 en 1FN y todas las columnas que no son clave tienen un DFC de la clave primaria. </p> <p>Para ello, descompondremos la tabla en varias tablas, y comprobamos que ning\u00fan subconjunto de los atributos no clave determinan campos no principales.</p> <p>Si todas las claves candidatas de las tablas en 1FN son simples (unitarias), autom\u00e1ticamente las tablas ya est\u00e1n en 2FN.</p> </li> <li> <p>3FN: 2FN + todo atributo que no es clave primaria no tienen una DFT</p> <p>Ejemplo</p> </li> <li> <p>FNBC: 3FN + todo determinante es una clave candidata</p> <p>Ejemplo</p> </li> </ul>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#ejemplo_1","title":"Ejemplo","text":"<p>Tenemos una tabla sobre la cual queremos comprobar si est\u00e1 normalizada. Se basa en los datos de una escuela de dise\u00f1o, donde tenemos alumnado que cursa diversas asignaturas que imparte un docente, y en la cual puede obtener una calificaci\u00f3n de dicho docente.</p> <p>Se muestra un ejemplo de datos de la tabla de la cual partimos:</p> cod-alumno nom-alumno cod-asignatura nom-asignatura cod-profesor nom-profesor nota 1 Pedro Casas A Dise\u00f1o I X Miguel Ruiz 9.85 1 Pedro Casas B Pruebas I X Miguel Ruiz 5.65 2 Mireia Vidal A Dise\u00f1o I X Miguel Ruiz 10 2 Mireia Vidal A Dise\u00f1o I X Miguel Ruiz 9.85 3 Sonia Caparr\u00f3s C Usabilidad Y Marina L\u00f3pez 7 <p>Vamos a aplicar las diferentes reglas y transformaciones necesarias hasta comprobar la FNBC.</p> <p>El primer paso es definir las dependencias funcionales, obteniendo:</p> <ul> <li><code>cod-alumno \u2192 nom-alumno</code>: El nombre del alumno DF del c\u00f3digo.</li> <li><code>cod-asignatura \u2192 nom-asignatura</code>: El nombre de la asignatura DF del c\u00f3digo.</li> <li><code>cod-profesor \u2192 nom-profesor</code>: El nombre del profesor DF del c\u00f3digo.</li> <li><code>(cod-alumno, cod-asignatura, cod-profesor) \u2192 nota</code>: La combinaci\u00f3n del c\u00f3digo del alumno, el c\u00f3digo de la asignatura y el c\u00f3digo del profesor determina la nota.</li> </ul> <p>Las claves candidatas de la relaci\u00f3n ser\u00edan <code>cod-alumno</code>, <code>cod-asignatura</code>, <code>cod-profesor</code> y <code>(cod-alumno, cod-asignatura, cod-profesor)</code> y los campos no clave ser\u00edan <code>nom-alumno</code>, <code>nom-asignatura</code>, <code>nom-profesor</code> y <code>nota</code>.</p> <p>A continuaci\u00f3n comprobamos si cumple las diferentes formas normales:</p> <ul> <li> <p>\u00bfEst\u00e1 en 1FN? Comprobamos que la tabla no tiene campos multivaluados y por lo tanto, la tabla de por s\u00ed ya est\u00e1 en primera forma normal.</p> </li> <li> <p>\u00bfEst\u00e1 en 2FN? Est\u00e1 en 1FN y comprobamos las dependencias funcionales completas entre los atributos de la relaci\u00f3n, es decir, todos los atributos no clave tienen una DFC de la clave primaria.</p> <p>Como los atributos <code>nom-alumno</code>, <code>nom-asignatura</code>, <code>nom-profesor</code> tienen no tienen una DFC de la clave <code>(cod-alumno, cod-asignatura, cod-profesor)</code> (ya que la tienen de un subconjunto de la clave, por ejemplo, el nombre del alumno DF de su c\u00f3digo), necesitamos descomponer la relaci\u00f3n en las siguiente tablas:</p> <ul> <li><code>ALUMNO(cod-alumno, nom-alumno)</code></li> <li><code>ASIGNATURA(cod-asignatura, nom-asignatura)</code></li> <li><code>PROFESOR(cod-profesor, nom-profesor)</code></li> <li><code>CALIFICAR(cod-alumno, cod-asignatura, cod-profesor, nota)</code></li> </ul> </li> <li> <p>\u00bfEst\u00e1 en 3FN? Est\u00e1 en 2FN y comprobamos que todos los atributos no clave deben depender \u00fanicamente de la clave primaria.</p> <p>En la tabla <code>CALIFICAR</code> no hay dependencias transitivas, ya que nota depende directamente de la clave primaria compuesta <code>(cod-alumno, cod-asignatura, cod-profesor)</code>.</p> </li> <li> <p>\u00bfEst\u00e1 en FNBC? Una tabla est\u00e1 en FNBC si para toda dependencia funcional es una superclave.</p> <p>En la tabla<code>CALIFICAR</code>, <code>(cod-alumno, cod-asignatura, cod-profesor)</code> juntos forman una superclave, y no hay violaciones a la FNBC.</p> </li> </ul> <p>El resultado de normalizar la tabla inicial ser\u00eda</p> <ol> <li> <p><code>ALUMNO(cod-alumno, nom-alumno)</code></p> cod-alumno nom-alumno 1 Pedro Casas 2 Mireia Vidal 3 Sonia Caparr\u00f3s </li> <li> <p><code>ASIGNATURA(cod-asignatura, nom-asignatura)</code></p> cod-asignatura nom-asignatura A Dise\u00f1o I B Pruebas I C Usabilidad </li> <li> <p><code>PROFESOR(cod-profesor, nom-profesor)</code></p> cod-profesor nom-profesor X Miguel Ruiz Y Marina L\u00f3pez </li> <li> <p><code>CALIFICAR(cod-alumno, cod-asignatura, cod-profesor, nota)</code></p> cod-alumno cod-asignatura cod-profesor nota 1 A X 9.85 1 B X 5.65 2 A X 10 3 C Y 7 </li> </ol> <p>Estas tablas est\u00e1n ahora en FNBC, eliminando redundancias y asegurando que todas las dependencias funcionales se respetan correctamente.</p>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#desnormalizacion","title":"Desnormalizaci\u00f3n","text":"<p>El concepto de desnormalizar un modelo relacional consiste en transformar una base de datos a una forma normal menor, siempre con el objetivo de mejorar el rendimiento de las operaciones de consulta de datos, a costa de aceptar cierta redundancia de datos</p> <p>Por ejemplo, podemos unir varias relaciones en una si se usan juntas frecuentemente mediante operaciones join.</p> <p>Adem\u00e1s del rendimiento en las consultas, podemos desnormalizar nuestros modelos para simplificar el esquema o reducir la complejidad de ciertas consultas.</p> <p>Un caso muy com\u00fan es unir los datos de dos tablas que tienen una relaci\u00f3n 1:1 en una \u00fanica tabla (siempre que la sem\u00e1ntica de las relaciones lo permita).</p>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#referencias","title":"Referencias","text":"<ul> <li> <p>Herramienta gr\u00e1fica ERDPlus para la realizaci\u00f3n de diagramas de modelos relacionales.</p> </li> <li> <p>Materiales sobre el m\u00f3dulo de BD:</p> <ul> <li>Model Relacional - Institut Obert de Catalunya</li> <li>Modelo Relacional de Jorge S\u00e1nchez</li> <li>Bases de datos relacionales de Javier Guti\u00e9rrez</li> <li>Dise\u00f1o de modelo l\u00f3gicos normalizados de gestionbasesdatos.readthedocs.io</li> <li>Dise\u00f1o l\u00f3gico y Normalizaci\u00f3n de la Universidad de Sevilla</li> </ul> </li> </ul>","tags":["Modelo Relacional","RA6"]},{"location":"03mr.html#actividades","title":"Actividades","text":"<ul> <li> <p>AC301. (RABD.6 // CE6b, CE6c // 3p) Analiza la siguiente tabla <code>EMPLEADO</code> y enumera todos los errores que encuentres. A continuaci\u00f3n, aporta una soluci\u00f3n para cada uno de ellos. Finalmente, analiza las claves existentes:</p> dni nombre genero direccion fAlta casado nombre codEmpleado 12345678A Guillem Vidal M C Mayor, 5 11/1/24 N 1 12345679B Guillem Vidal M C Illueca, 26 21/1/24 N 2 12345670C, 12345671D Juan y Mar\u00eda S\u00e1nchez M,F C Illueca, 26 31/1/24 S,N Ana 3,4 98765431X Ana Fern\u00e1ndez F 30/2/24 S \u00d3scar X2 98765432Z Domingo Gallardo M Avda Alicante, 12 Lunes S Mar\u00eda siete 98765430Y M\u00f3nica Reig F 03206 3/2/24 S 99 </li> </ul> <p></p> <ul> <li> <p>AC302. (RABD.6 // CE6b, CE6c // 3p) Indica si las siguientes afirmaciones son verdaderas o falsas y justifica la respuesta:</p> <ul> <li>La uni\u00f3n de todos los campos de una relaci\u00f3n siempre funciona como clave de la relaci\u00f3n.</li> <li>Toda relaci\u00f3n tiene clave primaria.</li> <li>Toda relaci\u00f3n posee, al menos, una clave ajena.</li> <li>Un campo que pertenece a la clave primaria de una relaci\u00f3n puede tomar el valor <code>NULL</code>.</li> <li>Un campo que pertenece a una clave ajena de una relaci\u00f3n puede tomar el valor <code>NULL</code>.</li> <li>Un mismo campo puede funcionar a la vez como clave primaria y como clave ajena de una relaci\u00f3n.</li> <li>Una clave ajena puede enlazar una relaci\u00f3n consigo misma.</li> </ul> </li> </ul> <p></p> <ul> <li> <p>AC303. (RABD.6 // CE6b, CE6c // 3p) A partir de los datos de las siguientes tablas, identifica todos los problemas con las restricciones sem\u00e1nticas asociadas al modelo relacional y aporta soluciones de c\u00f3mo resolverlas, sabiendo que las PK son <code>PRODUCTO.codigo</code>y <code>CATEGORIA.codigo</code>, y tenemos una clave ajena de <code>PRODUCTO.categoria</code> que apunta a <code>CATEGORIA</code>.</p> <ul> <li> <p><code>PRODUCTO</code></p> codigo nombre cantidad pvp categoria<code>*</code> 101 Televisor LED 42\" -5 299.99 1 102 Lavadora XYZ 010 abc 2 102 LEGO Batman tres 299.99 3 105 Pelota de f\u00fatbol 299.99 099 Escritorio 8 299.99 5 </li> <li> <p><code>CATEGORIA</code></p> codigo nombre descr 1 Electr\u00f3nica Productos electr\u00f3nicos de consumo 2 Hogar y cocina Juguetes y Juegos Accesorios y juguetes para ni\u00f1os 4 Deportes Art\u00edculos deportivos y outdoor 4 Deportes Productos de oficina y papeler\u00eda </li> </ul> </li> </ul> <p></p> <ul> <li> <p>AR304. (RABD.6 // CE6b, CE6c // 3p) A partir de los datos de la siguiente tabla de <code>COMERCIAL</code>, identifica todas las claves y restricciones posibles:</p> dni codigo nombre genero direccion fAlta codPareja 12345679B 10 Ana Vidal F C Illueca, 26 21/1/24 12345670C 20 Lara S\u00e1nchez M C Almassera, 15 31/1/24 3 98765431X 30 Ana Fern\u00e1ndez F 13/2/24 7 98765432Z 40 Domingo Gallardo M Avda Alicante, 12 23/2/24 98765430Y 50 Ana Vidal F C Eugeni D'Ors 5 3/3/24 6 12345678A 60 Guillem Vidal M C Mayor, 5 11/1/24 2 </li> </ul> <p></p> <ul> <li> <p>AC305. (RABD.6 // CE6b, CE6c // 2p) Crea las tablas necesarias con datos ficticios (con al menos 5 registros cada tabla) que respete las restricciones sem\u00e1nticas del modelo relacional a partir del siguiente esquema relacional:</p> <p><code> EMPLEADO (nif, nombre, direccion, cargo) \u00b7 PK: (nif) \u00b7 VNN: (nombre) </code></p> <p><code> VEHICULO (matricula, codigo, marca, modelo, empleado<code>*</code>) \u00b7 PK: (matricula) \u00b7 FK: (empleado) \u2192 EMPLEADO \u00b7 VNN: (empleado) \u00b7 UK: (codigo) </code></p> </li> </ul> <p></p> <ul> <li> <p>AC306. (RABD.6 // CE6b, CE6c // 1p) A partir del esquema del ejercicio anterior (AC305), dibuja a mano un diagrama que represente el modelo relacional.</p> <p>Si quieres, una vez dibujado en papel, puedes utilizar ERDPlus. En este caso, adjunta ambos diagramas.</p> </li> </ul> <p></p> <ul> <li> <p>AP307. (RABD.6 // CE6b, CE6c // 3p)  A partir del siguiente esquema relacional, crea tres tablas con datos ficticios, y explica el tipo de relaci\u00f3n existente entre los campos y las tablas relacionadas (cardinalidad):</p> <p><code> CONDUCTOR (nif, nombre, fAlta) \u00b7 PK: (nif) </code></p> <p><code> CONDUCIR (nif<code>*</code>, matricula<code>*</code>, cantidad) \u00b7 PK: (nif, matricula) \u00b7 FK: (nif) \u2192 CONDUCTOR \u2003\u2003\u2003\u2002(matricula) \u2192 AUTOBUS </code></p> <p><code> AUTOBUS (matricula, tipo, numPlazas) \u00b7 PK: (matricula) \u00b7 VNN: (numPlazas) </code></p> </li> </ul> <p> </p> <ul> <li> <p>AR308. (RABD.6 // CE6b, CE6c // 3p) A partir de las tablas de la actividad (AC303), crea el esquema relacional.</p> <p>A continuaci\u00f3n, crea una nueva tabla <code>PROVEEDOR</code> con datos asociados a esta nueva relaci\u00f3n, y actualiza el esquema relacional para que est\u00e9n las tres tablas relacionadas.</p> </li> </ul> <p></p> <ul> <li>AR309. (RABD.6 // CE6b, CE6c // 3p) A partir del siguiente diagrama, crea el esquema relacional:</li> </ul> Actividad 310 <p></p> <ul> <li>AC310. (RABD.6 // CE6b, CE6c // 3p) A partir del esquema y de las tablas obtenidas en la actividad (AC305), completa el diccionario de datos.</li> </ul> <p></p> <ul> <li>AR311. (RABD.6 // CE6b, CE6c // 3p) A partir del diagrama y del esquema obtenidos en la actividad (AR309), completa el diccionario de datos.</li> </ul> <p></p> <ul> <li>AC312. (RABD.6 // CE6g // 3p) A partir de un gr\u00e1fico de un modelo relacional, interpretar el diagrama</li> </ul> <p></p> <ul> <li>AC313. (RABD.6 // CE6g // 3p) Normalizaci\u00f3n f\u00e1cil</li> </ul> <p></p> <ul> <li>AC314. (RABD.6 // CE6g // 3p) Normalizaci\u00f3n media</li> </ul> <p></p> <ul> <li> <p>AC315. (RABD.6 // CE6g // 3p) A partir del siguiente esquema relacional de una librer\u00eda, desnormal\u00edzalo para simplificar su estructura:</p> <p><code> LIBRO (isbn, titulo, autor<code>*</code>, editorial<code>*</code>, numPaginas) \u00b7 PK: (nif) \u00b7 FK: (autor) \u2192 ESCRITOR \u00b7 FK: (editorial) \u2192 EDITORIAL </code></p> <p><code> ESCRITOR (nif<code>*</code>, nombre, pais) \u00b7 PK: (nif) </code></p> <p><code> EDITORIAL (codigo<code>*</code>, nombre, pais) \u00b7 PK: (codigo) </code></p> </li> </ul>","tags":["Modelo Relacional","RA6"]},{"location":"04mr-eer.html","title":"Dise\u00f1o L\u00f3gico: Transformaci\u00f3n del modelo ER a MR","text":"","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#propuesta-didactica","title":"Propuesta did\u00e1ctica","text":"<p>En esta UT vamos a terminar de trabajar el RA6: Dise\u00f1a modelos relacionales normalizados interpretando diagramas entidad/relaci\u00f3n.</p>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#criterios-de-evaluacion","title":"Criterios de evaluaci\u00f3n","text":"<ul> <li>CE6a: Se han utilizado herramientas gr\u00e1ficas para representar el dise\u00f1o l\u00f3gico.</li> <li>CE6b: Se han identificado las tablas del dise\u00f1o l\u00f3gico.</li> <li>CE6c: Se han identificado los campos que forman parte de las tablas del dise\u00f1o l\u00f3gico.</li> <li>CE6d: Se han analizado las relaciones entre las tablas del dise\u00f1o l\u00f3gico.</li> <li>CE6e: Se han identificado los campos clave.</li> <li>CE6f: Se han aplicado reglas de integridad.</li> </ul>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#contenidos","title":"Contenidos","text":"<p>Interpretaci\u00f3n de Diagramas Entidad/Relaci\u00f3n:</p> <p>\u2212 Paso del diagrama E/R al modelo relacional.</p> <p>Cuestionario inicial</p> <ol> <li>\u00bfC\u00f3mo se transforma un atributo compuesto al modelo relacional?</li> <li>\u00bfY un atributo multivaluado?</li> <li>\u00bfQu\u00e9 diferencia hay en la transformaci\u00f3n de una relaci\u00f3n 1:N respecto a una relaci\u00f3n 1:1?</li> <li>\u00bfQu\u00e9 tipo de relaci\u00f3n provoca la creaci\u00f3n de una nueva tabla?</li> <li>Cuando hablamos de generalizaciones, \u00bfqu\u00e9 tres opciones podemos plantear al transformarlas al modelo relacional?</li> <li>\u00bfQu\u00e9 diferencia una entidad d\u00e9bil respecto a una fuerte en el modelo relacional?</li> </ol>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#programacion-de-aula-12h","title":"Programaci\u00f3n de Aula (12h)","text":"<p>Esta unidad es la cuarta, con lo que se imparte en la primera evaluaci\u00f3n, durante el mes de noviembre, con una duraci\u00f3n estimada de 10 horas:</p> Sesi\u00f3n Contenidos Actividades Criterios trabajados 1 Paso de E/R al MR 2 Relaciones 1:N y 1:1 AC401, AC402 CE6a-CE6f 3 Relaciones N:M AC403 CE6a-CE6f 4 Restricciones AC406 5 Generalizaci\u00f3n AC407 6 Actividad Cocina PR408 CE6a-CE6g 7 De MR a EER I 8 De MR a EER II AC409, AC410 CE6d 9 Reto - dise\u00f1o l\u00f3gico PY412 CE6a-CE6g 10 Reto - dise\u00f1o l\u00f3gico 11 Prueba objetiva PO413 CE6a-CE6g 12 Prueba objetiva <p>Al finalizar esta unidad, realizaremos una prueba objetiva consistente en modelar supuestos sencillos y posteriormente transformarlos a modelo relacional, as\u00ed como interpretar modelos ya existentes.</p>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#pasos","title":"Pasos","text":"<p>Una vez conocido el modelo conceptual entidad-relaci\u00f3n y el modelo l\u00f3gico relacional, vamos a estudiar como transformar y pasar de uno a otro. Para ello, seguiremos los siguientes pasos:</p> <ol> <li>Las entidades pasan a ser tablas</li> <li>Los atributos pasar a ser columnas</li> <li>Los atributos identificadores pasar a ser claves primarias.</li> <li>Los atributos de las relaciones pasan a columnas detr\u00e1s de las claves ajenas</li> <li>Las relaciones, dependiendo de la cardinalidad, pasar\u00e1n a ser claves ajenas y/o tablas.</li> </ol>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#atributos","title":"Atributos","text":"<p>Conviene recordar que dentro de una tabla, no se puede repetir el nombre de ning\u00fan atributo, pero s\u00ed en tablas diferentes.</p> <p>Algunos profesionales prefieren que no se repitan los identificadores entre diferentes tablas de una misma BD, aunque es cierto que las herramientas ORM de generaci\u00f3n de modelos f\u00edsicos a partir de definici\u00f3n de clases u objetos suelen nombrar todas las claves primarias como <code>id</code> o <code>_id</code>.</p> <p>En cuanto a los atributos compuestos, se separan como atributos individuales dentro de la tabla, pudi\u00e9ndoles poner el prefijo del atributo compuesto o el propio nombre del atributo si no da pie a confusi\u00f3n.</p> <p>Para los atributos derivados, dependiendo del caso, bien no se a\u00f1aden como atributo (ya que se obtendr\u00e1n a partir de los datos de las relaciones), o bien se renombra el atributo para almacenar el dato en crudo sobre el cual se realiza el c\u00e1lculo necesario.</p> Transformaci\u00f3n de atributos <p>Por ejemplo, si partimos de un sencillo modelo ER de un cliente, su transformaci\u00f3n al modelo relacional ser\u00eda la siguiente:</p> <p><code> CLIENTE (dni, nombre, calle, numPiso, ciudad, fnac) \u00b7 PK: (dni) </code></p> <p>Destacar que no hemos puesto el nombre del atributo compuesto, sino cada uno de sus atributos, y adem\u00e1s, hemos renombrado <code>numero</code> a <code>numPiso</code> para evitar confusiones con otras entidades; respecto al atributo derivado edad, lo hemos cambiado por la fecha de nacimiento.</p> <p>Respecto a los atributos multivaluados, derivan en una relaci\u00f3n uno a muchos (1:N), tal como veremos a continuaci\u00f3n.</p>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#claves-compuestas","title":"Claves compuestas","text":"<p>Normalmente, cada entidad tendr\u00e1 un atributo identificador que traduciremos en una clave primaria. Pero puede darse el caso que una entidad tenga una clave compuesta, o tenga marcados dos atributos identificadores (en este caso, uno ser\u00e1 la clave primaria y el otro ser\u00e1 una clave alternativa que marcaremos como \u00fanica).</p> <p>Por ejemplo, el siguiente diagrama representa un aula que se identifica mediante una clave compuesta:</p> <p><code> AULA (edificio, numSala, numAsientos) \u00b7 PK: (edificio, numSala) </code></p> <p>Sin embargo, tambi\u00e9n podemos tener un empleado con dos atributos identificadores:</p> <p><code> EMPLEADO (codigo, nif, nombre, salario) \u00b7 PK: (codigo) \u00b7 UK: (nif) </code></p> <p>TODO: Completar con gr\u00e1ficos</p>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#relaciones","title":"Relaciones","text":"<p>Al transformar las relaciones, dependiendo de la cardinalidad deberemos colocar la clave ajena en un lugar u otro.</p>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#1n","title":"1:N","text":"<p>La clave primaria de la entidad con cardinalidad m\u00e1xima a 1 se incluye en la entidad con cardinalidad m\u00e1xima N como clave ajena.</p> Transformaci\u00f3n de relaci\u00f3n 1:N <p><code> A (a0, a1, b0<code>*</code>) \u00b7 PK: (a0) \u00b7 FK: (b0) \u2192 B </code></p> <p><code> B (b0, b1) \u00b7 PK: (b0) </code></p> <p>De esta manera, tenemos que dado un registro en A, tendremos uno en B. Y dado un B, podemos tener muchos en A, cumpliendo la cardinalidad de uno a muchos.</p> <p>Por ejemplo, si tenemos un modelo donde, en vez de un atributo multivaluado, hemos creado una entidad para modelar que una persona puede tener muchos tel\u00e9fonos:</p> Ejemplo de relaci\u00f3n 1:N <p>Si aplicamos la transformaci\u00f3n reci\u00e9n vista, obtenemos el siguiente esquema l\u00f3gico:</p> <p><code> PERSONA (dni, nombre, direccion) \u00b7 PK: (dni) </code></p> <p><code> TELEFONO (numero, propio, dni<code>*</code>) \u00b7 PK: (numero) \u00b7 FK: (dni) \u2192 PERSONA </code></p> <p>Conviene recordar que la clave ajena ser\u00e1 la clave primaria que nos hemos traido desde la entidad con cardinalidad m\u00e1xima a 1 (en este caso, llevamos la clave primaria de <code>PERSONA</code> a <code>TELEFONO</code>), de manera que el atributo <code>TELEFONO.dni</code> representa la relaci\u00f3n <code>TENER</code>.</p> <p>Las claves ajenas se colocan tras los atributos de cada tabla (en este caso, detr\u00e1s de <code>numero</code> y <code>propio</code>), y normalmente, se nombran con el mismo nombre de la clave primaria. Si diera pie a confusi\u00f3n, es recomendable renombrarla pudiendo como sufijo el nombre de la tabla.</p> <p>Finalmente, si quisi\u00e9ramos generar el diagrama relacional, obtendr\u00edamos una gr\u00e1fico similar al siguiente, donde se puede ver como desde <code>TELEFONO.dni</code> se conecta con <code>PERSONA.dni</code>:</p> Esquema relacional en ERDPlus <p>Atributos multivaluados</p> <p>TODO: completar</p>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#11","title":"1:1","text":"<p>En este caso, la clave ajena se pone en cualquier entidad y se a\u00f1ade como clave alternativa/\u00fanica (<code>UK</code>). </p> Transformaci\u00f3n de relaci\u00f3n 1:1 <p>As\u00ed pues, una posible soluci\u00f3n ser\u00eda llevar la clave ajena a A:</p> <p><code> A (a0, a1, b0<code>*</code>) \u00b7 PK: (a0) \u00b7 FK: (b0) \u2192 B \u00b7 UK: (b0) </code></p> <p><code> B (b0, b1) \u00b7 PK: (b0) </code></p> <p>Al hacer que el atributo que es clave ajena sea clave \u00fanica, restringimos que dicho valor no se pueda repetir.</p> <p>Y la otra posible soluci\u00f3n ser\u00eda llevar la clave ajena a B:</p> <p><code> A (a0, a1) \u00b7 PK: (a0) </code></p> <p><code> B (b0, b1, a0<code>*</code>) \u00b7 PK: (b0) \u00b7 FK: (a0) \u2192 A \u00b7 UK: (a0) </code></p> Ejemplo de relaci\u00f3n 1:1 <p>Vamos a poner otro ejemplo. En este caso, tenemos la relaci\u00f3n existente entre un veh\u00edculo y el empleado que lo conduce en una empresa, dando lugar a una relaci\u00f3n 1:1:</p> <p><code> EMPLEADO (dni, nombre, direcci\u00f3n) \u00b7 PK: (dni) </code></p> <p><code> VEHICULO (matr\u00edcula, marca, modelo, dniEmpleado<code>*</code>) \u00b7 PK: (matr\u00edcula) \u00b7 FK: (dniEmpleado) \u2192 EMPLEADO \u00b7 UK: (dniEmpleado) </code></p> <p>\u00bfSabr\u00edas...?</p> <p>\u00bfSabr\u00edas crear otra soluci\u00f3n donde la clave ajena estuviera en la entidad <code>EMPLEADO</code>? A continuaci\u00f3n, rellena las dos tablas con datos y comprueba si la relaci\u00f3n entre ambas entidades es 1:N o 1:1.</p>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#nm","title":"N:M","text":"<p>En el caso de las relaciones muchos a muchos, la relaci\u00f3n se traduce en una nueva tabla, cuya clave primaria se compone de las claves primarias referenciadas, y cada clave primaria es una clave ajena.</p> Transformaci\u00f3n de relaci\u00f3n N:M <p><code> A (a0, a1) \u00b7 PK: (a0) </code></p> <p><code> B (b0, b1) \u00b7 PK: (b0) </code></p> <p><code> R (a0<code>*</code>, b0<code>*</code>) \u00b7 PK: (a0, b0) \u00b7 FK: (a0) \u2192 A \u00b7 FK: (b0) \u2192 B </code></p> <p>Para este ejemplo, tenemos una empresa de transportes, donde un conductor conduce varios autobuses, y luego un autobus lo conducen varios conductores en diferentes trayectos, dando lugar a una relaci\u00f3n muchos a muchos, donde en la relaci\u00f3n a\u00f1adimos el atributo <code>trayecto</code>:</p> Ejemplo de relaci\u00f3n N:M <p><code> CONDUCTOR (dni, nombre, experiencia) \u00b7 PK: (dni) </code></p> <p><code> AUTOBUS (matricula, categoria) \u00b7 PK: (matricula) </code></p> <p><code> CONDUCIR (dni<code>*</code>, matricula<code>*</code>, trayecto) \u00b7 PK: (dni, matricula) \u00b7 FK: (dni) \u2192 CONDUCTOR \u00b7 FK: (matricula) \u2192 AUTOBUS </code></p> <p>El orden importa</p> <p>Cuando pasamos una relaci\u00f3n uno a muchos o muchos a muchos de un modelo ER a un modelo relacional, primero crearemos las tablas que no tienen claves ajenas.</p> <p>En este caso, empezaremos por <code>CONDUCTOR</code> y <code>AUTOBUS</code>, definiendo sus claves primarias y atributos.</p> <p>A continuaci\u00f3n, crearemos la/s tabla/s que contiene claves ajenas a las tablas ya creadas, esto es, la tabla <code>CONDUCIR</code> que apunta a <code>CONDUCTOR</code> y <code>AUTOBUS</code>.</p> <p>En este caso, el diagrama del modelo relacional se traduce en tres tablas conectadas, colocando el atributo de la relaci\u00f3n en la nueva tabla <code>CONDUCIR</code>. Destacar como la tabla tiene una clave primaria compuesta, donde de cada parte de la clave sale una clave ajena a cada una de las tablas que relaciona:</p> Esquema relacional en ERDPlus","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#nm-con-dimension-temporal","title":"N:M con dimensi\u00f3n temporal","text":"<p>Si la relaci\u00f3n tiene atributos de tipo fecha, ser\u00e1 necesario incluir al menos uno en la clave primaria.</p> <p>Supongamos una empresa de alquiler de vehiculos, donde tenemos que un cliente puede alquilar el mismo veh\u00edculo en fechas diferentes, o alquilar diferentes veh\u00edculos. Claramente, un veh\u00edculo lo pueden alquilar diferentes clientes en fechas diferentes. Para ello, creamos una relaci\u00f3n muchos a muchos, colocando la fecha de inicio y de finalizaci\u00f3n del alquiler en la propia relaci\u00f3n.</p> Relaci\u00f3n N:M con dimensi\u00f3n temporal <p>Al crear el modelo relacional, tendremos las dos tablas de las entidades relacionadas:</p> <p><code> CLIENTE (dni, nombre) \u00b7 PK: (dni) </code></p> <p><code> VEHICULO (matricula, kms) \u00b7 PK: (matricula) </code></p> <p>Y la tabla que las relaciona con el atributo de fecha de inicio como parte de la clave primaria (de este modo, el cliente A puede alquilar el veh\u00edculo X en d\u00edas diferentes):</p> <p><code> ALQUILAR (dni<code>*</code>, matricula<code>*</code>, finicio, ffin) \u00b7 PK: (dni, matricula, finicio) \u00b7 FK: (dni) \u2192 CLIENTE \u00b7 FK: (matricula) \u2192 VEHICULO </code></p>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#reflexivas","title":"Reflexivas","text":"<p>TODO: Completar</p>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#restricciones","title":"Restricciones","text":"<p>Una vez visto como se transforman los atributos y las relaciones, vamos a ver algunas particularidades a la hora de aplicar restricciones sobre las cardinalidades.</p>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#cardinalidad-minima-1","title":"Cardinalidad m\u00ednima 1","text":"<p>Cuando la cardinalidad m\u00ednima es 1, independientemente de la cardinalidad m\u00e1xima, estamos indicando que s\u00ed o s\u00ed dicha clave ajena debe tener un valor. Para cumplirla, \u00fanicamente debemos marcar la clave ajena como valor no nulo (VNN).</p> Cardinalidad m\u00ednima a 1 <p><code> A (a0, a1, b0<code>*</code>) \u00b7 PK: (a0) \u00b7 FK: (b0) \u2192 B \u00b7 VNN: (b0) </code></p> <p><code> B (b0, b1) \u00b7 PK: (b0) </code></p> <p>De esta manera, toda ocurrencia de A debe tener una de B.</p>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#identificacion","title":"Identificaci\u00f3n","text":"Restricci\u00f3n de ID <p>En las restricciones de identificaci\u00f3n, la entidad d\u00e9bil se identifica, completamente o en parte, con la entidad fuerte. Es por ello, que la clave ajena debe formar parte de la clave primaria.</p> <p><code> A (a0, b0<code>*</code>, a1) \u00b7 PK: (a0, bo) \u00b7 FK: (b0) \u2192 B </code></p> <p><code> B (b0, b1) \u00b7 PK: (b0) </code></p> Ejemplo de restricci\u00f3n de ID <p>En el siguiente ejemplo, tenemos que cada sala se identifica por el cine al que pertenece por un n\u00famero de sala, el cual se reinicia por cada cine. Es decir, la sala 1 del cine IMF no es la misma tupla que la sala 1 del cine ABC:</p> <p><code> CINE (codigo, nombre, direccion) \u00b7 PK: (codigo) </code></p> <p><code> SALA (numero, codCine<code>*</code>, aforo) \u00b7 PK: (numero, codCine) \u00b7 FK: (codCine) \u2192 CINE </code></p>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#generalizacion","title":"Generalizaci\u00f3n","text":"<p>Cuando tenemos una relaci\u00f3n de tipo generalizaci\u00f3n, crearemos una tabla para el padre y otra para cada hijo. Este planteamiento se conoce como explicitar las entidades.</p> Generalizaci\u00f3n <p>Para ello, las subclases, las entidades hijo, tienen como clave principal y ajena la clave de la superclase, el padre. De esta manera, los hijos tienen como clave primaria la misma que el padre.</p> <p><code> A (a0, a1) \u00b7 PK: (a0) </code></p> <p><code> B (a0<code>*</code>, b0, b1) \u00b7 PK: (a0) \u00b7 FK: (a0) \u2192 A </code></p> <p>Independientemente de si la generalizaci\u00f3n es disjunta o solapada, o total o parcial, el modelo relacional se realiza igual, perdiendo la sem\u00e1ntica del modelo conceptual.</p> Ejemplo de Generalizaci\u00f3n de Persona <p>Por ejemplo, supongamos el siguiente modelo que representa la especializaci\u00f3n de una persona en estudiante o trabajador:</p> <p>Si explicitamos las tablas obtendremos:</p> <p><code> PERSONA (dni, nombre, direcci\u00f3n, telefono) \u00b7 PK: (dni) </code></p> <p><code> ESTUDIANTE (dni<code>*</code>, nivelEst, lugarEst, horasCur) \u00b7 PK: (dni) \u00b7 FK: (dni) \u2192 PERSONA  </code></p> <p><code> TRABAJADOR (dni<code>*</code>, numSegSocial, salario) \u00b7 PK: (dni) \u00b7 FK: (dni) \u2192 PERSONA  </code></p>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#alternativas","title":"Alternativas","text":"<p>Otros planteamientos diferentes a explicitar consisten en:</p> <ul> <li> <p>Colapsar: consiste en crea un \u00fanica tabla con los datos de la superclase y las subclases. Es v\u00e1lido cuando las subclases se diferencian en muy pocos atributos. Como desventaja, las relaciones que los asocian al resto de las entidades son las mismas para las subclases, sin poder diferenciarlas. As\u00ed pues, es un soluci\u00f3n m\u00e1s r\u00e1pida, pero aporta peor sem\u00e1ntica al modelo.</p> </li> <li> <p>Dividir: si existen muchos atributos distintos entre las subclases y los accesos a los datos de las subclases tambi\u00e9n afectan a los atributos comunes, es mejor dividir los datos y crear una tabla por cada subclase, pero no para el padre. Este planteamiento es m\u00e1s eficiente en consultas sobre los hijos, pero aporta m\u00e1s redundancia de datos y peor sem\u00e1ntica.</p> </li> </ul> <p>Si retomamos el mismo ejemplo con estos planteamientos tendr\u00edamos:</p> <ul> <li> <p>Colapsar: Una \u00fanica tabla, creando un atributo tipo para indicar si es <code>estudiante</code> o <code>trabajador</code>:</p> <p><code> PERSONA (dni, nombre, direcci\u00f3n, telefono, tipo, nivelEst, lugarEst, horasCur, numSegSocial, salario) \u00b7 PK: (dni) </code></p> </li> <li> <p>Dividir: Una tabla por cada subclase:</p> <p><code> ESTUDIANTE (dni, nombre, direcci\u00f3n, telefono, nivelEst, lugarEst, horasCur) \u00b7 PK: (dni) </code></p> <p><code> TRABAJADOR (dni, nombre, direcci\u00f3n, telefono, numSegSocial, salario) \u00b7 PK: (dni) </code></p> </li> </ul>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#agregacion","title":"Agregaci\u00f3n","text":"<p>Una agregaci\u00f3n no es m\u00e1s que una relaci\u00f3n muchos a muchos, sobre la cual se relacionan otras tablas.</p> <p>Vamos a pasar al modelo relacional el ejemplo que hicimos en la unidad de modelo conceptual, sobre las incidencias que se registran en un centro educativo.</p> <p>El modelo ER es el siguiente, donde la entidad <code>SESION</code> es una agregaci\u00f3n entre <code>DOCENTE</code> y <code>AULA</code>. La agregaci\u00f3n que conceptualmente es una relaci\u00f3n N:M se traduce en dos relaciones uno a muchos:</p> Agregaci\u00f3n <p>As\u00ed pues, el modelo relacional ser\u00eda:</p> <p><code> DOCENTE (dni, nombre) \u00b7 PK: (dni) </code></p> <p><code> AULA (codigo, tipo) \u00b7 PK: (codigo) </code></p> <p>Si nos fijamos, la agregaci\u00f3n tiene el mismo esquema que una relaci\u00f3n muchos a muchos:</p> <p><code> SESION (dni<code>*</code>, codigo<code>*</code>, grupo) \u00b7 PK: (dni, codigo) \u00b7 FK: (dni) \u2192 DOCENTE  \u00b7 FK: (codigo) \u2192 AULA  </code></p> <p>Y al relacionar <code>INCIDENCIA</code> con <code>SESION</code>, como la clave primaria de <code>SESION</code> es compuesta, tambi\u00e9n lo ser\u00e1 la clave ajena de la relaci\u00f3n uno a muchos:</p> <p><code> INCIDENCIA (codigo<code>*</code>, descripcion, dniSesion<code>*</code>, codigoSesion<code>*</code>) \u00b7 PK: (codigo) \u00b7 FK: (dniSesion, codigoSesion) \u2192 SESION  </code></p> <p>Relaciones N-arias</p> <p>Cuando tengamos relaciones de grado 3 o mayor, se transforman de forma similar a las relaciones muchos a muchos.</p> <p>Para ello, se crea una nueva tabla con la uni\u00f3n de las claves primarias de las entidades relacionadas, y crearemos tantas claves ajenas como entidades relacionadas.</p> <p>Si una de las entidades tiene cardinalidad m\u00e1xima 1, se queda fuera de la clave primaria.</p>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#de-mr-a-er","title":"De MR a ER","text":"<p>En ocasiones tendremos un modelo relacional y necesitaremos dibujar el modelo conceptual para entender bien los datos. En otras, el volver hacia atr\u00e1s nos permitir\u00e1 comprobar si el modelo obtenido es el resultado esperado.</p> <p>Para ello, sabiendo las relaciones entre las claves primarias y las claves ajenas, las claves \u00fanicas y la restricciones de valor no nulo, podemos dibujar el modelo ER a partir del esquema l\u00f3gico.</p> <p>Algunas reglas que ya debes conocer son:</p> <ul> <li> <p>Si un atributo es clave ajena y no es clave primaria:</p> <ul> <li>Si es clave \u00fanica, la relaci\u00f3n es 1:1</li> <li>Si no, la relaci\u00f3n es 1:N</li> <li>Si el atributo tambi\u00e9n es valor no nulo (VNN), entonces la cardinalidad m\u00ednima es 1.</li> </ul> </li> <li> <p>Si un atributo es clave ajena y es clave primaria:</p> <ul> <li>si toda la clave primaria es clave ajena, es un hijo</li> <li>si la clave ajena es un subconjunto incompleto de la clave primaria, es una restricci\u00f3n de ID</li> <li>si la clave ajena es un subconjunto completo de la clave primaria, es una relaci\u00f3n N:M</li> </ul> </li> </ul> <p>FIXME: ejemplo</p>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#referencias","title":"Referencias","text":"<ul> <li> <p>Herramienta gr\u00e1fica ERDPlus para la realizaci\u00f3n de diagramas de modelos relacionales.</p> </li> <li> <p>Materiales sobre el m\u00f3dulo de BD:</p> <ul> <li>Model Relacional - Institut Obert de Catalunya</li> <li>Dise\u00f1o l\u00f3gico relacional de Jorge S\u00e1nchez</li> <li>Bases de datos relacionales de Javier Guti\u00e9rrez</li> <li>Dise\u00f1o de modelo l\u00f3gicos normalizados de gestionbasesdatos.readthedocs.io</li> <li>Dise\u00f1o l\u00f3gico: Universidad de Sevilla</li> </ul> </li> </ul>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"04mr-eer.html#actividades","title":"Actividades","text":"<ul> <li> <p>AC401. (RABD.6 // CE6a, CE6b, CE6c, CE6d, CE6e, CE6gc // 3p) Supongamos el siguiente modelo ER donde representamos un sistema de informaci\u00f3n donde modelamos los datos de un entrenador y los jugadores de un equipo de baloncesto. De momento, s\u00f3lo modelamos la relaci\u00f3n entre el entrenador y los jugadores:</p> <p> Actividad 401 </p> <p>Obt\u00e9n el esquema relacional y a continuaci\u00f3n, mediante ERDPlus, dibuja el modelo relacional.</p> </li> </ul> <p></p> <ul> <li> <p>AC402. (RABD.6 // CE6a, CE6b, CE6c, CE6d, CE6e, CE6gc // 3p) Sobre el ejercicio anterior, vamos a a\u00f1adir la entidad <code>EQUIPO</code> con el nombre del mismo, su logotipo, direcci\u00f3n y a\u00f1o de creaci\u00f3n. Claramente, cada equipo s\u00f3lo tiene un \u00fanico entrenador, y un entrenador s\u00f3lo puede serlo de un equipo.</p> <p>Se pide:</p> <ul> <li>Modifica el modelo ER para a\u00f1adir la nueva entidad y la relaci\u00f3n necesaria</li> <li>Modifica el modelo relacional a partir del nuevo modelo ER.</li> </ul> </li> </ul> <p></p> <ul> <li> <p>AC403. (RABD.6 // CE6a, CE6b, CE6c, CE6d, CE6e, CE6gc // 3p) Tenemos el siguiente modelo ER que representa las diferentes ediciones que de un libro publica una editorial, y los autores que escriben los libros:</p> <p> Actividad 403 </p> <p>Obt\u00e9n el esquema relacional y completa el diccionario de datos.</p> </li> </ul> <p></p> <ul> <li> <p>AR404. (RABD.6 // CE6a, CE6b, CE6c, CE6d, CE6e, CE6f // 3p) Realiza el esquema l\u00f3gico mediante un modelo relacional del siguiente modelo ER (es la soluci\u00f3n del Supuesto de Carreteras de la sesi\u00f3n de Modelo ER):</p> <p> Actividad 404 </p> </li> </ul> <p></p> <ul> <li> <p>AP405. (RABD.6 // CE6a, CE6b, CE6c, CE6d, CE6e, CE6f // 3p) Tenemos el siguiente modelo ER sobre la organizaci\u00f3n de una empresa en departamentos y las caracter\u00edsticas de sus empleados:</p> <p> Actividad 405 </p> <p>Obt\u00e9n el esquema relacional e indica las cardinalidades de las relaciones.</p> </li> </ul> <p></p> <ul> <li> <p>AC406. (RABD.6 // CE6a, CE6b, CE6c, CE6d, CE6e, CE6f // 3p) A partir del siguiente modelo ER que contiene restricciones de cardinalidad m\u00ednima una y restricciones de identificaci\u00f3n, se pide:</p> <p> Actividad 406 </p> <ul> <li>Genera el modelo relacional.</li> <li>Indica las cardinalidades de las relaciones.</li> <li>Rellena tres tablas con datos ficticios (al menos 3 registros por tabla), ya sean datos relacionados o no, conforme consideres.</li> </ul> </li> </ul> <p></p> <ul> <li> <p>AC407. (RABD.6 // CE6a, CE6b, CE6c, CE6d, CE6e, CE6f // 3p) Crea el modelo relacional a partir del modelo conceptual presentado en la actividad 203 sobre un centro educativo.</p> <p> Modelo ER Centro Educativo </p> </li> </ul> <p></p> <ul> <li> <p>PR408. (RABD.6 // CE6a, CE6b, CE6c, CE6d, CE6e, CE6f // 10p) Crea el modelo relacional a partir del modelo conceptual presentado en la actividad 214 sobre una cocina de un restaurante.</p> <p> Modelo ER Cocina </p> </li> </ul> <p></p> <ul> <li> <p>AC409. (RABD.6 // CE6a, CE6e // 3p)) A partir de los siguientes esquemas l\u00f3gicos, dibuja el modelo ER:</p> <ol> <li> <p>Esquema 1</p> <p><code> A (a0, a1) \u00b7 PK: (a0) </code></p> <p><code> B (b0, b1, b2, a0<code>*</code>, c0<code>*</code>) \u00b7 PK: (a0) \u00b7 FK: (a0) \u2192 A \u00b7 FK: (c0) \u2192 C </code></p> <p><code> C (c0, c1) \u00b7 PK: (c0) </code></p> <p><code> M (c0<code>*</code>, m, n) \u00b7 PK: (c0, m) \u00b7 FK: (c0) \u2192 C </code></p> </li> <li> <p>Esquema 2</p> <p><code> A (a0, a1, bo<code>*</code>) \u00b7 PK: (a0) \u00b7 UK: (b0) \u00b7 VNN: (b0) \u00b7 FK: (b0) \u2192 B </code></p> <p><code> B (b0, b1) \u00b7 PK: (b0) </code></p> <p><code> C (b0<code>*</code>, a0<code>*</code>, c0) \u00b7 PK: (b0, a0) \u00b7 FK: (b0) \u2192 B \u00b7 FK: (a0) \u2192 A \u00b7 VNN: (c0) </code></p> </li> </ol> </li> </ul> <p></p> <ul> <li> <p>AC410. (RABD.6 // CE6a, CE6e // 3p)) A partir de los siguiente modelo relacional, dibuja el diagrama ER:</p> <p><code> EMPLEADO (num, dni, nombre, direccion, banco) \u00b7 PK: (num) \u00b7 UK: (dni) </code></p> <p><code> MEDICO (num<code>*</code>, espec, anyo) \u00b7 PK: (num) \u00b7 FK: (num) \u2192 EMPLEADO </code></p> <p><code> SOCIO (num<code>*</code>, dni, nombre, direccion, fechaNac, banco, medicoChequeo<code>*</code>, fechaChequeo, resultadoChequeo) \u00b7 PK: (num) \u00b7 UK: (dni) \u00b7 FK: (num) \u2192 EMPLEADO \u00b7 FK: (medicoChequeo) \u2192 MEDICO </code></p> <p><code> TAQUILLA (num<code>*</code>, estado, tama\u00f1o) \u00b7 PK: (nun) </code></p> <p><code> FIJA (num<code>*</code>, socio<code>*</code>) \u00b7 PK: (num) \u00b7 FK: (num) \u2192 TAQUILLA \u00b7 FK: (socio) \u2192 SOCIO </code></p> <p><code> DIARIA (num<code>*</code>, socio<code>*</code>) \u00b7 PK: (num) \u00b7 FK: (num) \u2192 TAQUILLA \u00b7 FK: (socio) \u2192 SOCIO </code></p> <p><code> DISCIPLINA (nombre, descripcion) \u00b7 PK: (nombre) </code></p> <p><code> MONITOR (num<code>*</code>, fnac, disciplina<code>*</code>) \u00b7 PK: (num) \u00b7 FK: (num) \u2192 EMPLEADO \u00b7 FK: (disciplina) \u2192 DISCIPLINA </code></p> <p><code> SESION (dia, hora, sala, monitor<code>*</code>, disciplina<code>*</code>) \u00b7 PK: (dia, hora, sala) \u00b7 FK: (monitor) \u2192 MONITOR \u00b7 FK: (disciplina) \u2192 DISCIPLINA \u00b7 VNN: (monitor) \u00b7 VNN: (disciplina) </code></p> <p><code> TECNICO (num<code>*</code>) \u00b7 PK: (num) \u00b7 FK: (num) \u2192 EMPLEADO </code></p> <p><code> MODELO (codigo, descripcion, empresas, tecnico<code>*</code>) \u00b7 PK: (codigo) \u00b7 FK: (tecnico) \u2192 TECNICO </code></p> <p><code> APARATO (num, codigo<code>*</code>, fechaAdquisic, estado) \u00b7 PK: (num, codigo)  \u00b7 FK: (codigo) \u2192 MODELO </code></p> </li> </ul> <p></p> <ul> <li>AR411. De MR a ER</li> </ul> <p></p> <ul> <li> <p>PY412. (RABD.6 // CE6a, CE6b, CE6c, CE6d, CE6e, CE6f, CE6g // 30p) Una vez finalizamos el bloque de Dise\u00f1o de bases de datos, ya estamos en condiciones de finalizar el reto Dise\u00f1amos.</p> <p>Para ello, a partir del modelo conceptual obtenido en la actividad de proyecto 215, cada equipo debe entregar:</p> <ul> <li>El modelo ER</li> <li>El modelo MR obtenido a partir del modelo ER</li> <li>Comprobaci\u00f3n de que el modelo MR est\u00e1 normalizado</li> <li>Diccionario de datos del MR</li> </ul> <p>En las fechas indicadas por el docente, cada equipo entregar\u00e1 un informe con los diferentes artefactos generados y presentar\u00e1 al resto de la clase los modelos generados, mediante un exposici\u00f3n de m\u00e1ximo 10 minutos por equipo.</p> <p>Se utilizar\u00e1 una r\u00fabrica para su evaluaci\u00f3n en base a la siguiente lista de cotejo:</p> <ul> <li>El modelo relacional refleja todo el modelo conceptual.</li> <li>Se argumentan las decisiones de dise\u00f1o tomadas por el equipo. </li> <li>Se justifica que el modelo relacional obtenido est\u00e1 normalizado.</li> <li>El diccionario de datos est\u00e1 completo.</li> <li>El informe entregado no contiene faltas de ortograf\u00eda.</li> <li>El informe entregado tiene un formato adecuado (portada, apartados, autores, etc...).</li> <li>Todo el equipo participa tanto en el informe como en la exposici\u00f3n de forma equitativa.</li> </ul> </li> </ul> <p></p> <ul> <li> <p>PO413. (RABD.6 // CE6a, CE6b, CE6c, CE6d, CE6e, CE6f, CE6g // 30p) La prueba objetiva que agrupa todo el resultado de aprendizaje consistir\u00e1 en:</p> <ul> <li>Crear un modelo ER a partir de un sistema de informaci\u00f3n</li> <li>Interpreta un modelo ER</li> <li>Crear un modelo relacional a partir de un modelo ER (basado en uno de los modelos generados en el reto de la actividad anterior)</li> <li>Crear un modelo ER a partir de un modelo relacional</li> </ul> </li> </ul>","tags":["Modelo Entidad Relaci\u00f3n","Modelo Relacional","RA6"]},{"location":"05ddl.html","title":"Modelo F\u00edsico: SQL - Instrucciones DDL y DML","text":"","tags":["Modelo F\u00edsico","SQL","SQL - DDL","SQL - DML","RA2","RA4"]},{"location":"05ddl.html#propuesta-didactica","title":"Propuesta did\u00e1ctica","text":"<p>Una vez conocido el modelo relacional, en esta unidad vamos a comenzar a trabajar el RA2: Crea bases de datos definiendo su estructura y las caracter\u00edsticas de sus elementos seg\u00fan el modelo relacional.</p>","tags":["Modelo F\u00edsico","SQL","SQL - DDL","SQL - DML","RA2","RA4"]},{"location":"05ddl.html#criterios-de-evaluacion","title":"Criterios de evaluaci\u00f3n","text":"<ul> <li>CE2a: Se ha analizado el formato de almacenamiento de la informaci\u00f3n. </li> <li>CE2b: Se han creado las tablas y las relaciones entre ellas. </li> <li>CE2c: Se han seleccionado los tipos de datos adecuados. </li> <li>CE2d: Se han definido los campos clave en las tablas. </li> <li>CE2e: Se han implantado las restricciones reflejadas en el dise\u00f1o l\u00f3gico. </li> </ul>","tags":["Modelo F\u00edsico","SQL","SQL - DDL","SQL - DML","RA2","RA4"]},{"location":"05ddl.html#contenidos","title":"Contenidos","text":"<p>Bases de datos relacionales:</p> <ul> <li>Lenguaje de descripci\u00f3n de datos (DDL).</li> </ul> <p>Tratamiento de datos:</p> <ul> <li>Inserci\u00f3n, borrado y modificaci\u00f3n de registros.</li> <li>Integridad referencial.</li> </ul> <p>Cuestionario inicial</p> <ol> <li>xxx</li> </ol>","tags":["Modelo F\u00edsico","SQL","SQL - DDL","SQL - DML","RA2","RA4"]},{"location":"05ddl.html#referencias","title":"Referencias","text":"<p>https://jorgesanchez.net/manuales/sql/intro-sql-sql2016.html</p>","tags":["Modelo F\u00edsico","SQL","SQL - DDL","SQL - DML","RA2","RA4"]},{"location":"tags.html","title":"Tags","text":"<p>Los tags m\u00e1s empleados en los apuntes son:</p>"},{"location":"tags.html#fundamentos","title":"Fundamentos","text":"<ul> <li>Introducci\u00f3n a las bases de datos</li> </ul>"},{"location":"tags.html#modelo-entidad-relacion","title":"Modelo Entidad Relaci\u00f3n","text":"<ul> <li>Dise\u00f1o Conceptual - Modelo Entidad Relaci\u00f3n</li> <li>Dise\u00f1o L\u00f3gico - Transformaci\u00f3n del modelo ER a MR</li> </ul>"},{"location":"tags.html#modelo-fisico","title":"Modelo F\u00edsico","text":"<ul> <li>Modelo F\u00edsico - SQL - Instrucciones DDL y DML</li> </ul>"},{"location":"tags.html#modelo-relacional","title":"Modelo Relacional","text":"<ul> <li>Dise\u00f1o L\u00f3gico - Modelo Relacional</li> <li>Dise\u00f1o L\u00f3gico - Transformaci\u00f3n del modelo ER a MR</li> </ul>"},{"location":"tags.html#ra1","title":"RA1","text":"<ul> <li>Introducci\u00f3n a las bases de datos</li> </ul>"},{"location":"tags.html#ra2","title":"RA2","text":"<ul> <li>Modelo F\u00edsico - SQL - Instrucciones DDL y DML</li> </ul>"},{"location":"tags.html#ra4","title":"RA4","text":"<ul> <li>Modelo F\u00edsico - SQL - Instrucciones DDL y DML</li> </ul>"},{"location":"tags.html#ra6","title":"RA6","text":"<ul> <li>Dise\u00f1o Conceptual - Modelo Entidad Relaci\u00f3n</li> <li>Dise\u00f1o L\u00f3gico - Modelo Relacional</li> <li>Dise\u00f1o L\u00f3gico - Transformaci\u00f3n del modelo ER a MR</li> </ul>"},{"location":"tags.html#sql","title":"SQL","text":"<ul> <li>Modelo F\u00edsico - SQL - Instrucciones DDL y DML</li> </ul>"},{"location":"tags.html#sql-ddl","title":"SQL - DDL","text":"<ul> <li>Modelo F\u00edsico - SQL - Instrucciones DDL y DML</li> </ul>"},{"location":"tags.html#sql-dml","title":"SQL - DML","text":"<ul> <li>Modelo F\u00edsico - SQL - Instrucciones DDL y DML</li> </ul>"}]}